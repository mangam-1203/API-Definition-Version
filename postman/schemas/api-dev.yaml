openapi: 3.0.3
info:
  title: 'API Dev Platform APIs #reference'
  version: 1.62.0
  description: >-
    This OpenAPI Specification was generated from Postman Collection using
    [openapi-to-postman](https://github.com/postmanlabs/openapi-to-postman)
  x-newrelic-app-id:
    - 754476434
    - 967463972
    - 981553967
servers:
  - url: 'https://api-dev-platform.postman.tech'
paths:
  /apis/{apiId}/subscribe:
    post:
      tags:
        - Socket only endpoints
      summary: Subscribe to an API for events
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - subscription
                    properties:
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              examples:
                Example1:
                  value:
                    meta:
                      model: api
                      action: subscribe
                    data:
                      subscription:
                        id: 'apis/{{apiId}}'
                Example2:
                  value:
                    meta:
                      model: api
                      action: subscribe
                    data:
                      subscription:
                        id: 'apis/{{apiId}}'
          description: Subscribe to an API for events
    delete:
      tags:
        - Socket only endpoints
      summary: Unsubscribe to an API for events
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - actionisisisi
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - subscription
                    properties:
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              example:
                meta:
                  model: api
                  action: unsubscribe
                data:
                  subscription:
                    id: 'apis/{{apiId}}'
          description: Unsubscribe to an API for events
  /apis/subscribe:
    post:
      tags:
        - Socket only endpoints
      summary: Subscribe to api events for a collection
      parameters:
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: collection
          in: query
          schema:
            type: string
          example: '{{collectionUID}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example: {}
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - subscription
                    properties:
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: array
                            items:
                              type: string
              examples:
                Example1:
                  value:
                    meta:
                      model: api
                      action: subscribe
                    data:
                      subscription:
                        id: 'workspace/{{workspaceId}}/apis'
                Example2:
                  value:
                    meta:
                      model: api
                      action: subscribe
                    data:
                      subscription:
                        id: 'workspace/{{workspaceId}}/apis'
                Example3:
                  value:
                    meta:
                      model: collection
                      action: subscribeForApi
                    data:
                      subscription:
                        id: 'collections/{{collectionUid}}/apis'
                Example4:
                  value:
                    meta:
                      model: collection
                      action: subscribeForApi
                    data:
                      subscription:
                        id:
                          - collections/U1-CID1/apis
                          - collections/U1-CID2/apis
          description: Subscribe for all API events for a user
    delete:
      tags:
        - Socket only endpoints
      summary: UnSubscribe to api events for a collection
      parameters:
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: collection
          in: query
          schema:
            type: string
          example: '{{collectionUID}}'
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
            example: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - subscription
                    properties:
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              example:
                meta:
                  model: api
                  action: unsubscribe
                data:
                  subscription:
                    id: 'workspace/{{workspaceId}}/apis'
          description: Unsubscribe for all API events for a user
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
              example:
                meta:
                  model: collection
                  action: unsubscribeForApi
                data: {}
          description: Subscribe to api events for a collection
  /apis:
    post:
      tags:
        - API
      summary: Create an API
      description: >-
        This endpoint creates an API. The ID will be generated by the server.


        ### Parameters


        *name*: This is the name of the API. (Required)<br>

        *summary*: This is a short summary that describes the API.
        (Optional)<br>

        *description*: This is a long description that can support markdown.
        (Optional)<br>

        *workspace*: The workspace ID in which the API is supposed to be created
        in. (Required)<br>

        *versions*: Array of versions that are to be created for this API. If no
        versions are provided, a default version "0.1" will be created for you.
        (Optional)
      parameters:
        - name: workspace
          in: query
          schema:
            type: string
          description: >-
            Required. This is the workspace ID in which this API will be created
            in.
          example: '{{workspaceId}}'
        - name: template
          in: query
          schema:
            type: string
          example: sample
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                summary:
                  type: string
                description:
                  type: string
                versions:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        format: utc-millisec
            example:
              name: Sync Service API
              summary: This is supposed to be a short summary.
              description: This is supposed to handle markdown *descriptions*.
              versions:
                - name: '1.0'
                - name: '2.0'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - summary
                      - description
                      - createdBy
                      - createdAt
                      - updatedAt
                      - versions
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      summary:
                        type: string
                        nullable: true
                      description:
                        type: string
                        nullable: true
                      createdBy:
                        type: string
                        format: utc-millisec
                      createdAt:
                        type: string
                        format: style
                      updatedAt:
                        type: string
                        format: date-time
                      versions:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                            - createdBy
                            - createdAt
                            - updatedAt
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                              format: utc-millisec
                            createdBy:
                              type: string
                              format: utc-millisec
                            createdAt:
                              type: string
                              format: style
                            updatedAt:
                              type: string
                              format: date-time
                            api:
                              type: string
                            updatedBy:
                              type: string
                              format: utc-millisec
                            schemas:
                              type: object
                              properties:
                                  schema:
                                      type: string
                                  type:
                                      type: string
                                  language:
                                      type: string
                                  checksum:
                                      type: string
                      updatedBy:
                        type: string
                        format: utc-millisec
                  revision:
                    type: integer
              examples:
                Example1:
                  value:
                    model_id: 387c2863-6ee3-4a56-8210-225f774edade
                    meta:
                      model: api
                      action: create
                    data:
                      id: 387c2863-6ee3-4a56-8210-225f774edade
                      name: Sync API
                      summary: This is a summary
                      description: >-
                        This is a description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.
                      createdBy: '5665'
                      createdAt: '2019-02-12 19:34:49'
                      updatedAt: '2019-02-12 19:34:49'
                      versions:
                        - id: 07a9434a-b502-4c3c-aa82-677db74e4b74
                          name: '1.0'
                          createdBy: '5665'
                          createdAt: '2019-02-12 19:34:49'
                          updatedAt: '2019-02-12 19:34:49'
                Example2:
                  value:
                    model_id: 387c2863-6ee3-4a56-8210-225f774edade
                    meta:
                      model: api
                      action: create
                    data:
                      id: 387c2863-6ee3-4a56-8210-225f774edade
                      name: Sync API
                      summary: This is a summary
                      description: This is supposed to handle markdown *descriptions*.
                      createdBy: '5665'
                      createdAt: '2019-02-12 19:34:49'
                      updatedAt: '2019-02-12 19:34:49'
                      versions:
                        - id: 07a9434a-b502-4c3c-aa82-677db74e4b74
                          name: '0.1'
                          createdBy: '5665'
                          createdAt: '2019-02-12 19:34:49'
                          updatedAt: '2019-02-12 19:34:49'
                Example3:
                  value:
                    model_id: 387c2863-6ee3-4a56-8210-225f774edade
                    meta:
                      model: api
                      action: create
                    data:
                      id: 387c2863-6ee3-4a56-8210-225f774edade
                      name: Sync API
                      summary: This is a summary
                      description: This is supposed to handle markdown *descriptions*.
                      createdBy: '5665'
                      createdAt: '2019-02-12 19:34:49'
                      updatedAt: '2019-02-12 19:34:49'
                      versions:
                        - id: 07a9434a-b502-4c3c-aa82-677db74e4b74
                          name: '1.0'
                          createdBy: '5665'
                          createdAt: '2019-02-12 19:34:49'
                          updatedAt: '2019-02-12 19:34:49'
                Example4:
                  value:
                    model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    meta:
                      model: api
                      action: create
                    data:
                      createdBy: '7732157'
                      updatedBy: '7732157'
                      id: 8fe00285-9991-455a-a8dc-af3115d3db24
                      name: SimpleKart E-Commerce API
                      summary: null
                      description: null
                      createdAt: '2020-05-13T18:49:31.123Z'
                      updatedAt: '2020-05-13T18:49:31.123Z'
                      versions:
                        - id: 559da235-7d58-460a-ac17-7431e6304c94
                          name: 1.0.0
                          api: 8fe00285-9991-455a-a8dc-af3115d3db24
                          createdBy: '7732157'
                          updatedBy: '7732157'
                          createdAt: '2020-05-13T18:49:31.124Z'
                          updatedAt: '2020-05-13T18:49:31.124Z'
                          schemas: []
                    revision: 14716072258
          description: Create an API (w/ API Version and relations)
          headers:
            Server:
              schema:
                type: string
              example: nginx
            Date:
              schema:
                type: string
                format: style
              example: 'Wed, 13 May 2020 18:49:32 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=099506703176c06f
            x-srv-span:
              schema:
                type: string
              example: v=1;s=87845b501f7da2f5
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"265-f5WHLdvCvtTwQFZL/JO4hg"
            Vary:
              schema:
                type: string
              example: Accept-Encoding
            Content-Encoding:
              schema:
                type: string
              example: gzip
    get:
      tags:
        - API
      summary: Get all APIs
      description: This endpoint returns an API.
      parameters:
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: relationType
          in: query
          schema:
            type: string
          description: >-
            Supports non-collection relation types - schema, mock, monitor,
            environment
          example: '{{relationType}}'
        - name: relationId
          in: query
          schema:
            type: string
          description: >-
            ID of the entity which is a relation e.g. schemaId, mockId,
            monitorId etc
          example: '{{relationId}}'
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
        - name: X-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    nullable: true
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - createdAt
                      - updatedAt
                      - createdBy
                      - updatedBy
                      - apiVersion
                    nullable: true
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                      apiVersion:
                        type: object
                        required:
                          - api
                          - id
                          - name
                          - createdAt
                          - updatedAt
                          - createdBy
                          - updatedBy
                        properties:
                          api:
                            type: string
                          id:
                            type: string
                          name:
                            type: string
                          createdAt:
                            type: string
                            format: date-time
                          updatedAt:
                            type: string
                            format: date-time
                          createdBy:
                            type: string
                          updatedBy:
                            type: string
                items:
                  type: object
                  properties:
                    model_id:
                      type: string
                    meta:
                      type: object
                      properties:
                        model:
                          type: string
                        action:
                          type: string
                      required:
                        - model
                        - action
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        summary:
                          type: string
                        description:
                          type: string
                        createdBy:
                          type: object
                          properties:
                            id:
                              type: string
                              format: utc-millisec
                            name:
                              type: string
                            username:
                              type: string
                            email:
                              type: string
                              format: email
                            profilePicUrl:
                              type: string
                              format: uri
                          required:
                            - id
                            - name
                            - username
                            - email
                            - profilePicUrl
                        createdAt:
                          type: string
                          format: style
                        updatedAt:
                          type: string
                          format: date-time
                      required:
                        - id
                        - name
                        - summary
                        - description
                        - createdBy
                        - createdAt
                        - updatedAt
                  required:
                    - model_id
                    - meta
                    - data
              examples:
                Example1:
                  value:
                    - model_id: 387c2863-6ee3-4a56-8210-225f774edade
                      meta:
                        model: api
                        action: find
                      data:
                        id: 387c2863-6ee3-4a56-8210-225f774edade
                        name: Sync API
                        summary: This is a summary
                        description: >-
                          This is a description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.
                        createdBy:
                          id: '5665'
                          name: Kartik Jain
                          username: kartik.jain
                          email: kartik@getpostman.com
                          profilePicUrl: 'https://thispersondoesnotexist.com/image'
                        createdAt: '2019-02-12 19:34:49'
                        updatedAt: '2019-02-12 19:34:49'
                    - model_id: abc12345-6ee3-4a56-8210-225f774edade
                      meta:
                        model: api
                        action: find
                      data:
                        id: abc12345-6ee3-4a56-8210-225f774edade
                        name: Mock API
                        summary: This is a summary
                        description: >-
                          This is a description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.
                        createdBy:
                          id: '6104'
                          name: SUjay Venaik
                          username: supa.striker
                          email: sujay@getpostman.com
                          profilePicUrl: 'https://thispersondoesnotexist.com/image'
                        createdAt: '2019-02-12 19:34:49'
                        updatedAt: '2019-02-12 19:34:49'
                Example2:
                  value:
                    - model_id: 40b354f3-0efa-4bbd-aaef-786039764373
                      meta:
                        model: api
                        action: find
                      data:
                        id: 40b354f3-0efa-4bbd-aaef-786039764373
                        name: API 2
                        summary: This is a summary
                        description: This is a description
                        createdBy:
                          id: U2
                          name: U2
                          username: U2
                          email: ''
                          profilePicUrl: 'https://thispersondoesnotexist.com/image'
                        createdAt: '2020-11-26T04:48:47.000Z'
                        updatedAt: '2020-11-26T04:48:47.000Z'
                Example3:
                  value:
                    model_id: 85129485-9433-4a72-ab4e-4117cb1e1ef0
                    meta:
                      model: api
                      action: find
                    data:
                      id: 1afb3a16-e282-46da-a3a3-941fb324d43f
                      name: some api
                      createdAt: '2021-07-29T10:21:27.000Z'
                      updatedAt: '2021-07-28T10:21:27.000Z'
                      createdBy: U1
                      updatedBy: U1
                      apiVersion:
                        api: 1afb3a16-e282-46da-a3a3-941fb324d43f
                        id: bc9d0e64-dda4-4792-85f3-95ec0cc7834e
                        name: Draft
                        createdAt: '2021-07-29T10:21:27.000Z'
                        updatedAt: '2021-07-29T10:21:27.000Z'
                        createdBy: U1
                        updatedBy: U1
                Example4:
                  value:
                    model_id: null
                    meta:
                      model: api
                      action: find
                    data: null
          description: Get all APIs (w/ createdBy populated)
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - type
                          - uid
                        properties:
                          type:
                            type: string
                          uid:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: invalidRelationTypeError
                      message: The provided relation type is invalid.
                      details:
                        type: qwhqiuuh
                Example2:
                  value:
                    error:
                      name: invalidUIDError
                      message: The ID provided is not a valid UID.
                      details:
                        uid: euthi3uh4ivh
          description: 'Validation: Relation Type is not valid'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: color
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the relation you are looking for
                  details:
                    model: relation
                    model_id: '123'
                    owner: '610363'
          description: Relation Not Found
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Fri, 06 Aug 2021 10:14:49 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            Vary:
              schema:
                type: string
              example: Origin
            Access-Control-Allow-Credentials:
              schema:
                type: boolean
              example: true
            X-DNS-Prefetch-Control:
              schema:
                type: string
              example: 'off'
            X-Frame-Options:
              schema:
                type: string
              example: DENY
            Strict-Transport-Security:
              schema:
                type: string
              example: max-age=15552000; includeSubDomains
            X-Download-Options:
              schema:
                type: string
              example: noopen
            X-Content-Type-Options:
              schema:
                type: string
              example: nosniff
            Referrer-Policy:
              schema:
                type: string
              example: same-origin
            X-XSS-Protection:
              schema:
                type: string
              example: 1; mode=block
            Content-Encoding:
              schema:
                type: string
              example: gzip
        default:
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    model_id:
                      type: string
                    meta:
                      type: object
                      properties:
                        model:
                          type: string
                        action:
                          type: string
                      required:
                        - model
                        - action
                    data:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        summary:
                          type: string
                        description:
                          type: string
                        createdBy:
                          type: string
                          format: utc-millisec
                        createdAt:
                          type: string
                          format: style
                        updatedAt:
                          type: string
                        versions:
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - name
                              - createdBy
                              - updatedBy
                              - createdAt
                              - updatedAt
                            properties:
                              id:
                                type: string
                              name:
                                type: string
                              createdBy:
                                type: string
                                format: utc-millisec
                              updatedBy:
                                type: string
                                format: utc-millisec
                              createdAt:
                                type: string
                                format: style
                              updatedAt:
                                type: string
                      required:
                        - id
                        - name
                        - summary
                        - description
                        - createdBy
                        - createdAt
                        - updatedAt
                  required:
                    - model_id
                    - meta
                    - data
              examples:
                Example1:
                  value:
                    - model_id: 387c2863-6ee3-4a56-8210-225f774edade
                      meta:
                        model: api
                        action: find
                      data:
                        id: 387c2863-6ee3-4a56-8210-225f774edade
                        name: Sync API
                        summary: This is a summary
                        description: >-
                          This is a description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.
                        createdBy: '5665'
                        createdAt: '2019-02-12 19:34:49'
                        updatedAt: '2019-02-12 19:34:49'
                    - model_id: 12345678-6ee3-1234-6789-225f774edade
                      meta:
                        model: api
                        action: find
                      data:
                        id: 12345678-6ee3-1234-6789-225f774edade
                        name: Mock API
                        summary: This is a summary
                        description: >-
                          This is a description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.
                        createdBy: '5665'
                        createdAt: '2019-02-12 19:34:49'
                        updatedAt: '2019-02-12 19:34:49'
                Example2:
                  value:
                    - model_id: 387c2863-6ee3-4a56-8210-225f774edade
                      meta:
                        model: api
                        action: find
                      data:
                        id: 387c2863-6ee3-4a56-8210-225f774edade
                        name: Sync API
                        summary: This is a summary
                        description: >-
                          This is a description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.
                        createdBy: '5665'
                        createdAt: '2019-02-12 19:34:49'
                        updatedAt: '2019-02-12 19:34:49'
                        versions:
                          - id: 392355ae-5f06-47b7-a5b6-854b8be41bd5
                            name: '0.1'
                            createdBy: '5665'
                            updatedBy: '5665'
                            createdAt: '2018-12-22 12:34:56'
                            updatedAt: '2018-12-22 12:34:56'
                    - model_id: abc12345-6ee3-4a56-8210-225f774edade
                      meta:
                        model: api
                        action: find
                      data:
                        id: abc12345-6ee3-4a56-8210-225f774edade
                        name: Mock API
                        summary: This is a summary
                        description: >-
                          This is a description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.This is a
                          description.This is a description.
                        createdBy: '5665'
                        createdAt: '2019-02-12 19:34:49'
                        updatedAt: '2019-02-12 19:34:49'
                        versions:
                          - id: 392355ae-1234-5678-9012-854b8be41bd5
                            name: '0.3'
                            createdBy: '5665'
                            updatedBy: '5665'
                            createdAt: '2018-12-22 12:34:56'
                            updatedAt: '2018-12-22 12:34:56'
          description: Get all APIs
  /apis/{apiId}:
    put:
      tags:
        - API
      summary: Update an API
      description: |-
        This endpoint updates an API.

        ### Parameters

        *name*: This is the name of the API.
        *summary*: This is a short summary that describes the API.
        *description*: This is a long description that can support markdown.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                summary:
                  type: string
                description:
                  type: string
            example:
              name: Sync Pen test
              summary: This is supposed to be a short summary.
              description: This is supposed to handle markdown *descriptions*.
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - summary
                      - description
                      - createdBy
                      - updatedBy
                      - createdAt
                      - updatedAt
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      summary:
                        type: string
                      description:
                        type: string
                      createdBy:
                        type: string
                        format: utc-millisec
                      updatedBy:
                        type: string
                        format: utc-millisec
                      createdAt:
                        type: string
                        format: style
                      updatedAt:
                        type: string
              example:
                model_id: 392355ae-5f06-47b7-a5b6-854b8be41bd5
                meta:
                  model: api
                  action: update
                data:
                  id: 392355ae-5f06-47b7-a5b6-854b8be41bd5
                  name: Sync Service API
                  summary: This is supposed to be a short summary.
                  description: This is supposed to handle markdown *descriptions*.
                  createdBy: '5665'
                  updatedBy: '5665'
                  createdAt: '2018-12-22 09:09:09'
                  updatedAt: '2019-01-01 11:11:11'
          description: 'Success: Update an API'
    get:
      tags:
        - API
      summary: Get an API
      description: This endpoint returns an API with the provided id.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: populate
          in: query
          schema:
            type: string
          examples:
            Example1:
              value: versions
            Example2:
              value: schemas
            Example3:
              value: relations
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - summary
                      - description
                      - createdBy
                      - createdAt
                      - updatedAt
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      summary:
                        type: string
                      description:
                        type: string
                      createdBy:
                        type: string
                        format: utc-millisec
                      createdAt:
                        type: string
                        format: style
                      updatedAt:
                        type: string
                        format: date-time
                      updatedBy:
                        type: string
                        format: utc-millisec
                      team:
                        type: string
                        nullable: true
                      versions:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            schemas:
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - type
                                  - language
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                  language:
                                    type: string
                            relations:
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - model
                                  - type
                                  - modelId
                                properties:
                                  id:
                                    type: string
                                  model:
                                    type: string
                                  type:
                                    type: string
                                  modelId:
                                    type: string
              examples:
                Example1:
                  value:
                    model_id: 387c2863-6ee3-4a56-8210-225f774edade
                    meta:
                      model: api
                      action: find
                    data:
                      id: 387c2863-6ee3-4a56-8210-225f774edade
                      name: Sync API
                      summary: This is a summary
                      description: >-
                        This is a description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.
                      createdBy: '5665'
                      createdAt: '2019-02-12 19:34:49'
                      updatedAt: '2019-02-12 19:34:49'
                Example2:
                  value:
                    model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    meta:
                      model: api
                      action: findone
                    data:
                      createdBy: '7732157'
                      updatedBy: '7732157'
                      team: null
                      id: 8fe00285-9991-455a-a8dc-af3115d3db24
                      name: Sync Pen test
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2020-05-13T18:49:31.000Z'
                      updatedAt: '2020-05-13T19:01:31.000Z'
                      versions:
                        - id: 559da235-7d58-460a-ac17-7431e6304c94
                          name: 1.0.0
                Example3:
                  value:
                    model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    meta:
                      model: api
                      action: findone
                    data:
                      createdBy: '7732157'
                      updatedBy: '7732157'
                      team: null
                      id: 8fe00285-9991-455a-a8dc-af3115d3db24
                      name: Sync Pen test
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2020-05-13T18:49:31.000Z'
                      updatedAt: '2020-05-13T19:01:31.000Z'
                      versions:
                        - id: 559da235-7d58-460a-ac17-7431e6304c94
                          name: 1.0.0
                          schemas:
                            - id: e2b2dd33-6261-4ba7-b6a8-cc21b633c101
                              type: openapi3
                              language: yaml
                Example4:
                  value:
                    model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    meta:
                      model: api
                      action: findone
                    data:
                      createdBy: '7732157'
                      updatedBy: '7732157'
                      team: null
                      id: 8fe00285-9991-455a-a8dc-af3115d3db24
                      name: Sync Pen test
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2020-05-13T18:49:31.000Z'
                      updatedAt: '2020-05-13T19:01:31.000Z'
                      versions:
                        - id: 559da235-7d58-460a-ac17-7431e6304c94
                          name: 1.0.0
                          schemas:
                            - id: e2b2dd33-6261-4ba7-b6a8-cc21b633c101
                              type: openapi3
                              language: yaml
                          relations:
                            - id: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                              model: environment
                              type: environment
                              modelId: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                            - id: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                              model: environment
                              type: environment
                              modelId: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                            - id: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                              model: environment
                              type: environment
                              modelId: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                            - id: 7681c25b-5c50-44a6-8724-fe1e71550160
                              model: mock
                              type: mock
                              modelId: 7681c25b-5c50-44a6-8724-fe1e71550160
                            - id: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                              model: monitor
                              type: monitor
                              modelId: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                            - id: 5b32caea-903c-472e-81a2-2cb054ede666
                              model: collection
                              type: documentation
                              modelId: 7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            - id: b26bc935-7422-4f73-8d03-9bf212fb48ba
                              model: collection
                              type: testsuite
                              modelId: 7732157-37350b62-41f3-428a-8bd5-fec517bb4f43
                            - id: 35c6bdbd-d602-4b37-9c87-1640fc8025c8
                              model: collection
                              type: integrationtest
                              modelId: 7732157-6537c169-8d02-413f-94f3-4dda79355a90
                            - id: bb69b435-a90a-44fe-aa49-f580eeb1be88
                              model: collection
                              type: contracttest
                              modelId: 7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac
                Example5:
                  value:
                    model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    meta:
                      model: api
                      action: findone
                    data:
                      createdBy: '7732157'
                      updatedBy: '7732157'
                      team: null
                      id: 8fe00285-9991-455a-a8dc-af3115d3db24
                      name: Sync Pen test
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2020-05-13T18:49:31.000Z'
                      updatedAt: '2020-05-13T19:01:31.000Z'
                      versions:
                        - id: 559da235-7d58-460a-ac17-7431e6304c94
                          name: 1.0.0
                          relations:
                            - id: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                              model: environment
                              type: environment
                              modelId: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                            - id: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                              model: environment
                              type: environment
                              modelId: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                            - id: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                              model: environment
                              type: environment
                              modelId: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                            - id: 7681c25b-5c50-44a6-8724-fe1e71550160
                              model: mock
                              type: mock
                              modelId: 7681c25b-5c50-44a6-8724-fe1e71550160
                            - id: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                              model: monitor
                              type: monitor
                              modelId: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                            - id: 5b32caea-903c-472e-81a2-2cb054ede666
                              model: collection
                              type: documentation
                              modelId: 7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            - id: 35c6bdbd-d602-4b37-9c87-1640fc8025c8
                              model: collection
                              type: integrationtest
                              modelId: 7732157-6537c169-8d02-413f-94f3-4dda79355a90
                            - id: b26bc935-7422-4f73-8d03-9bf212fb48ba
                              model: collection
                              type: testsuite
                              modelId: 7732157-37350b62-41f3-428a-8bd5-fec517bb4f43
                            - id: bb69b435-a90a-44fe-aa49-f580eeb1be88
                              model: collection
                              type: contracttest
                              modelId: 7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac
          description: Get an API
          headers:
            Server:
              schema:
                type: string
              example: nginx
            Date:
              schema:
                type: string
                example: 'Wed, 13 May 2020 19:07:34 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
                maximum: 50
              example: v=1;t=09ecd04a8bf99b7b
            x-srv-span:
              schema:
                type: string
              example: v=1;s=0fe5d258a4aa567b
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"714-Hk4+bWmwuYej76oShcO/fg"
            Vary:
              schema:
                type: string
              example: Accept-Encoding
            Content-Encoding:
              schema:
                type: string
              example: gzip
    delete:
      tags:
        - API
      summary: Delete an API
      description: This endpoint deletes an API.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: string
              example:
                model_id: 392355ae-5f06-47b7-a5b6-854b8be41bd5
                meta:
                  model: api
                  action: destroy
                data:
                  id: 392355ae-5f06-47b7-a5b6-854b8be41bd5
          description: 'Success: Delete an API'
  /apis/{apiId}/versions:
    get:
      tags:
        - API
      summary: Get all Versions for an API
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: array
                    items:
                      type: object
              example:
                model_id: 387c2863-6ee3-4a56-8210-225f774edade
                meta:
                  model: api
                  action: getApiVersions
                data:
                  - id: 024660a6-c837-46ca-91d8-7e8dd7c669de
                    name: '0.1'
                    summary: Summary
                    description: Description
                    createdBy: '5665'
                    createdAt: '2019-02-12 19:34:49'
                    updatedAt: '2019-02-12 19:34:49'
                    schema:
                      - 7980b6df-4dbb-493a-bce8-1d201e1173f9
                  - id: 00932d3b-20f1-454f-a77e-38b4023163ea
                    name: '0.2'
                    summary: Summary
                    description: Description
                    createdBy: '5665'
                    createdAt: '2019-02-12 19:34:49'
                    updatedAt: '2019-02-12 19:34:49'
                    schema:
                      - 2f4bbaa1-40a1-4ca6-90aa-b5ac6f587bc5
                  - id: c4dbe69a-3059-418d-9c3c-3d52288f2eb5
                    name: '1.0'
                    summary: Summary
                    description: Description
                    createdBy: '5665'
                    createdAt: '2019-02-12 19:34:49'
                    updatedAt: '2019-02-12 19:34:49'
                    schema: []
          description: Get all Versions for an API
    post:
      tags:
        - API Version
      summary: Create an API Version
      description: >-
        This endpoint creates an API Version for an API.


        The `name` field is a required field. If you want to copy relations from
        another API Version, then specify the `source` parameter.


        `source`:


        - `id` of the API Version from which the relations has to be copied from

        - `schema` should be true if it needs to be copied

        - `relations` should be an object which includes the types that need to
        copied
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  format: utc-millisec
                source:
                  type: object
                  required:
                    - id
                    - schema
                    - relations
                  properties:
                    id:
                      type: string
                    schema:
                      type: boolean
                    relations:
                      type: object
                      required:
                        - monitor
                        - mock
                        - documentation
                      properties:
                        monitor:
                          type: boolean
                        mock:
                          type: boolean
                        documentation:
                          type: boolean
            example:
              name: '1.0'
              source:
                id: '{{apiVersionId}}'
                schema: true
                relations:
                  monitor: true
                  mock: true
                  documentation: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - api
                      - createdBy
                      - updateBy
                      - createdAt
                      - updatedAt
                      - summary
                      - stage
                      - visibility
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                        format: utc-millisec
                      api:
                        type: string
                      createdBy:
                        type: string
                        format: utc-millisec
                      updateBy:
                        type: string
                        format: utc-millisec
                      createdAt:
                        type: string
                        format: style
                      updatedAt:
                        type: string
                      summary:
                        type: string
                      stage:
                        type: string
                      visibility:
                        type: string
              examples:
                Example1:
                  value:
                    model_id: d71cf403-c549-4c7c-9dc6-a6a105acf67c
                    meta:
                      model: apiversion
                      action: create
                    data:
                      id: d71cf403-c549-4c7c-9dc6-a6a105acf67c
                      name: '1.0'
                      api: 2b95d07c-8379-4bd1-924f-e7e1af185284
                      createdBy: '5665'
                      updateBy: '5665'
                      createdAt: '2019-02-12 19:34:49'
                      updatedAt: '2019-02-12 19:34:49'
                      summary: ''
                      stage: ''
                      visibility: ''
                Example2:
                  value:
                    model_id: d71cf403-c549-4c7c-9dc6-a6a105acf67c
                    meta:
                      model: apiversion
                      action: create
                    data:
                      id: d71cf403-c549-4c7c-9dc6-a6a105acf67c
                      name: '1.0'
                      api: 2b95d07c-8379-4bd1-924f-e7e1af185284
                      createdBy: '5665'
                      updateBy: '5665'
                      createdAt: '2019-02-12 19:34:49'
                      updatedAt: '2019-02-12 19:34:49'
                      summary: ''
                      stage: ''
                      visibility: ''
                Example3:
                  value:
                    model_id: d71cf403-c549-4c7c-9dc6-a6a105acf67c
                    meta:
                      model: apiversion
                      action: create
                    data:
                      id: d71cf403-c549-4c7c-9dc6-a6a105acf67c
                      name: '1.0'
                      api: 2b95d07c-8379-4bd1-924f-e7e1af185284
                      createdBy: '5665'
                      updateBy: '5665'
                      createdAt: '2019-02-12 19:34:49'
                      updatedAt: '2019-02-12 19:34:49'
                      summary: ''
                      stage: ''
                      visibility: ''
          description: >-
            Duplicate entities when creating an API version with entities copied
            from another version
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - api
                      - createdBy
                      - updateBy
                      - createdAt
                      - updatedAt
                      - summary
                      - stage
                      - visibility
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                        format: utc-millisec
                      api:
                        type: string
                      createdBy:
                        type: string
                        format: utc-millisec
                      updateBy:
                        type: string
                        format: utc-millisec
                      createdAt:
                        type: string
                        format: style
                      updatedAt:
                        type: string
                      summary:
                        type: string
                      stage:
                        type: string
                      visibility:
                        type: string
              example:
                model_id: d71cf403-c549-4c7c-9dc6-a6a105acf67c
                meta:
                  model: apiversion
                  action: create
                data:
                  id: d71cf403-c549-4c7c-9dc6-a6a105acf67c
                  name: '1.0'
                  api: 2b95d07c-8379-4bd1-924f-e7e1af185284
                  createdBy: '5665'
                  updateBy: '5665'
                  createdAt: '2019-02-12 19:34:49'
                  updatedAt: '2019-02-12 19:34:49'
                  summary: ''
                  stage: ''
                  visibility: ''
          description: Create an API Version
  /apis/{apiId}/team:
    get:
      tags:
        - API
      summary: '[Deprecated] Get team for an API'
      description: This returns the id of the team the API is part of
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - team
                    properties:
                      team:
                        type: string
                        format: color
                        nullable: true
              examples:
                Example1:
                  value:
                    model_id: ff23a129-4725-4355-b265-fe3edaf70769
                    meta:
                      model: api
                      action: getteam
                    data:
                      team: '123'
                Example2:
                  value:
                    model_id: ff23a129-4725-4355-b265-fe3edaf70769
                    meta:
                      model: api
                      action: getteam
                    data:
                      team: null
          description: 'Success: API belongs to a team'
        '404':
            content:
                application/json:
                    schema: 
                        $ref: '#/components/responses/error'
                    examples:
                        Example1:
                            value:
                                error:
                                    name: instanceNotFoundError
                                    message: We could not find the API you are looking for
                                    details: 
                                        model: api
                                        model_id: ff23a129-4725-4355-b265-fe3edaf70769
                                        owner: '55850'
            description: 'Given API was not found'
        '403':
            content:
                application/json:
                    schema:
                        $ref: '#/components/responses/error'
                    examples:
                        Example1:
                            value:
                                error:
                                    name: 'forbiddenError'
                                    message: You are not permitted to perform the action
                                    details: 
                                        model: api
                                        model_id: ff23a129-4725-4355-b265-fe3edaf70769
                                        owner: '55850'
                                        message: You do not have access to perform this operation.
            description: 'User does not have access to view the API'
  /apis/{apiId}/roles:
    put:
      tags:
        - API
      summary: Update Roles of an API
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roles:
                  type: array
                  items:
                    type: object
                    required:
                      - entityType
                      - entityId
                      - roles
                    properties:
                      entityType:
                        type: string
                      entityId:
                        type: string
                      roles:
                        type: object
            example:
              roles:
                - entityType: team
                  entityId: T1
                  roles:
                    API_VIEWER:
                      objects:
                        - objectType: api
                          objectId: 8a0b58ae-1535-4178-95e5-5aa2eb50a2d3
                - entityType: user
                  entityId: U2
                  roles:
                    API_EDITOR:
                      objects:
                        - objectType: api
                          objectId: 8a0b58ae-1535-4178-95e5-5aa2eb50a2d3
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  data:
                    type: object
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
              example:
                model_id: 8a0b58ae-1535-4178-95e5-5aa2eb50a2d3
                data: {}
                meta:
                  model: api
                  action: updateroles
          description: 'Success: Update Roles of an API'
  /collections/{collectionUID}/api:
    get:
      tags:
        - API
      summary: Api linked to a collection
      parameters:
        - name: collectionUID
          in: path
          schema:
            type: string
          required: true
        - name: 'populate[]'
          in: query
          schema:
            type: string
          example: apiversion
        - name: filter
          in: query
          schema:
            type: string
          example: latest
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - api
                    properties:
                      api:
                        type: object
                        required:
                          - createdAt
                          - id
                          - name
                          - updatedAt
                          - versions
                        nullable: true
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
                          versions:
                            type: array
                            items:
                              type: object
                              required:
                                - name
                                - id
                              properties:
                                name:
                                  type: string
                                id:
                                  type: string
              examples:
                Example1:
                  value:
                    model_id: '{{collectionId}}'
                    meta:
                      model: collection
                      action: getApis
                    data:
                      api:
                        id: '{{apiId}}'
                        name: '{{apiName}}'
                        createdAt: '{{createdAt}}'
                        updatedAt: '{{updatedAt}}'
                Example2:
                  value:
                    model_id: '{{collectionId}}'
                    meta:
                      model: collection
                      action: getApis
                    data:
                      api: null
                Example3:
                  value:
                    model_id: '{{collectionId}}'
                    meta:
                      model: collection
                      action: getApis
                    data:
                      api:
                        id: '{{apiId}}'
                        name: '{{apiName}}'
                        createdAt: '{{createdAt}}'
                        updatedAt: '{{updatedAt}}'
                        versions:
                          - name: Version1
                            id: '{{apiVersionName}}'
          description: Api linked to a collection
  /apis/import:
    post:
      tags:
        - API
      summary: Import API
      description: >-
        This endpoint will import an API and will send `API.create`,
        `Workspce.Update` and `API.addedToWorkspace` realtime events.
      parameters:
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                summary:
                  type: string
                description:
                  type: string
                versions:
                  type: array
                  items:
                    type: object
                    required:
                      - name
                      - schemas
                      - relations
                    properties:
                      name:
                        type: string
                        format: utc-millisec
                      schemas:
                        type: array
                        items:
                          type: object
                          required:
                            - schema
                            - type
                            - checksum
                            - language
                          properties:
                            schema:
                              type: string
                            type:
                              type: string
                            checksum:
                              type: string
                            language:
                              type: string
                      relations:
                        type: array
                        items:
                          type: object
                          required:
                            - type
                            - model
                            - modelId
                          properties:
                            type:
                              type: string
                            model:
                              type: string
                            modelId:
                              type: string
            example:
              name: Sync Service API
              summary: This is supposed to be a short summary.
              description: This is supposed to handle markdown *descriptions*.
              versions:
                - name: '1.0'
                  schemas:
                    - schema: '{{schema}}'
                      type: openapi3
                      checksum: ''
                      language: json
                  relations:
                    - type: documentation
                      model: collection
                      modelId: 5665-12345678-1234-1234-1234-123456789012
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - action
                      - model
                    properties:
                      action:
                        type: string
                      model:
                        type: string
                  data:
                    type: object
                    required:
                      - name
                      - id
                      - summary
                      - description
                      - createdAt
                      - updatedAt
                      - createdBy
                      - updatedBy
                      - versions
                    properties:
                      name:
                        type: string
                      id:
                        type: string
                      summary:
                        type: string
                      description:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      createdBy:
                        type: string
                        format: utc-millisec
                      updatedBy:
                        type: string
                        format: utc-millisec
                      versions:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                            - schemas
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                              format: utc-millisec
                            schemas:
                              type: array
                              items:
                                type: string
                            api:
                              type: string
              examples:
                Example1:
                  value:
                    meta:
                      action: import
                      model: api
                    data:
                      name: Sync Service API
                      id: 3b7e2a87-6e34-4b7a-a756-dad56425dbee
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2019-07-21T16:31:15.110Z'
                      updatedAt: '2019-07-21T16:31:15.110Z'
                      createdBy: '55850'
                      updatedBy: '55850'
                      versions:
                        - id: 3b7e2a87-6e34-4b7a-a756-dad56425dbdf
                          name: '1.0'
                          schemas: []
                Example2:
                  value:
                    meta:
                      action: import
                      model: api
                    data:
                      name: Sync Service API
                      id: 3b7e2a87-6e34-4b7a-a756-dad56425dbee
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2019-07-21T16:31:15.110Z'
                      updatedAt: '2019-07-21T16:31:15.110Z'
                      createdBy: '55850'
                      updatedBy: '55850'
                      versions:
                        - id: 3b7e2a87-6e34-4b7a-a756-dad56425dbdf
                          name: '1.0'
                          schemas:
                            - 3b7e2a87-6e34-4b7a-a756-dad56425dbfd
                Example3:
                  value:
                    meta:
                      action: import
                      model: api
                    data:
                      name: Sync Service API
                      id: 3b7e2a87-6e34-4b7a-a756-dad56425dbee
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2019-07-21T16:31:15.110Z'
                      updatedAt: '2019-07-21T16:31:15.110Z'
                      createdBy: '55850'
                      updatedBy: '55850'
                      versions:
                        - id: 3b7e2a87-6e34-4b7a-a756-dad56425dbdf
                          name: '1.0'
                          schemas: []
                          api: 3b7e2a87-6e34-4b7a-a756-dad56425dbee
                Example4:
                  value:
                    meta:
                      action: import
                      model: api
                    data:
                      name: Sync Service API
                      id: 3b7e2a87-6e34-4b7a-a756-dad56425dbee
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2019-07-21T16:31:15.110Z'
                      updatedAt: '2019-07-21T16:31:15.110Z'
                      createdBy: '55850'
                      updatedBy: '55850'
                      versions:
                        - id: 3b7e2a87-6e34-4b7a-a756-dad56425dbdf
                          name: '1.0'
                          schemas:
                            - 3b7e2a87-6e34-4b7a-a756-dad56425dbfd
          description: Import API (w/o schemas)
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - action
                      - model
                    properties:
                      action:
                        type: string
                      model:
                        type: string
                  data:
                    type: object
                    required:
                      - name
                      - id
                      - summary
                      - description
                      - createdAt
                      - updatedAt
                      - createdBy
                      - updatedBy
                      - versions
                    properties:
                      name:
                        type: string
                      id:
                        type: string
                      summary:
                        type: string
                      description:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      createdBy:
                        type: string
                        format: utc-millisec
                      updatedBy:
                        type: string
                        format: utc-millisec
                      versions:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            schemas:
                              type: array
                              items:
                                type: string
                            api:
                              type: string
              examples:
                Example1:
                  value:
                    meta:
                      action: import
                      model: api
                    data:
                      name: Sync Service API
                      id: 3b7e2a87-6e34-4b7a-a756-dad56425dbee
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2019-07-21T16:31:15.110Z'
                      updatedAt: '2019-07-21T16:31:15.110Z'
                      createdBy: '55850'
                      updatedBy: '55850'
                      versions:
                        - id: 3b7e2a87-6e34-4b7a-a756-dad56425dbdf
                          name: Draft
                          schemas:
                            - 3b7e2a87-6e34-4b7a-a756-dad56425dbfd
                Example2:
                  value:
                    meta:
                      action: import
                      model: api
                    data:
                      name: Sync Service API
                      id: 3b7e2a87-6e34-4b7a-a756-dad56425dbee
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2019-07-21T16:31:15.110Z'
                      updatedAt: '2019-07-21T16:31:15.110Z'
                      createdBy: '55850'
                      updatedBy: '55850'
                      versions:
                        - name: Draft
                          id: 3b7e2a87-6e34-4b7a-a756-dad56425dbef
                          api: 3b7e2a87-6e34-4b7a-a756-dad56425dbee
          description: Import API (with schema and relations and default version)
  /apis/{apiId}/export:
    get:
      tags:
        - API
      summary: Export an API
      description: This endpoint returns an API with the provided id.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema: {}
              example:
                model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                meta:
                  model: api
                  action: export
                data:
                  api:
                    createdBy: '7732157'
                    updatedBy: '7732157'
                    id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    name: Sync Pen test
                    summary: This is supposed to be a short summary.
                    description: This is supposed to handle markdown *descriptions*.
                    createdAt: '2020-05-13T18:49:31.000Z'
                    updatedAt: '2020-05-13T19:01:31.000Z'
                    versions:
                      - id: 559da235-7d58-460a-ac17-7431e6304c94
                        name: '1.0'
                        schemas:
                          - type: openapi3
                            language: yaml
                            schema: |-
                              openapi: 3.0.0
                              info:
                                title: SimpleKart E-commerce API
                                version: 1.0.0
                                contact:
                                  name: Postman Team
                                  email: simplekart@postman.com
                                description: API for an imaginary E-Commerce store to demonstrate API Builder capabilities in Postman
                              servers:
                                - url: 'https://api.simplekart.com'
                              paths:
                                '/items/{itemId}':
                                  parameters:
                                    - schema:
                                        type: integer
                                        example: '1657'
                                        default: '1657'
                                        maximum: 20000
                                        minimum: 0
                                        exclusiveMinimum: false
                                      name: itemId
                                      in: path
                                      description: Id of the item to pull details of
                                      required: true
                                  get:
                                    summary: 'Get item details from the database '
                                    tags:
                                      - item
                                    responses:
                                      '200':
                                        description: OK - Successfully obtained order details
                                        content:
                                          application/json:
                                            schema:
                                              $ref: '#/components/schemas/item'
                                            examples:
                                              example-1:
                                                value:
                                                  itemId: 1657
                                                  name: Smart WiFi Router
                                                  price: 2096
                                                  description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'
                                      '400':
                                        description: Bad Request - Invalid item ID supplied
                                        content:
                                          application/json:
                                              schema:
                                                  $ref: '#/components/schemas/badRequest'
                                              examples:
                                                  example-1:
                                                      value:
                                                          error:
                                                              message: 'Provided Id is invalid'
                                      '404':
                                        description: Not Found - Item not found
                                        content:
                                          application/json:
                                              schema:
                                                  $ref: '#/components/schemas/notFound'
                                              examples:
                                                  example-1:
                                                      value:
                                                          error:
                                                              message: 'The item you are looking for, does not exist'
                                    operationId: get-items-itemId
                                    description: Obtain item details from item database
                                    parameters: []
                                '/orders/{orderId}':
                                  parameters:
                                    - schema:
                                        type: integer
                                        default: '674'
                                        maximum: 2000
                                        minimum: 1
                                      name: orderId
                                      in: path
                                      required: true
                                  get:
                                    summary: Get order details from database
                                    tags:
                                      - order
                                    responses:
                                      '200':
                                        description: OK - Successfully obtained order details
                                        content:
                                          application/json:
                                            schema:
                                              $ref: '#/components/schemas/order'
                                            examples:
                                              example-1:
                                                value:
                                                  orderId: 674
                                                  items:
                                                    - itemId: 1657
                                                      name: Smart WiFi Router
                                                      price: 2096
                                                      description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'
                                                  arrivalDate: '2020-3-04T13:07:45.962Z'
                                                  orderDate: '2020-03-06T19:27:26.733Z'
                                                  orderTotal: 2096
                                                  address: '95 Tarkiln Hill St.Laurel, MD 20707'
                                              example-2:
                                                value:
                                                  orderId: 656
                                                  items:
                                                    - itemId: 16247
                                                      name: 'Postman Merch'
                                                      price: 15
                                                      description: 'Official T-shirt for the Postman community.'
                                                  arrivalDate: '2020-3-04T13:07:45.962Z'
                                                  orderDate: '2020-03-06T19:27:26.733Z'
                                                  orderTotal: 15
                                                  address: 'SimpleKart HQ, 221B Baker street'
                                      '400':
                                        description: Bad Request - Invalid order ID supplied
                                        content:
                                          application/json:
                                              schema:
                                                  $ref: '#/components/schemas/badRequest'
                                              examples:
                                                  example-1:
                                                      value:
                                                          error:
                                                              message: 'Provided Id is invalid'
                                      '404':
                                        description: Not Found - Order not found
                                        content:
                                          application/json:
                                              schema:
                                                  $ref: '#/components/schemas/notFound'
                                              examples:
                                                  example-1:
                                                      value:
                                                          error:
                                                              message: 'The order you are looking for, does not exist'
                                    operationId: get-orders-orderId
                                    description: Obtain item details from the database
                                /orders:
                                  get:
                                    summary: 'Get orders from the database '
                                    tags:
                                      - orders
                                    responses:
                                      '200':
                                        description: OK - Successful pull of orders
                                        content:
                                          application/json:
                                            schema:
                                              $ref: '#/components/schemas/orders'
                                            examples:
                                              example-1:
                                                value:
                                                  - orderId: 674
                                                    items:
                                                      - itemId: 1657
                                                        name: Smart WiFi Router
                                                        price: 2096
                                                        description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'
                                                    arrivalDate: '2020-03-03T13:07:45.962Z'
                                                    orderDate: '2020-03-01T19:27:26.733Z'
                                                    orderTotal: 2096
                                                    address: '95 Tarkiln Hill St.Laurel, MD 20707'
                                                  - orderId: 675
                                                    items:
                                                      - itemId: 1658
                                                        name: VR Gaming Headset
                                                        price: 79990
                                                        description: "VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR."
                                                    arrivalDate: '2020-03-03T15:00:56.787Z'
                                                    orderDate: '2020-03-02T21:25:22.096Z'
                                                    orderTotal: 79990
                                                    address: '7405 Arcadia St.Rockville, MD 20850'
                                                  - orderId: 676
                                                    items:
                                                      - itemId: 1665
                                                        name: Smart Watch
                                                        price: 1805
                                                        description: 'Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.'
                                                    arrivalDate: '2020-03-05T17:30:15.156Z'
                                                    orderDate: '2020-03-03T01:10:27.512Z'
                                                    orderTotal: 1805
                                                    address: '9791 Lawrence Dr.Marlton, NJ 08053r'
                                                  - orderId: 677
                                                    items:
                                                      - itemId: 1659
                                                        name: 'Classic Loop Top Shaker Bottle, 20-Ounce'
                                                        price: 578
                                                        description: 'Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation.'
                                                    arrivalDate: '2020-03-03T18:16:24.911Z'
                                                    orderDate: '2020-03-01T06:09:23.007Z'
                                                    orderTotal: 578
                                                    address: '822 Clay St.Tampa, FL 33604'
                                                  - orderId: 678
                                                    items:
                                                      - itemId: 1663
                                                        name: Hair Dryer
                                                        price: 1400
                                                        description: 'Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.'
                                                    arrivalDate: '2020-03-04T12:09:07.955Z'
                                                    orderDate: '2020-03-02T21:50:44.173Z'
                                                    orderTotal: 1400
                                                    address: '7444 SW. State Ave.Philadelphia, PA 19111'
                                                  - orderId: 679
                                                    items:
                                                      - itemId: 1660
                                                        name: 4-Port USB 2.0 Hub
                                                        price: 505
                                                        description: 'Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products.'
                                                    arrivalDate: '2020-03-04T11:29:56.99Z'
                                                    orderDate: '2020-03-03T00:51:26.19Z'
                                                    orderTotal: 505
                                                    address: '307 Purple Finch Ave.New Lenox, IL 60451'
                                                  - orderId: 680
                                                    items:
                                                      - itemId: 1661
                                                        name: 'Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)'
                                                        price: 938
                                                        description: 'For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone.'
                                                    arrivalDate: '2020-03-04T02:06:58.886Z'
                                                    orderDate: '2020-03-02T04:33:52.652Z'
                                                    orderTotal: 938
                                                    address: '946 Holly StreetHamilton, OH 45011'
                                                  - orderId: 681
                                                    items:
                                                      - itemId: 1663
                                                        name: Hair Dryer
                                                        price: 1400
                                                        description: 'Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.'
                                                    arrivalDate: '2020-03-04T17:26:07.706Z'
                                                    orderDate: '2020-03-02T04:17:23.689Z'
                                                    orderTotal: 1400
                                                    address: '8924 East Birchwood St.Hamburg, NY 14075'
                                                  - orderId: 682
                                                    items:
                                                      - itemId: 1665
                                                        name: Smart Watch
                                                        price: 1805
                                                        description: 'Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.'
                                                    arrivalDate: '2020-03-05T14:07:01.688Z'
                                                    orderDate: '2020-03-03T04:58:18.504Z'
                                                    orderTotal: 1805
                                                    address: '10 Wilson LaneBay City, MI 48706'
                                                  - orderId: 683
                                                    items:
                                                      - itemId: 1666
                                                        name: 'Learning Thermostat, 3rd Gen, Smart Thermostat'
                                                        price: 15746
                                                        description: 'Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills.'
                                                    arrivalDate: '2020-03-05T10:43:23.713Z'
                                                    orderDate: '2020-03-03T08:34:21.21Z'
                                                    orderTotal: 15746
                                                    address: 'm81 West Shirley Dr.Greenfield, IN 46140'
                                                  - orderId: 656
                                                    items:
                                                      - itemId: 16247
                                                        name: 'Postman Merch'
                                                        price: 15
                                                        description: 'Official T-shirt for the Postman community.'
                                                    arrivalDate: '2020-3-04T13:07:45.962Z'
                                                    orderDate: '2020-03-06T19:27:26.733Z'
                                                    orderTotal: 15
                                                    address: 'SimpleKart HQ, 221B Baker street'
                                    operationId: get-orders
                                    description: Obtain order details from orders database
                                    parameters:
                                      - schema:
                                          type: integer
                                          minimum: 1
                                          maximum: 15
                                          default: '10'
                                        in: query
                                        name: list
                                        description: Number of orders to show
                                  post:
                                    summary: Post order details to the database
                                    tags:
                                      - orders
                                    responses:
                                      '201':
                                        description: OK - Order created
                                        content:
                                          application/json:
                                            schema:
                                              $ref: '#/components/schemas/order'
                                            examples:
                                              example-1:
                                                value:
                                                  orderId: 674
                                                  items:
                                                    - itemId: 1657
                                                      name: Smart WiFi Router
                                                      price: 2096
                                                      description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'
                                                  arrivalDate: '2020-3-04T13:07:45.962Z'
                                                  orderDate: '2020-03-06T19:27:26.733Z'
                                                  orderTotal: 2096
                                                  address: '95 Tarkiln Hill St.Laurel, MD 20707'
                                    operationId: post-orders
                                    requestBody:
                                      content:
                                        application/json:
                                          schema:
                                            type: object
                                            properties:
                                              item:
                                                $ref: '#/components/schemas/item'
                                              address:
                                                type: string
                                            required:
                                              - address
                                          examples:
                                            example-1:
                                              value:
                                                items:
                                                  - itemId: 1657
                                                    name: Smart WiFi Router
                                                    price: 2096
                                                    description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'
                                                address: '95 Tarkiln Hill St.Laurel, MD 20707'
                                      description: Body example
                                    description: Post item order to orders database
                                /items:
                                  get:
                                    summary: Get items from the database
                                    tags: []
                                    responses:
                                      '200':
                                        description: OK - Successful pull of items
                                        content:
                                          application/json:
                                            schema:
                                              type: array
                                              uniqueItems: false
                                              maxItems: 15
                                              minItems: 4
                                              items:
                                                $ref: '#/components/schemas/items'
                                            examples:
                                              example-1:
                                                value:
                                                  - itemId: 1657
                                                    name: Smart WiFi Router
                                                    price: 2096
                                                    description: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'
                                                  - itemId: 1658
                                                    name: VR Gaming Headset
                                                    price: 79990
                                                    description: "VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR."
                                                  - itemId: 1659
                                                    name: 'Classic Loop Top Shaker Bottle, 20-Ounce'
                                                    price: 578
                                                    description: 'Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation.'
                                                  - itemId: 1660
                                                    name: 4-Port USB 2.0 Hub
                                                    price: 505
                                                    description: 'Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products.'
                                                  - itemId: 1661
                                                    name: 'Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)'
                                                    price: 938
                                                    description: 'For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone.'
                                                  - itemId: 1662
                                                    name: Cordless Vacuum Cleaner
                                                    price: 41893
                                                    description: 'Twice the suction of any cord-free vacuum. Cord-free cleaning, made easier. Intelligently optimizes suction and run time, to deep clean everywhere. With fade-free battery power and a battery-saving trigger. And real-time reporting on the LCD screen to give you control of your clean. The Dynamic Load Sensor (DLS) system automatically changes the motor speed between carpets and hard floors. For deep cleaning across floor types.'
                                                  - itemId: 1663
                                                    name: Hair Dryer
                                                    price: 1400
                                                    description: 'Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%.'
                                                  - itemId: 1664
                                                    name: Business Z27n G2 27 inch LED LCD Monitor
                                                    price: 24485
                                                    description: 'Be a productive powerhouse with the sleek QHD HP Z27n G2 27-inch Display. This virtually seamless display is factory-tested for reliability and longevity with integrated color calibration, uninterrupted multi-screen tiling, and expansive device connections, including USB-C™. Multi-screen productivity with no disruptions Streamline multi-tasking on multiple displays with a 3-sided micro-edge bezel, and daisy chain up to 2 displays per workstation with DisplayPort™.'
                                                  - itemId: 1665
                                                    name: Smart Watch
                                                    price: 1805
                                                    description: 'Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data.'
                                                  - itemId: 1666
                                                    name: 'Learning Thermostat, 3rd Gen, Smart Thermostat'
                                                    price: 15746
                                                    description: 'Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills.'
                                                  - itemId: 16247
                                                    name: Postman Merch
                                                    price: 15
                                                    description: 'Official T-shirt for the Postman community.'
                                    operationId: get-items
                                    description: Pull a list of items from item database
                                    parameters:
                                      - schema:
                                          type: integer
                                          default: '10'
                                          maximum: 15
                                          minimum: 4
                                        in: query
                                        name: list
                                        description: Number of items to be displayed
                              components:
                                schemas:
                                  item:
                                    title: item
                                    type: object
                                    description: Model containing item information
                                    properties:
                                      itemId:
                                        type: integer
                                        example: '1657'
                                        minimum: 0
                                        maximum: 20000
                                      name:
                                        type: string
                                        example: Smart WiFi Router
                                      price:
                                        type: integer
                                        example: '2096'
                                        minimum: 10
                                        maximum: 100000
                                      description:
                                        type: string
                                        example: 'Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH'
                                        minLength: 1
                                    required:
                                      - itemId
                                  order:
                                    title: order
                                    type: object
                                    properties:
                                      address:
                                        type: string
                                      orderTotal:
                                        type: integer
                                        maximum: 100000
                                        minimum: 1
                                        example: '5000'
                                      orderDate:
                                        type: string
                                        format: date-time
                                      arrivalDate:
                                        type: string
                                        format: date-time
                                      items:
                                        $ref: '#/components/schemas/items'
                                      orderId:
                                        type: integer
                                        maximum: 20000
                                        minimum: 1
                                        example: '1151'
                                    required:
                                      - address
                                      - items
                                  badRequest:
                                      title: Bad Request
                                      type: object
                                      properties:
                                          error:
                                              type: object
                                              properties:
                                                  message:
                                                      type: string
                                  notFound:
                                      title: Not Found
                                      type: object
                                      properties:
                                          error:
                                              type: object
                                              properties:
                                                  message:
                                                      type: string
                                  items:
                                    type: array
                                    title: items
                                    example: '6'
                                    maxItems: 15
                                    minItems: 1
                                    items:
                                      $ref: '#/components/schemas/item'
                                  orders:
                                    type: array
                                    title: orders
                                    maxItems: 15
                                    minItems: 1
                                    items:
                                      $ref: '#/components/schemas/order'
                                securitySchemes:
                                  api-key:
                                    name: '12345789012345678901234567890'
                                    type: apiKey
                                    in: query
                        relations:
                          - id: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                            model: environment
                            type: environment
                            modelId: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                          - id: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                            model: environment
                            type: environment
                            modelId: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                          - id: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                            model: environment
                            type: environment
                            modelId: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                          - id: 7681c25b-5c50-44a6-8724-fe1e71550160
                            model: mock
                            type: mock
                            modelId: 7681c25b-5c50-44a6-8724-fe1e71550160
                          - id: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                            model: monitor
                            type: monitor
                            modelId: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                          - id: 5b32caea-903c-472e-81a2-2cb054ede666
                            model: collection
                            type: documentation
                            modelId: 7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                          - id: b26bc935-7422-4f73-8d03-9bf212fb48ba
                            model: collection
                            type: testsuite
                            modelId: 7732157-37350b62-41f3-428a-8bd5-fec517bb4f43
                          - id: 35c6bdbd-d602-4b37-9c87-1640fc8025c8
                            model: collection
                            type: integrationtest
                            modelId: 7732157-6537c169-8d02-413f-94f3-4dda79355a90
                          - id: bb69b435-a90a-44fe-aa49-f580eeb1be88
                            model: collection
                            type: contracttest
                            modelId: 7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac
                  items:
                    mocks:
                      7681c25b-5c50-44a6-8724-fe1e71550160:
                        collection: 7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                        environment: null
                        description: Sample description
                        name: SimpleKart Mock Service
                    monitors:
                      1ea954a7-ad6d-46c0-b8e7-552c5334c253:
                        collection: 7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac
                        environment: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                        name: SimpleKart Monitor
                        schedule:
                          cronPattern: 0 0 1 * * MON
                          timeZone: Asia/Calcutta
                        options:
                          strictSSL: true
                          followRedirects: true
                          requestTimeout: null
                          requestDelay: 0
                    collections:
                      7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac:
                        owner: '7732157'
                        lastUpdatedBy: '7732157'
                        lastRevision: 14716072053
                        team: null
                        id: 38f1a479-3175-40c6-8b76-9b151f04d7ac
                        name: SimpleKart Contract Tests
                        description: >-
                          API for an imaginary E-Commerce store to demonstrate
                          API Builder capabilities in Postman


                          Contact Support:
                           Name: Postman Team
                           Email: simplekart@postman.com
                        variables: null
                        auth: null
                        events:
                          - listen: prerequest
                            script:
                              id: 288cb8e2-bdd3-4ebe-ae54-9ad70607c761
                              type: text/javascript
                              exec:
                                - ''
                          - listen: test
                            script:
                              id: f38022f0-1f12-421b-b7f9-5b25661ccaa3
                              type: text/javascript
                              exec:
                                - ''
                        remote_id: '0'
                        remoteLink: null
                        folders_order:
                          - 146734c9-fbae-4c43-940e-05f8ce6a01b6
                          - ad77cb69-ab87-49d9-830f-14671f354bf2
                        order: []
                        createdAt: '2020-05-13T18:49:29.000Z'
                        updatedAt: '2020-05-13T18:49:30.000Z'
                        folders:
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716072001
                            collection: 7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac
                            folder: null
                            id: 146734c9-fbae-4c43-940e-05f8ce6a01b6
                            name: items
                            description: null
                            variables: null
                            auth: null
                            events: null
                            order:
                              - 9ae5b1ca-b85a-4e93-9e76-4b4df2eedfa4
                              - df252024-ef9d-4948-bf67-0bb4e43ad22b
                            folders_order: []
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716072003
                            collection: 7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac
                            folder: null
                            id: ad77cb69-ab87-49d9-830f-14671f354bf2
                            name: orders
                            description: null
                            variables: null
                            auth: null
                            events: null
                            order:
                              - f37d2885-a4ff-41ff-9518-9561ed2e6800
                              - d9ce2cae-7f38-431e-b6fd-26a5886a53d0
                              - 746b69e4-241d-4691-afd4-fb406ba787f1
                            folders_order: []
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                        requests:
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071713
                            folder: ad77cb69-ab87-49d9-830f-14671f354bf2
                            collection: 7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac
                            id: 746b69e4-241d-4691-afd4-fb406ba787f1
                            name: Get order details from database
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: 478fec09-2223-4e4e-9b98-afbab9dfa6ec
                                  exec:
                                    - >-
                                      pm.test("status code should be 200",
                                      function () {
                                    - '    pm.response.to.have.status(200);'
                                    - '});'
                                    - ''
                                    - var response=pm.response.json();
                                    - ''
                                    - 'var responseSchema={'
                                    - '    "type": "object",'
                                    - '    "title": "Order",'
                                    - '    "description": "This is an Order object",'
                                    - '    "required": ['
                                    - '        "orderId",'
                                    - '        "items",'
                                    - '        "arrivalDate",'
                                    - '        "orderDate",'
                                    - '        "orderTotal",'
                                    - '        "address"'
                                    - '    ],'
                                    - '    "properties": {'
                                    - '        "orderId": {'
                                    - '            "type": "integer"'
                                    - '        },'
                                    - '        "items": {'
                                    - '            "type": "object",'
                                    - '            "title": "Item",'
                                    - '            "description": "This is an Item object",'
                                    - '            "required": ['
                                    - '                "itemId",'
                                    - '                "name",'
                                    - '                "price",'
                                    - '                "description"'
                                    - '            ],'
                                    - '            "properties": {'
                                    - '                "itemId": {'
                                    - '                    "type": "integer"'
                                    - '                },'
                                    - '                "name": {'
                                    - '                    "type": "string"'
                                    - '                },'
                                    - '                "price": {'
                                    - '                    "type": "integer"'
                                    - '                },'
                                    - '                "description": {'
                                    - '                    "type": "string"'
                                    - '                }'
                                    - '            }'
                                    - '        },'
                                    - '        "arrivalDate": {'
                                    - '            "type": "string"'
                                    - '        },'
                                    - '        "orderDate": {'
                                    - '            "type": "string"'
                                    - '        },'
                                    - '        "orderTotal": {'
                                    - '            "type": "integer"'
                                    - '        },'
                                    - '        "address": {'
                                    - '            "type": "string"'
                                    - '        }'
                                    - '    }'
                                    - '};'
                                    - ''
                                    - >-
                                      pm.test("response has valid
                                      schema",function(){
                                    - '    pm.expect(tv4.validate(response, responseSchema)).to.be.true;'
                                    - '});'
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: Obtain item details from the database
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables:
                              orderId: '674'
                            url: '{{baseUrl}}/orders/:orderId'
                            preRequestScript: null
                            tests: |-
                              pm.test("status code should be 200", function () {
                                  pm.response.to.have.status(200);
                              });

                              var response=pm.response.json();

                              var responseSchema={
                                  "type": "object",
                                  "title": "Order",
                                  "description": "This is an Order object",
                                  "required": [
                                      "orderId",
                                      "items",
                                      "arrivalDate",
                                      "orderDate",
                                      "orderTotal",
                                      "address"
                                  ],
                                  "properties": {
                                      "orderId": {
                                          "type": "integer"
                                      },
                                      "items": {
                                          "type": "object",
                                          "title": "Item",
                                          "description": "This is an Item object",
                                          "required": [
                                              "itemId",
                                              "name",
                                              "price",
                                              "description"
                                          ],
                                          "properties": {
                                              "itemId": {
                                                  "type": "integer"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "price": {
                                                  "type": "integer"
                                              },
                                              "description": {
                                                  "type": "string"
                                              }
                                          }
                                      },
                                      "arrivalDate": {
                                          "type": "string"
                                      },
                                      "orderDate": {
                                          "type": "string"
                                      },
                                      "orderTotal": {
                                          "type": "integer"
                                      },
                                      "address": {
                                          "type": "string"
                                      }
                                  }
                              };

                              pm.test("response has valid schema",function(){
                                  pm.expect(tv4.validate(response, responseSchema)).to.be.true;
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData: []
                            pathVariableData:
                              - id: 975eff51-f27f-4ee1-82c0-f650a79a768f
                                key: orderId
                                value: '674'
                                type: string
                                description: '(Required) '
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses: []
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071723
                            folder: 146734c9-fbae-4c43-940e-05f8ce6a01b6
                            collection: 7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac
                            id: 9ae5b1ca-b85a-4e93-9e76-4b4df2eedfa4
                            name: Get items from the database
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: afde1625-fe66-45b9-b2dd-f56ea5e47238
                                  exec:
                                    - >-
                                      pm.test("status code should be 200",
                                      function () {
                                    - '    pm.response.to.have.status(200);'
                                    - '});'
                                    - ''
                                    - var response=pm.response.json();
                                    - ''
                                    - 'var responseSchema={'
                                    - '    "type": "array",'
                                    - '    "title": "The response schema",'
                                    - '    "description": "Response should be an array or items.",'
                                    - '    "items": {'
                                    - '        "$id": "#/items",'
                                    - '        "type": "object",'
                                    - '        "title": "The Items Schema",'
                                    - '        "description": "This is what an item looks like",'
                                    - '        "required": ['
                                    - '            "itemId",'
                                    - '            "name",'
                                    - '            "price",'
                                    - '            "description"'
                                    - '        ],'
                                    - '        "properties": {'
                                    - '            "itemId": {'
                                    - '                "type": "integer"'
                                    - '            },'
                                    - '            "name": {'
                                    - '                "type": "string"'
                                    - '            },'
                                    - '            "price": {'
                                    - '                "type": "integer"'
                                    - '            },'
                                    - '            "description": {'
                                    - '                "type": "string"'
                                    - '            }'
                                    - '        }'
                                    - '    }'
                                    - '};'
                                    - ''
                                    - >-
                                      pm.test("response has valid
                                      schema",function(){
                                    - '    pm.expect(tv4.validate(response, responseSchema)).to.be.true;'
                                    - '});'
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: Pull a list of items from item database
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables: {}
                            url: '{{baseUrl}}/items?list=10'
                            preRequestScript: null
                            tests: |-
                              pm.test("status code should be 200", function () {
                                  pm.response.to.have.status(200);
                              });

                              var response=pm.response.json();

                              var responseSchema={
                                  "type": "array",
                                  "title": "The response schema",
                                  "description": "Response should be an array or items.",
                                  "items": {
                                      "$id": "#/items",
                                      "type": "object",
                                      "title": "The Items Schema",
                                      "description": "This is what an item looks like",
                                      "required": [
                                          "itemId",
                                          "name",
                                          "price",
                                          "description"
                                      ],
                                      "properties": {
                                          "itemId": {
                                              "type": "integer"
                                          },
                                          "name": {
                                              "type": "string"
                                          },
                                          "price": {
                                              "type": "integer"
                                          },
                                          "description": {
                                              "type": "string"
                                          }
                                      }
                                  }
                              };

                              pm.test("response has valid schema",function(){
                                  pm.expect(tv4.validate(response, responseSchema)).to.be.true;
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams:
                              - key: list
                                value: '10'
                                description: Number of items to be displayed
                            headerData: []
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses: []
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071844
                            folder: ad77cb69-ab87-49d9-830f-14671f354bf2
                            collection: 7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac
                            id: d9ce2cae-7f38-431e-b6fd-26a5886a53d0
                            name: Post order details to the database
                            dataMode: raw
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: 1a1999b2-5818-4229-af40-41515ec1ff42
                                  exec:
                                    - >-
                                      pm.test("status code should be 201",
                                      function () {
                                    - '    pm.response.to.have.status(201);'
                                    - '});'
                                    - ''
                                    - var response=pm.response.json();
                                    - ''
                                    - 'var responseSchema={'
                                    - '    "type": "object",'
                                    - '    "title": "Order",'
                                    - '    "description": "This is an Order object",'
                                    - '    "required": ['
                                    - '        "orderId",'
                                    - '        "items",'
                                    - '        "arrivalDate",'
                                    - '        "orderDate",'
                                    - '        "orderTotal",'
                                    - '        "address"'
                                    - '    ],'
                                    - '    "properties": {'
                                    - '        "orderId": {'
                                    - '            "type": "integer"'
                                    - '        },'
                                    - '        "items": {'
                                    - '            "type": "array",'
                                    - '            "title": "Item",'
                                    - '            "description": "This is an Item object",'
                                    - '            "required": ['
                                    - '                "itemId",'
                                    - '                "name",'
                                    - '                "price",'
                                    - '                "description"'
                                    - '            ],'
                                    - '            "properties": {'
                                    - '                "itemId": {'
                                    - '                    "type": "integer"'
                                    - '                },'
                                    - '                "name": {'
                                    - '                    "type": "string"'
                                    - '                },'
                                    - '                "price": {'
                                    - '                    "type": "integer"'
                                    - '                },'
                                    - '                "description": {'
                                    - '                    "type": "string"'
                                    - '                }'
                                    - '            }'
                                    - '        },'
                                    - '        "arrivalDate": {'
                                    - '            "type": "string"'
                                    - '        },'
                                    - '        "orderDate": {'
                                    - '            "type": "string"'
                                    - '        },'
                                    - '        "orderTotal": {'
                                    - '            "type": "integer"'
                                    - '        },'
                                    - '        "address": {'
                                    - '            "type": "string"'
                                    - '        }'
                                    - '    }'
                                    - '};'
                                    - ''
                                    - >-
                                      pm.test("response has valid
                                      schema",function(){
                                    - '    pm.expect(tv4.validate(response, responseSchema)).to.be.true;'
                                    - '});'
                                  type: text/javascript
                            rawModeData: |-
                              {
                                  "address": "<string>",
                                  "item": {
                                      "itemId": 1,
                                      "name": "<string>",
                                      "price": 2000,
                                      "description": "<string>"
                                  }
                              }
                            descriptionFormat: null
                            description: Post item order to orders database
                            variables: null
                            headers: |
                              Content-Type: application/json
                            method: POST
                            pathVariables: {}
                            url: >-
                              https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io/orders
                            preRequestScript: null
                            tests: |-
                              pm.test("status code should be 201", function () {
                                  pm.response.to.have.status(201);
                              });

                              var response=pm.response.json();

                              var responseSchema={
                                  "type": "object",
                                  "title": "Order",
                                  "description": "This is an Order object",
                                  "required": [
                                      "orderId",
                                      "items",
                                      "arrivalDate",
                                      "orderDate",
                                      "orderTotal",
                                      "address"
                                  ],
                                  "properties": {
                                      "orderId": {
                                          "type": "integer"
                                      },
                                      "items": {
                                          "type": "array",
                                          "title": "Item",
                                          "description": "This is an Item object",
                                          "required": [
                                              "itemId",
                                              "name",
                                              "price",
                                              "description"
                                          ],
                                          "properties": {
                                              "itemId": {
                                                  "type": "integer"
                                              },
                                              "name": {
                                                  "type": "string"
                                              },
                                              "price": {
                                                  "type": "integer"
                                              },
                                              "description": {
                                                  "type": "string"
                                              }
                                          }
                                      },
                                      "arrivalDate": {
                                          "type": "string"
                                      },
                                      "orderDate": {
                                          "type": "string"
                                      },
                                      "orderTotal": {
                                          "type": "integer"
                                      },
                                      "address": {
                                          "type": "string"
                                      }
                                  }
                              };

                              pm.test("response has valid schema",function(){
                                  pm.expect(tv4.validate(response, responseSchema)).to.be.true;
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData:
                              - key: Content-Type
                                value: application/json
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:30.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                            dataOptions:
                              raw: {}
                            responses: []
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071712
                            folder: 146734c9-fbae-4c43-940e-05f8ce6a01b6
                            collection: 7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac
                            id: df252024-ef9d-4948-bf67-0bb4e43ad22b
                            name: 'Get item details from the database '
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: e5db371a-00e7-43ac-a3b2-0ebacd564fe0
                                  exec:
                                    - >-
                                      pm.test("status code should be 200",
                                      function () {
                                    - '    pm.response.to.have.status(200);'
                                    - '});'
                                    - ''
                                    - var response=pm.response.json();
                                    - ''
                                    - 'var itemSchema={'
                                    - '    "type": "object",'
                                    - '    "title": "Item",'
                                    - '    "description": "This is how an Item in SimpleKart API looks like",'
                                    - '    "required": ['
                                    - '        "itemId",'
                                    - '        "name",'
                                    - '        "price",'
                                    - '        "description"'
                                    - '    ],'
                                    - '    "properties": {'
                                    - '        "itemId": {'
                                    - '            "type": "integer"'
                                    - '        },'
                                    - '        "name": {'
                                    - '            "type": "string"'
                                    - '        },'
                                    - '        "price": {'
                                    - '            "type": "integer"'
                                    - '        },'
                                    - '        "description": {'
                                    - '            "type": "string"'
                                    - '        }'
                                    - '    }'
                                    - '};'
                                    - ''
                                    - >-
                                      pm.test("response has valid
                                      schema",function(){
                                    - '    pm.expect(tv4.validate(response, itemSchema)).to.be.true;'
                                    - '});'
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: Obtain item details from item database
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables:
                              itemId: '1657'
                            url: '{{baseUrl}}/items/:itemId'
                            preRequestScript: null
                            tests: |-
                              pm.test("status code should be 200", function () {
                                  pm.response.to.have.status(200);
                              });

                              var response=pm.response.json();

                              var itemSchema={
                                  "type": "object",
                                  "title": "Item",
                                  "description": "This is how an Item in SimpleKart API looks like",
                                  "required": [
                                      "itemId",
                                      "name",
                                      "price",
                                      "description"
                                  ],
                                  "properties": {
                                      "itemId": {
                                          "type": "integer"
                                      },
                                      "name": {
                                          "type": "string"
                                      },
                                      "price": {
                                          "type": "integer"
                                      },
                                      "description": {
                                          "type": "string"
                                      }
                                  }
                              };

                              pm.test("response has valid schema",function(){
                                  pm.expect(tv4.validate(response, itemSchema)).to.be.true;
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData: []
                            pathVariableData:
                              - id: d9861e7d-29e5-421e-9ed3-17d205baad57
                                key: itemId
                                value: '1657'
                                type: string
                                description: (Required) Id of the item to pull details of
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses: []
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071718
                            folder: ad77cb69-ab87-49d9-830f-14671f354bf2
                            collection: 7732157#38f1a479-3175-40c6-8b76-9b151f04d7ac
                            id: f37d2885-a4ff-41ff-9518-9561ed2e6800
                            name: 'Get orders from the database '
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: 63bb7ae0-630e-4d86-a154-7909f72ed449
                                  exec:
                                    - >-
                                      pm.test("status code should be 200",
                                      function () {
                                    - '    pm.response.to.have.status(200);'
                                    - '});'
                                    - ''
                                    - var response=pm.response.json();
                                    - ''
                                    - 'var responseSchema={'
                                    - '    "type": "array",'
                                    - '    "items": {'
                                    - '        "type": "object",'
                                    - '        "default": {},'
                                    - '        "required": ['
                                    - '            "orderId",'
                                    - '            "items",'
                                    - '            "arrivalDate",'
                                    - '            "orderDate",'
                                    - '            "orderTotal",'
                                    - '            "address"'
                                    - '        ],'
                                    - '        "properties": {'
                                    - '            "orderId": {'
                                    - '                "type": "integer",'
                                    - '            },'
                                    - '            "items": {'
                                    - '                "type": "array",'
                                    - '                "items": {'
                                    - '                    "type": "object",'
                                    - '                    "required": ['
                                    - '                        "itemId",'
                                    - '                        "name",'
                                    - '                        "price",'
                                    - '                        "description"'
                                    - '                    ],'
                                    - '                    "properties": {'
                                    - '                        "itemId": {'
                                    - '                            "type": "integer",'
                                    - '                        },'
                                    - '                        "name": {'
                                    - '                            "type": "string",'
                                    - '                        },'
                                    - '                        "price": {'
                                    - '                            "type": "integer",'
                                    - '                        },'
                                    - '                        "description": {'
                                    - '                            "type": "string",'
                                    - '                        }'
                                    - '                    }'
                                    - '                }'
                                    - '            },'
                                    - '            "arrivalDate": {'
                                    - '                "type": "string",'
                                    - '            },'
                                    - '            "orderDate": {'
                                    - '                "type": "string",'
                                    - '            },'
                                    - '            "orderTotal": {'
                                    - '                "type": "integer",'
                                    - '            },'
                                    - '            "address": {'
                                    - '                "type": "string",'
                                    - '            }'
                                    - '        }'
                                    - '    }'
                                    - '};'
                                    - ''
                                    - >-
                                      pm.test("response has valid
                                      schema",function(){
                                    - '    pm.expect(tv4.validate(response, responseSchema)).to.be.true;'
                                    - '});'
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: Obtain order details from orders database
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables: {}
                            url: '{{baseUrl}}/orders?list=10'
                            preRequestScript: null
                            tests: |-
                              pm.test("status code should be 200", function () {
                                  pm.response.to.have.status(200);
                              });

                              var response=pm.response.json();

                              var responseSchema={
                                  "type": "array",
                                  "items": {
                                      "type": "object",
                                      "default": {},
                                      "required": [
                                          "orderId",
                                          "items",
                                          "arrivalDate",
                                          "orderDate",
                                          "orderTotal",
                                          "address"
                                      ],
                                      "properties": {
                                          "orderId": {
                                              "type": "integer",
                                          },
                                          "items": {
                                              "type": "array",
                                              "items": {
                                                  "type": "object",
                                                  "required": [
                                                      "itemId",
                                                      "name",
                                                      "price",
                                                      "description"
                                                  ],
                                                  "properties": {
                                                      "itemId": {
                                                          "type": "integer",
                                                      },
                                                      "name": {
                                                          "type": "string",
                                                      },
                                                      "price": {
                                                          "type": "integer",
                                                      },
                                                      "description": {
                                                          "type": "string",
                                                      }
                                                  }
                                              }
                                          },
                                          "arrivalDate": {
                                              "type": "string",
                                          },
                                          "orderDate": {
                                              "type": "string",
                                          },
                                          "orderTotal": {
                                              "type": "integer",
                                          },
                                          "address": {
                                              "type": "string",
                                          }
                                      }
                                  }
                              };

                              pm.test("response has valid schema",function(){
                                  pm.expect(tv4.validate(response, responseSchema)).to.be.true;
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams:
                              - key: list
                                value: '10'
                                description: Number of orders to show
                            headerData: []
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses: []
                      7732157-6537c169-8d02-413f-94f3-4dda79355a90:
                        owner: '7732157'
                        lastUpdatedBy: '7732157'
                        lastRevision: 14716072087
                        team: null
                        id: 6537c169-8d02-413f-94f3-4dda79355a90
                        name: SimpleKart Integration Tests
                        description: >-
                          API for an imaginary E-Commerce store to demonstrate
                          API Builder capabilities in Postman


                          Contact Support:
                           Name: Postman Team
                           Email: simplekart@postman.com
                        variables:
                          - id: 7e7b3fcd-b268-40ee-b136-f4c19b246c9a
                            key: baseUrl
                            value: >-
                              https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io
                            type: string
                            enabled: true
                          - id: e54148f5-04c3-4d45-9af1-3d5b5440c95d
                            key: lib
                            value: |-
                              var it = pm.test;
                              var expect = pm.expect;
                            type: string
                            enabled: true
                        auth: null
                        events:
                          - listen: prerequest
                            script:
                              id: de750dfb-435f-4e66-b35c-a560e35a8b89
                              type: text/javascript
                              exec:
                                - ''
                          - listen: test
                            script:
                              id: d113b650-c849-478b-9418-e80a4556860a
                              type: text/javascript
                              exec:
                                - var it = pm.test;
                                - var expect = pm.expect;
                        remote_id: '0'
                        remoteLink: null
                        folders_order:
                          - 40f5b319-a933-43bd-b191-57a913fc1079
                          - e77c8b4e-7f2d-46d9-b352-2e189aa73269
                          - 04b872d9-135f-4274-a18f-3439c3a63318
                        order: []
                        createdAt: '2020-05-13T18:49:29.000Z'
                        updatedAt: '2020-05-13T18:49:30.000Z'
                        folders:
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716072065
                            collection: 7732157#6537c169-8d02-413f-94f3-4dda79355a90
                            folder: null
                            id: 04b872d9-135f-4274-a18f-3439c3a63318
                            name: Check items and its details
                            description: null
                            variables: null
                            auth: null
                            events: null
                            order:
                              - 9a1aec9e-04ff-4956-8a26-466b33e879e6
                              - 18cf6e01-80cc-4f04-953f-b1df22e9f64e
                            folders_order: []
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716072055
                            collection: 7732157#6537c169-8d02-413f-94f3-4dda79355a90
                            folder: null
                            id: 40f5b319-a933-43bd-b191-57a913fc1079
                            name: Create new order and fetch it's items
                            description: null
                            variables: null
                            auth: null
                            events: null
                            order:
                              - a7a92db7-5657-4a7b-b525-fcd1f27139ee
                              - 439edcda-c456-4ca8-86b4-b0dc37c08ed1
                              - 1d57922e-0986-4416-ae52-792a42043f93
                            folders_order: []
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716072056
                            collection: 7732157#6537c169-8d02-413f-94f3-4dda79355a90
                            folder: null
                            id: e77c8b4e-7f2d-46d9-b352-2e189aa73269
                            name: Fetch order details given an order id
                            description: null
                            variables: null
                            auth: null
                            events: null
                            order:
                              - f256019f-c62e-44f8-b440-1c8de665c050
                            folders_order: []
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                        requests:
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071953
                            folder: 04b872d9-135f-4274-a18f-3439c3a63318
                            collection: 7732157#6537c169-8d02-413f-94f3-4dda79355a90
                            id: 18cf6e01-80cc-4f04-953f-b1df22e9f64e
                            name: Fetch postman merch
                            dataMode: null
                            data: null
                            auth: null
                            events:
                              - listen: test
                                script:
                                  id: 0bbab959-ead2-45d9-a055-5bbc0fb4947d
                                  exec:
                                    - const body = pm.response.json();
                                    - ''
                                    - eval(pm.variables.get("lib"));
                                    - ''
                                    - // Views
                                    - const template = `
                                    - '    <style>'
                                    - '        body {'
                                    - '            color: #fff;'
                                    - '        }'
                                    - '    </style>'
                                    - '    <table>'
                                    - '        <tr>'
                                    - '            <th style="padding-left: 10px; width: 10%;">Id</th>'
                                    - '            <th style="width: 15%;">Name</th>'
                                    - '            <th style="width: 40%">Description</th>'
                                    - '            <th style="padding-right: 10px;">Price</th>'
                                    - '        </tr>'
                                    - ''
                                    - '        <tr>'
                                    - '            <td style="padding-left: 10px;">{{itemId}}</td>'
                                    - '            <td>{{name}}</td>'
                                    - '            <td>{{description}}</td>'
                                    - '            <td style="padding-right: 10px;">£ {{price}}</td>'
                                    - '        </tr>'
                                    - '    </table>'
                                    - '`;'
                                    - ''
                                    - 'pm.visualizer.set(template, {...body});'
                                    - ''
                                    - ''
                                    - // Tests
                                    - ''
                                    - >-
                                      it("Should have 200 OK status code",
                                      function () {
                                    - '    pm.response.to.have.status(200);'
                                    - '});'
                                    - ''
                                    - >-
                                      it('Order should have the correct item',
                                      function () {
                                    - '    expect(body.name).to.be.ok;'
                                    - '    expect(body.description).to.be.ok;'
                                    - '    expect(body.itemId).to.be.ok;'
                                    - '    expect(body.price).to.be.ok;'
                                    - '});'
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: null
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables:
                              itemId: '16247'
                            url: '{{baseUrl}}/items/:itemId'
                            preRequestScript: null
                            tests: >-
                              const body = pm.response.json();


                              eval(pm.variables.get("lib"));


                              // Views

                              const template = `
                                  <style>
                                      body {
                                          color: #fff;
                                      }
                                  </style>
                                  <table>
                                      <tr>
                                          <th style="padding-left: 10px; width: 10%;">Id</th>
                                          <th style="width: 15%;">Name</th>
                                          <th style="width: 40%">Description</th>
                                          <th style="padding-right: 10px;">Price</th>
                                      </tr>

                                      <tr>
                                          <td style="padding-left: 10px;">{{itemId}}</td>
                                          <td>{{name}}</td>
                                          <td>{{description}}</td>
                                          <td style="padding-right: 10px;">£ {{price}}</td>
                                      </tr>
                                  </table>
                              `;


                              pm.visualizer.set(template, {...body});



                              // Tests


                              it("Should have 200 OK status code", function () {
                                  pm.response.to.have.status(200);
                              });


                              it('Order should have the correct item', function
                              () {
                                  expect(body.name).to.be.ok;
                                  expect(body.description).to.be.ok;
                                  expect(body.itemId).to.be.ok;
                                  expect(body.price).to.be.ok;
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData: []
                            pathVariableData:
                              - id: 16b9657b-e433-4201-a934-d5d8502f2d54
                                key: itemId
                                value: '16247'
                                type: string
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:30.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                            responses: []
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071942
                            folder: 40f5b319-a933-43bd-b191-57a913fc1079
                            collection: 7732157#6537c169-8d02-413f-94f3-4dda79355a90
                            id: 1d57922e-0986-4416-ae52-792a42043f93
                            name: Get all orders
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: ec5becca-b443-409a-b443-4cee143b9a56
                                  exec:
                                    - const body = pm.response.json();
                                    - ''
                                    - eval(pm.variables.get("lib"));
                                    - ''
                                    - // Views
                                    - const template = `
                                    - '    <style>'
                                    - '        body {'
                                    - '            color: #fff;'
                                    - '        }'
                                    - '    </style>'
                                    - '    <table>'
                                    - '        <tr>'
                                    - '            <th style="padding-left: 10px;">Order ID</th>'
                                    - '            <th>Items</th>'
                                    - '            <th>Ordered At</th>'
                                    - '            <th>Address</th>'
                                    - '            <th style="padding-right: 10px;">Total Amount</th>'
                                    - '        </tr>'
                                    - ''
                                    - '        {{#each orders}}'
                                    - '            <tr>'
                                    - '                <td style="padding-left: 10px;">{{orderId}}</td>'
                                    - '                <td>{{items}}</td>'
                                    - '                <td>{{orderDate}}</td>'
                                    - '                <td>{{address}}</td>'
                                    - '                <td style="padding-right: 10px;">£ {{orderTotal}}</td>'
                                    - '            </tr>'
                                    - '        {{/each}}'
                                    - '        '
                                    - '        <tr>'
                                    - '            <td colSpan=4 style="text-align: right">'
                                    - '                <b>Total</b>'
                                    - '            </td>'
                                    - '            <td>£ {{total}}</td>'
                                    - '        </tr>'
                                    - '    </table>'
                                    - '`;'
                                    - ''
                                    - 'pm.visualizer.set(template, {'
                                    - '    orders: body.map((order) => {'
                                    - '        return {...order, items: order.items.length};'
                                    - '    }),'
                                    - '    total: body.reduce((acc, order) => acc + order.orderTotal, 0)'
                                    - '});'
                                    - ''
                                    - ''
                                    - // Tests
                                    - ''
                                    - >-
                                      it("Should have 200 OK status code",
                                      function () {
                                    - '    pm.response.to.have.status(200);'
                                    - '});'
                                    - ''
                                    - >-
                                      it('Orders should have the new order',
                                      function () {
                                    - '    expect(body.length).to.be.ok;'
                                    - '    '
                                    - '    let orderFound = false;'
                                    - '    '
                                    - '    body.forEach((order) => {'
                                    - '        orderFound = orderFound || order.orderId === pm.environment.get(''orderId'');'
                                    - '        '
                                    - '        expect(order.orderId).to.be.ok;'
                                    - '        expect(order.items.length).to.be.ok;'
                                    - '        expect(order.orderTotal).to.be.ok;'
                                    - '        expect(order.arrivalDate).to.be.ok;'
                                    - '        expect(order.orderDate).to.be.ok;'
                                    - '    });'
                                    - '    '
                                    - '    expect(orderFound).to.eql(true);'
                                    - '});'
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: Obtain order details from orders database
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables: {}
                            url: '{{baseUrl}}/orders?list=10'
                            preRequestScript: null
                            tests: >-
                              const body = pm.response.json();


                              eval(pm.variables.get("lib"));


                              // Views

                              const template = `
                                  <style>
                                      body {
                                          color: #fff;
                                      }
                                  </style>
                                  <table>
                                      <tr>
                                          <th style="padding-left: 10px;">Order ID</th>
                                          <th>Items</th>
                                          <th>Ordered At</th>
                                          <th>Address</th>
                                          <th style="padding-right: 10px;">Total Amount</th>
                                      </tr>

                                      {{#each orders}}
                                          <tr>
                                              <td style="padding-left: 10px;">{{orderId}}</td>
                                              <td>{{items}}</td>
                                              <td>{{orderDate}}</td>
                                              <td>{{address}}</td>
                                              <td style="padding-right: 10px;">£ {{orderTotal}}</td>
                                          </tr>
                                      {{/each}}

                                      <tr>
                                          <td colSpan=4 style="text-align: right">
                                              <b>Total</b>
                                          </td>
                                          <td>£ {{total}}</td>
                                      </tr>
                                  </table>
                              `;


                              pm.visualizer.set(template, {
                                  orders: body.map((order) => {
                                      return {...order, items: order.items.length};
                                  }),
                                  total: body.reduce((acc, order) => acc + order.orderTotal, 0)
                              });



                              // Tests


                              it("Should have 200 OK status code", function () {
                                  pm.response.to.have.status(200);
                              });


                              it('Orders should have the new order', function ()
                              {
                                  expect(body.length).to.be.ok;

                                  let orderFound = false;

                                  body.forEach((order) => {
                                      orderFound = orderFound || order.orderId === pm.environment.get('orderId');

                                      expect(order.orderId).to.be.ok;
                                      expect(order.items.length).to.be.ok;
                                      expect(order.orderTotal).to.be.ok;
                                      expect(order.arrivalDate).to.be.ok;
                                      expect(order.orderDate).to.be.ok;
                                  });

                                  expect(orderFound).to.eql(true);
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams:
                              - key: list
                                value: '10'
                                description: Number of orders to show
                            headerData: []
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:30.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                            responses: []
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071947
                            folder: 40f5b319-a933-43bd-b191-57a913fc1079
                            collection: 7732157#6537c169-8d02-413f-94f3-4dda79355a90
                            id: 439edcda-c456-4ca8-86b4-b0dc37c08ed1
                            name: Fetch order details
                            dataMode: null
                            data: null
                            auth: null
                            events:
                              - listen: test
                                script:
                                  id: 432bb7df-08aa-43d3-8bf8-e7afcf7d5291
                                  exec:
                                    - const body = pm.response.json();
                                    - ''
                                    - eval(pm.variables.get("lib"));
                                    - ''
                                    - // Views
                                    - const template = `
                                    - '    <style>'
                                    - '        body {'
                                    - '            color: #fff;'
                                    - '        }'
                                    - '    </style>'
                                    - '    <h5>Order: {{id}}</h5>'
                                    - '    <p>'
                                    - '        <b>Address:</b> {{address}}</br>'
                                    - '        Delivery By: {{arrivalDate}}'
                                    - '    </p>'
                                    - '    <hr />'
                                    - '    <table>'
                                    - '        <tr>'
                                    - '            <th style="padding-left: 10px;">Name</th>'
                                    - '            <th>Description</th>'
                                    - '            <th style="padding-right: 10px;">Price</th>'
                                    - '        </tr>'
                                    - ''
                                    - '        {{#each items}}'
                                    - '            <tr>'
                                    - '                <td style="padding-left: 10px;">{{name}}</td>'
                                    - '                <td>{{description}}</td>'
                                    - '                <td style="padding-right: 10px;">£ {{price}}</td>'
                                    - '            </tr>'
                                    - '        {{/each}}'
                                    - '        '
                                    - '        <tr>'
                                    - '            <td colSpan=2 style="text-align: right">'
                                    - '                <b>Total</b>'
                                    - '            </td>'
                                    - '            <td>£ {{total}}</td>'
                                    - '        </tr>'
                                    - '    </table>'
                                    - '`;'
                                    - ''
                                    - 'pm.visualizer.set(template, {'
                                    - '    items: body.items,'
                                    - '    id: body.orderId,'
                                    - '    address: body.address,'
                                    - '    total: body.orderTotal,'
                                    - '    arrivalDate: body.arrivalDate'
                                    - '});'
                                    - ''
                                    - ''
                                    - // Tests
                                    - ''
                                    - >-
                                      it("Should have 200 OK status code",
                                      function () {
                                    - '    pm.response.to.have.status(200);'
                                    - '});'
                                    - ''
                                    - >-
                                      it('Order should have the correct item',
                                      function () {
                                    - '    expect(body.orderId).to.be.ok;'
                                    - '    expect(body.items.length).to.eql(1);'
                                    - '    '
                                    - '    expect(body.arrivalDate).to.be.ok;'
                                    - '    expect(body.orderDate).to.be.ok;'
                                    - '    expect(body.orderTotal).to.eql(15);'
                                    - '    expect(body.address).to.eql(''SimpleKart HQ, 221B Baker street'');'
                                    - '});'
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: null
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables:
                              orderId: '{{orderId}}'
                            url: '{{baseUrl}}/orders/:orderId'
                            preRequestScript: null
                            tests: >-
                              const body = pm.response.json();


                              eval(pm.variables.get("lib"));


                              // Views

                              const template = `
                                  <style>
                                      body {
                                          color: #fff;
                                      }
                                  </style>
                                  <h5>Order: {{id}}</h5>
                                  <p>
                                      <b>Address:</b> {{address}}</br>
                                      Delivery By: {{arrivalDate}}
                                  </p>
                                  <hr />
                                  <table>
                                      <tr>
                                          <th style="padding-left: 10px;">Name</th>
                                          <th>Description</th>
                                          <th style="padding-right: 10px;">Price</th>
                                      </tr>

                                      {{#each items}}
                                          <tr>
                                              <td style="padding-left: 10px;">{{name}}</td>
                                              <td>{{description}}</td>
                                              <td style="padding-right: 10px;">£ {{price}}</td>
                                          </tr>
                                      {{/each}}

                                      <tr>
                                          <td colSpan=2 style="text-align: right">
                                              <b>Total</b>
                                          </td>
                                          <td>£ {{total}}</td>
                                      </tr>
                                  </table>
                              `;


                              pm.visualizer.set(template, {
                                  items: body.items,
                                  id: body.orderId,
                                  address: body.address,
                                  total: body.orderTotal,
                                  arrivalDate: body.arrivalDate
                              });



                              // Tests


                              it("Should have 200 OK status code", function () {
                                  pm.response.to.have.status(200);
                              });


                              it('Order should have the correct item', function
                              () {
                                  expect(body.orderId).to.be.ok;
                                  expect(body.items.length).to.eql(1);

                                  expect(body.arrivalDate).to.be.ok;
                                  expect(body.orderDate).to.be.ok;
                                  expect(body.orderTotal).to.eql(15);
                                  expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData: []
                            pathVariableData:
                              - id: b53c14f2-5910-4e3f-9682-0d8ec447ae98
                                key: orderId
                                value: '{{orderId}}'
                                type: string
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:30.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                            responses: []
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071945
                            folder: 04b872d9-135f-4274-a18f-3439c3a63318
                            collection: 7732157#6537c169-8d02-413f-94f3-4dda79355a90
                            id: 9a1aec9e-04ff-4956-8a26-466b33e879e6
                            name: Fetch all items
                            dataMode: null
                            data: null
                            auth: null
                            events:
                              - listen: test
                                script:
                                  id: 0bbab959-ead2-45d9-a055-5bbc0fb4947d
                                  exec:
                                    - const body = pm.response.json();
                                    - ''
                                    - eval(pm.variables.get("lib"));
                                    - ''
                                    - // Views
                                    - const template = `
                                    - '    <style>'
                                    - '        body {'
                                    - '            color: #fff;'
                                    - '        }'
                                    - '    </style>'
                                    - '    <table>'
                                    - '        <tr>'
                                    - '            <th style="padding-left: 10px; width: 25%;">Name</th>'
                                    - '            <th style="width: 50%">Description</th>'
                                    - '            <th style="padding-right: 10px;">Price</th>'
                                    - '        </tr>'
                                    - ''
                                    - '        {{#each items}}'
                                    - '            <tr>'
                                    - '                <td style="padding-left: 10px;">{{name}}</td>'
                                    - '                <td>{{description}}</td>'
                                    - '                <td style="padding-right: 10px;">£ {{price}}</td>'
                                    - '            </tr>'
                                    - '        {{/each}}'
                                    - '    </table>'
                                    - '`;'
                                    - ''
                                    - 'pm.visualizer.set(template, {'
                                    - '    items: body'
                                    - '});'
                                    - ''
                                    - ''
                                    - // Tests
                                    - ''
                                    - >-
                                      it("Should have 200 OK status code",
                                      function () {
                                    - '    pm.response.to.have.status(200);'
                                    - '});'
                                    - ''
                                    - >-
                                      it('Order should have the correct item',
                                      function () {
                                    - '    expect(body.length).to.be.ok;'
                                    - '    '
                                    - '    body.forEach((item) => {'
                                    - '        expect(item.name).to.be.ok;'
                                    - '        expect(item.description).to.be.ok;'
                                    - '        expect(item.itemId).to.be.ok;'
                                    - '        expect(item.price).to.be.ok;'
                                    - '    });'
                                    - '});'
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: null
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables: {}
                            url: '{{baseUrl}}/items?list=10'
                            preRequestScript: null
                            tests: >-
                              const body = pm.response.json();


                              eval(pm.variables.get("lib"));


                              // Views

                              const template = `
                                  <style>
                                      body {
                                          color: #fff;
                                      }
                                  </style>
                                  <table>
                                      <tr>
                                          <th style="padding-left: 10px; width: 25%;">Name</th>
                                          <th style="width: 50%">Description</th>
                                          <th style="padding-right: 10px;">Price</th>
                                      </tr>

                                      {{#each items}}
                                          <tr>
                                              <td style="padding-left: 10px;">{{name}}</td>
                                              <td>{{description}}</td>
                                              <td style="padding-right: 10px;">£ {{price}}</td>
                                          </tr>
                                      {{/each}}
                                  </table>
                              `;


                              pm.visualizer.set(template, {
                                  items: body
                              });



                              // Tests


                              it("Should have 200 OK status code", function () {
                                  pm.response.to.have.status(200);
                              });


                              it('Order should have the correct item', function
                              () {
                                  expect(body.length).to.be.ok;

                                  body.forEach((item) => {
                                      expect(item.name).to.be.ok;
                                      expect(item.description).to.be.ok;
                                      expect(item.itemId).to.be.ok;
                                      expect(item.price).to.be.ok;
                                  });
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams:
                              - key: list
                                value: '10'
                            headerData: []
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:30.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                            responses: []
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071983
                            folder: 40f5b319-a933-43bd-b191-57a913fc1079
                            collection: 7732157#6537c169-8d02-413f-94f3-4dda79355a90
                            id: a7a92db7-5657-4a7b-b525-fcd1f27139ee
                            name: Create an order
                            dataMode: raw
                            data: null
                            auth: null
                            events:
                              - listen: test
                                script:
                                  id: 4b9f2b9f-4e5b-45cc-90a8-e3a6adc43b69
                                  exec:
                                    - const body = pm.response.json();
                                    - ''
                                    - eval(pm.variables.get("lib"));
                                    - ''
                                    - // Views
                                    - const template = `
                                    - '    <style>'
                                    - '        body {'
                                    - '            color: #fff;'
                                    - '        }'
                                    - '    </style>'
                                    - '    <h5>Order: {{id}}</h5>'
                                    - '    <p>'
                                    - '        <b>Address:</b> {{address}}</br>'
                                    - '        Delivery By: {{arrivalDate}}'
                                    - '    </p>'
                                    - '    <hr />'
                                    - '    <table>'
                                    - '        <tr>'
                                    - '            <th style="padding-left: 10px;">Name</th>'
                                    - '            <th>Description</th>'
                                    - '            <th style="padding-right: 10px;">Price</th>'
                                    - '        </tr>'
                                    - ''
                                    - '        {{#each items}}'
                                    - '            <tr>'
                                    - '                <td style="padding-left: 10px;">{{name}}</td>'
                                    - '                <td>{{description}}</td>'
                                    - '                <td style="padding-right: 10px;">£ {{price}}</td>'
                                    - '            </tr>'
                                    - '        {{/each}}'
                                    - '        '
                                    - '        <tr>'
                                    - '            <td colSpan=2 style="text-align: right">'
                                    - '                <b>Total</b>'
                                    - '            </td>'
                                    - '            <td>£ {{total}}</td>'
                                    - '        </tr>'
                                    - '    </table>'
                                    - '`;'
                                    - ''
                                    - 'pm.visualizer.set(template, {'
                                    - '    items: body.items,'
                                    - '    id: body.orderId,'
                                    - '    address: body.address,'
                                    - '    total: body.orderTotal,'
                                    - '    arrivalDate: body.arrivalDate'
                                    - '});'
                                    - ''
                                    - ''
                                    - // Tests
                                    - ''
                                    - >-
                                      it("Should have 200 OK status code",
                                      function () {
                                    - '    pm.response.to.have.status(201);'
                                    - '});'
                                    - ''
                                    - >-
                                      it('Order should have the correct item',
                                      function () {
                                    - '    expect(body.orderId).to.be.ok;'
                                    - '    expect(body.items.length).to.eql(1);'
                                    - '    '
                                    - '    expect(body.arrivalDate).to.be.ok;'
                                    - '    expect(body.orderDate).to.be.ok;'
                                    - '    expect(body.orderTotal).to.eql(15);'
                                    - '    expect(body.address).to.eql(''SimpleKart HQ, 221B Baker street'');'
                                    - '});'
                                    - ''
                                    - >-
                                      pm.environment.set('orderId',
                                      body.orderId);
                                  type: text/javascript
                            rawModeData: |-
                              {
                                  "address": "SimpleKart HQ, 221B Baker street",
                                  "items": [
                                      {
                                          "itemId": 16247,
                                          "name": "Postman Merch",
                                          "price": 15,
                                          "description": "Official T-shirt for the Postman community."
                                      }
                                  ]
                              }
                            descriptionFormat: null
                            description: null
                            variables: null
                            headers: |
                              x-mock-match-request-body: true
                              Content-Type: application/json
                            method: POST
                            pathVariables: {}
                            url: '{{baseUrl}}/orders'
                            preRequestScript: null
                            tests: >-
                              const body = pm.response.json();


                              eval(pm.variables.get("lib"));


                              // Views

                              const template = `
                                  <style>
                                      body {
                                          color: #fff;
                                      }
                                  </style>
                                  <h5>Order: {{id}}</h5>
                                  <p>
                                      <b>Address:</b> {{address}}</br>
                                      Delivery By: {{arrivalDate}}
                                  </p>
                                  <hr />
                                  <table>
                                      <tr>
                                          <th style="padding-left: 10px;">Name</th>
                                          <th>Description</th>
                                          <th style="padding-right: 10px;">Price</th>
                                      </tr>

                                      {{#each items}}
                                          <tr>
                                              <td style="padding-left: 10px;">{{name}}</td>
                                              <td>{{description}}</td>
                                              <td style="padding-right: 10px;">£ {{price}}</td>
                                          </tr>
                                      {{/each}}

                                      <tr>
                                          <td colSpan=2 style="text-align: right">
                                              <b>Total</b>
                                          </td>
                                          <td>£ {{total}}</td>
                                      </tr>
                                  </table>
                              `;


                              pm.visualizer.set(template, {
                                  items: body.items,
                                  id: body.orderId,
                                  address: body.address,
                                  total: body.orderTotal,
                                  arrivalDate: body.arrivalDate
                              });



                              // Tests


                              it("Should have 200 OK status code", function () {
                                  pm.response.to.have.status(201);
                              });


                              it('Order should have the correct item', function
                              () {
                                  expect(body.orderId).to.be.ok;
                                  expect(body.items.length).to.eql(1);

                                  expect(body.arrivalDate).to.be.ok;
                                  expect(body.orderDate).to.be.ok;
                                  expect(body.orderTotal).to.eql(15);
                                  expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');
                              });


                              pm.environment.set('orderId', body.orderId);
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData:
                              - key: x-mock-match-request-body
                                value: 'true'
                                type: text
                              - key: Content-Type
                                value: application/json
                                type: text
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:30.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                            dataOptions:
                              raw:
                                language: json
                            responses: []
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071940
                            folder: e77c8b4e-7f2d-46d9-b352-2e189aa73269
                            collection: 7732157#6537c169-8d02-413f-94f3-4dda79355a90
                            id: f256019f-c62e-44f8-b440-1c8de665c050
                            name: Fetch order details
                            dataMode: null
                            data: null
                            auth: null
                            events:
                              - listen: test
                                script:
                                  id: 432bb7df-08aa-43d3-8bf8-e7afcf7d5291
                                  exec:
                                    - const body = pm.response.json();
                                    - ''
                                    - eval(pm.variables.get("lib"));
                                    - ''
                                    - // Views
                                    - const template = `
                                    - '    <style>'
                                    - '        body {'
                                    - '            color: #fff;'
                                    - '        }'
                                    - '    </style>'
                                    - '    <h5>Order: {{id}}</h5>'
                                    - '    <p>'
                                    - '        <b>Address:</b> {{address}}</br>'
                                    - '        Delivery By: {{arrivalDate}}'
                                    - '    </p>'
                                    - '    <hr />'
                                    - '    <table>'
                                    - '        <tr>'
                                    - '            <th style="padding-left: 10px;">Name</th>'
                                    - '            <th>Description</th>'
                                    - '            <th style="padding-right: 10px;">Price</th>'
                                    - '        </tr>'
                                    - ''
                                    - '        {{#each items}}'
                                    - '            <tr>'
                                    - '                <td style="padding-left: 10px;">{{name}}</td>'
                                    - '                <td>{{description}}</td>'
                                    - '                <td style="padding-right: 10px;">£ {{price}}</td>'
                                    - '            </tr>'
                                    - '        {{/each}}'
                                    - '        '
                                    - '        <tr>'
                                    - '            <td colSpan=2 style="text-align: right">'
                                    - '                <b>Total</b>'
                                    - '            </td>'
                                    - '            <td>£ {{total}}</td>'
                                    - '        </tr>'
                                    - '    </table>'
                                    - '`;'
                                    - ''
                                    - 'pm.visualizer.set(template, {'
                                    - '    items: body.items,'
                                    - '    id: body.orderId,'
                                    - '    address: body.address,'
                                    - '    total: body.orderTotal,'
                                    - '    arrivalDate: body.arrivalDate'
                                    - '});'
                                    - ''
                                    - ''
                                    - // Tests
                                    - ''
                                    - >-
                                      it("Should have 200 OK status code",
                                      function () {
                                    - '    pm.response.to.have.status(200);'
                                    - '});'
                                    - ''
                                    - >-
                                      it('Order should have the correct item',
                                      function () {
                                    - '    expect(body.orderId).to.be.ok;'
                                    - '    expect(body.items.length).to.eql(1);'
                                    - '    '
                                    - '    expect(body.arrivalDate).to.be.ok;'
                                    - '    expect(body.orderDate).to.be.ok;'
                                    - '    expect(body.orderTotal).to.eql(15);'
                                    - '    expect(body.address).to.eql(''SimpleKart HQ, 221B Baker street'');'
                                    - '});'
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: null
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables:
                              orderId: '{{orderId}}'
                            url: '{{baseUrl}}/orders/:orderId'
                            preRequestScript: null
                            tests: >-
                              const body = pm.response.json();


                              eval(pm.variables.get("lib"));


                              // Views

                              const template = `
                                  <style>
                                      body {
                                          color: #fff;
                                      }
                                  </style>
                                  <h5>Order: {{id}}</h5>
                                  <p>
                                      <b>Address:</b> {{address}}</br>
                                      Delivery By: {{arrivalDate}}
                                  </p>
                                  <hr />
                                  <table>
                                      <tr>
                                          <th style="padding-left: 10px;">Name</th>
                                          <th>Description</th>
                                          <th style="padding-right: 10px;">Price</th>
                                      </tr>

                                      {{#each items}}
                                          <tr>
                                              <td style="padding-left: 10px;">{{name}}</td>
                                              <td>{{description}}</td>
                                              <td style="padding-right: 10px;">£ {{price}}</td>
                                          </tr>
                                      {{/each}}

                                      <tr>
                                          <td colSpan=2 style="text-align: right">
                                              <b>Total</b>
                                          </td>
                                          <td>£ {{total}}</td>
                                      </tr>
                                  </table>
                              `;


                              pm.visualizer.set(template, {
                                  items: body.items,
                                  id: body.orderId,
                                  address: body.address,
                                  total: body.orderTotal,
                                  arrivalDate: body.arrivalDate
                              });



                              // Tests


                              it("Should have 200 OK status code", function () {
                                  pm.response.to.have.status(200);
                              });


                              it('Order should have the correct item', function
                              () {
                                  expect(body.orderId).to.be.ok;
                                  expect(body.items.length).to.eql(1);

                                  expect(body.arrivalDate).to.be.ok;
                                  expect(body.orderDate).to.be.ok;
                                  expect(body.orderTotal).to.eql(15);
                                  expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');
                              });
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData: []
                            pathVariableData:
                              - id: b503569e-d002-438c-b691-6e8484615ece
                                key: orderId
                                value: '{{orderId}}'
                                type: string
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:30.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                            responses: []
                      7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4:
                        owner: '7732157'
                        lastUpdatedBy: '7732157'
                        lastRevision: 14717260655
                        team: null
                        id: 7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                        name: SimpleKart 2
                        description: >-
                          The SimpleKart REST API demonstrates the API Builder
                          capabilities in Postman using an imaginary E-Commerce.
                          It provides endpoints for retrieving items or orders
                          and their details from a database as well as adding
                          order details to a database.


                          > This API is built on top of a mock server, this
                          means the data is static and can't be edited.


                          # Getting Started


                          Make sure that you have the `Prod` environment
                          selected in Postman ([learn more about
                          environments](https://learning.postman.com/docs/postman/variables-and-environments/variables/#environments-in-postman))
                          and you will be able to start sending request to the
                          SimpleKart API.


                          # Contact Support


                          - Name: Postman Team

                          - Email: simplekart@postman.com
                        variables:
                          - id: 0ee689b9-a186-4c49-8ae9-609f37a69bc3
                            key: baseUrl
                            value: 'https://api.simplekart.com'
                            type: string
                            enabled: true
                        auth: null
                        events:
                          - listen: prerequest
                            script:
                              id: 638918cb-5678-4ca5-ad70-56d23af6d445
                              type: text/javascript
                              exec:
                                - ''
                          - listen: test
                            script:
                              id: 9511970b-85b6-49d8-ac12-f0ba4b4bd6e4
                              type: text/javascript
                              exec:
                                - ''
                        remote_id: '0'
                        remoteLink: null
                        folders_order:
                          - 9d1cb5bc-ad57-4975-aae9-297c4743ed68
                          - 706cf457-8a17-4b91-a606-7875d9561e90
                        order: []
                        createdAt: '2020-05-13T18:49:29.000Z'
                        updatedAt: '2020-05-13T19:40:28.000Z'
                        folders:
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716072039
                            collection: 7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            folder: null
                            id: 706cf457-8a17-4b91-a606-7875d9561e90
                            name: Orders
                            description: >-
                              You can retrieve a list of orders or the details
                              of a single order from the `orders` database.
                            variables: null
                            auth: null
                            events: null
                            order:
                              - 083f01b8-b62e-41a6-9099-ee194c631464
                              - 3d30ff57-0a41-42a5-80f1-9f6930725f7c
                              - e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20
                            folders_order: []
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716072037
                            collection: 7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            folder: null
                            id: 9d1cb5bc-ad57-4975-aae9-297c4743ed68
                            name: Items
                            description: >-
                              You can retrieve a list of items or the details of
                              a single item from the `items` database.
                            variables: null
                            auth: null
                            events: null
                            order:
                              - 6316706f-cdbd-4a92-81d8-e89412f7a3e8
                              - b2904734-bdfb-405d-b595-e80bcf89d336
                            folders_order: []
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                        requests:
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071738
                            folder: 706cf457-8a17-4b91-a606-7875d9561e90
                            collection: 7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            id: 083f01b8-b62e-41a6-9099-ee194c631464
                            name: 'Get orders from the database '
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events: null
                            rawModeData: null
                            descriptionFormat: null
                            description: >-
                              ## Get a list of orders


                              You can use the `/orders` endpoint to retrieve a
                              list of orders, you can indicate how many orders
                              to show by changing the value of the `list`
                              parameter in the query, e.g. to display only 3
                              orders you can use

                              `{{baseUrl}}/orders?list=3`.
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables: {}
                            url: '{{baseUrl}}/orders?list=10'
                            preRequestScript: null
                            tests: null
                            currentHelper: null
                            helperAttributes: null
                            queryParams:
                              - key: list
                                value: '10'
                                description: Number of orders to show
                            headerData: []
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071862
                                request: 083f01b8-b62e-41a6-9099-ee194c631464
                                id: 8ee2ffa2-13d6-48fd-a775-3effda723ac0
                                name: OK - Successful pull of orders
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  [
                                    {
                                      "orderId": 674,
                                      "items": [
                                        {
                                          "itemId": 1657,
                                          "name": "Smart WiFi Router",
                                          "price": 2096,
                                          "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                        }
                                      ],
                                      "arrivalDate": "2020-03-03T13:07:45.962Z",
                                      "orderDate": "2020-03-01T19:27:26.733Z",
                                      "orderTotal": 2096,
                                      "address": "95 Tarkiln Hill St.Laurel, MD 20707"
                                    },
                                    {
                                      "orderId": 675,
                                      "items": [
                                        {
                                          "itemId": 1658,
                                          "name": "VR Gaming Headset",
                                          "price": 79990,
                                          "description": "VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR."
                                        }
                                      ],
                                      "arrivalDate": "2020-03-03T15:00:56.787Z",
                                      "orderDate": "2020-03-02T21:25:22.096Z",
                                      "orderTotal": 79990,
                                      "address": "7405 Arcadia St.Rockville, MD 20850"
                                    },
                                    {
                                      "orderId": 676,
                                      "items": [
                                        {
                                          "itemId": 1665,
                                          "name": "Smart Watch",
                                          "price": 1805,
                                          "description": "Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data."
                                        }
                                      ],
                                      "arrivalDate": "2020-03-05T17:30:15.156Z",
                                      "orderDate": "2020-03-03T01:10:27.512Z",
                                      "orderTotal": 1805,
                                      "address": "9791 Lawrence Dr.Marlton, NJ 08053r"
                                    },
                                    {
                                      "orderId": 677,
                                      "items": [
                                        {
                                          "itemId": 1659,
                                          "name": "Classic Loop Top Shaker Bottle, 20-Ounce",
                                          "price": 578,
                                          "description": "Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation."
                                        }
                                      ],
                                      "arrivalDate": "2020-03-03T18:16:24.911Z",
                                      "orderDate": "2020-03-01T06:09:23.007Z",
                                      "orderTotal": 578,
                                      "address": "822 Clay St.Tampa, FL 33604"
                                    },
                                    {
                                      "orderId": 678,
                                      "items": [
                                        {
                                          "itemId": 1663,
                                          "name": "Hair Dryer",
                                          "price": 1400,
                                          "description": "Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%."
                                        }
                                      ],
                                      "arrivalDate": "2020-03-04T12:09:07.955Z",
                                      "orderDate": "2020-03-02T21:50:44.173Z",
                                      "orderTotal": 1400,
                                      "address": "7444 SW. State Ave.Philadelphia, PA 19111"
                                    },
                                    {
                                      "orderId": 679,
                                      "items": [
                                        {
                                          "itemId": 1660,
                                          "name": "4-Port USB 2.0 Hub",
                                          "price": 505,
                                          "description": "Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products."
                                        }
                                      ],
                                      "arrivalDate": "2020-03-04T11:29:56.99Z",
                                      "orderDate": "2020-03-03T00:51:26.19Z",
                                      "orderTotal": 505,
                                      "address": "307 Purple Finch Ave.New Lenox, IL 60451"
                                    },
                                    {
                                      "orderId": 680,
                                      "items": [
                                        {
                                          "itemId": 1661,
                                          "name": "Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)",
                                          "price": 938,
                                          "description": "For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone."
                                        }
                                      ],
                                      "arrivalDate": "2020-03-04T02:06:58.886Z",
                                      "orderDate": "2020-03-02T04:33:52.652Z",
                                      "orderTotal": 938,
                                      "address": "946 Holly StreetHamilton, OH 45011"
                                    },
                                    {
                                      "orderId": 681,
                                      "items": [
                                        {
                                          "itemId": 1663,
                                          "name": "Hair Dryer",
                                          "price": 1400,
                                          "description": "Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%."
                                        }
                                      ],
                                      "arrivalDate": "2020-03-04T17:26:07.706Z",
                                      "orderDate": "2020-03-02T04:17:23.689Z",
                                      "orderTotal": 1400,
                                      "address": "8924 East Birchwood St.Hamburg, NY 14075"
                                    },
                                    {
                                      "orderId": 682,
                                      "items": [
                                        {
                                          "itemId": 1665,
                                          "name": "Smart Watch",
                                          "price": 1805,
                                          "description": "Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data."
                                        }
                                      ],
                                      "arrivalDate": "2020-03-05T14:07:01.688Z",
                                      "orderDate": "2020-03-03T04:58:18.504Z",
                                      "orderTotal": 1805,
                                      "address": "10 Wilson LaneBay City, MI 48706"
                                    },
                                    {
                                      "orderId": 683,
                                      "items": [
                                        {
                                          "itemId": 1666,
                                          "name": "Learning Thermostat, 3rd Gen, Smart Thermostat",
                                          "price": 15746,
                                          "description": "Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills."
                                        }
                                      ],
                                      "arrivalDate": "2020-03-05T10:43:23.713Z",
                                      "orderDate": "2020-03-03T08:34:21.21Z",
                                      "orderTotal": 15746,
                                      "address": "m81 West Shirley Dr.Greenfield, IN 46140"
                                    },
                                    {
                                      "orderId": 656,
                                      "items": [
                                        {
                                          "itemId": 16247,
                                          "name": "Postman Merch",
                                          "price": 15,
                                          "description": "Official Merch for the Postman community."
                                        }
                                      ],
                                      "arrivalDate": "2020-3-04T13:07:45.962Z",
                                      "orderDate": "2020-03-06T19:27:26.733Z",
                                      "orderTotal": 15,
                                      "address": "SimpleKart HQ, 221B Baker street"
                                    }
                                  ]
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"008f4403-5916-4f90-ac81-803f82eb1db0","method":"GET","headers":"","url":"{{baseUrl}}/orders?list=10","pathVariableData":[],"queryParams":[{"key":"list","value":"10"}],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071860
                            folder: 706cf457-8a17-4b91-a606-7875d9561e90
                            collection: 7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            id: 3d30ff57-0a41-42a5-80f1-9f6930725f7c
                            name: Post order details to the database
                            dataMode: raw
                            data: null
                            auth:
                              type: noauth
                            events: null
                            rawModeData: |-
                              {
                                  "address": "<string>",
                                  "item": {
                                      "itemId": 1,
                                      "name": "<string>",
                                      "price": 2000,
                                      "description": "<string>"
                                  }
                              }
                            descriptionFormat: null
                            description: >-
                              ## Add an order to the database


                              You can send a `POST` request to the `/orders`
                              endpoint to create a new order and add it to the
                              `orders` database. Open the body tab, edit the
                              JSON object to match the item you want to add an
                              order of, then click `Send`.


                              ![Add
                              order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)


                              > Since this sample API is built using a mock
                              server, the same object will be added regardless
                              of what you enter.
                            variables: null
                            headers: |
                              Content-Type: application/json
                            method: POST
                            pathVariables: {}
                            url: '{{baseUrl}}/orders'
                            preRequestScript: null
                            tests: null
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData:
                              - key: Content-Type
                                value: application/json
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:30.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                            dataOptions:
                              raw: {}
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071975
                                request: 3d30ff57-0a41-42a5-80f1-9f6930725f7c
                                id: a0382128-d86f-4aaa-9df5-9a196ffe1b6b
                                name: Ok - Postman Merch
                                status: Created
                                responseCode:
                                  code: 201
                                  name: Created
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                    description: ''
                                    type: text
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                      "orderId": 656,
                                      "items": [
                                          {
                                              "itemId": 16247,
                                              "name": "Postman Merch",
                                              "price": 15,
                                              "description": "Official Merch for the Postman community."
                                          }
                                      ],
                                      "arrivalDate": "2020-3-04T13:07:45.962Z",
                                      "orderDate": "2020-03-06T19:27:26.733Z",
                                      "orderTotal": 15,
                                      "address": "SimpleKart HQ, 221B Baker street"
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"3f2d1a20-ae0e-4942-ab87-7f1495235f91","method":"POST","headers":"Content-Type:
                                  application/json","dataMode":"raw","url":"https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io/orders","dataOptions":{"raw":{"language":"json"}},"pathVariableData":[],"queryParams":[],"headerData":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"data":"{\n
                                  \"address\": \"SimpleKart HQ, 221B Baker
                                  street\",\n    \"items\": [\n
                                  {\n            \"itemId\": 16247,\n
                                  \"name\": \"Postman Merch\",\n
                                  \"price\": 15,\n            \"description\":
                                  \"Official T-shirt for the Postman
                                  community.\"\n        }\n
                                  ]\n}","protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071973
                                request: 3d30ff57-0a41-42a5-80f1-9f6930725f7c
                                id: ef10beb1-7b45-4c86-b038-7d343ad6c74d
                                name: OK - Order created
                                status: Created
                                responseCode:
                                  code: 201
                                  name: Created
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                      "orderId": 674,
                                      "items": [
                                          {
                                              "itemId": 1657,
                                              "name": "Smart WiFi Router",
                                              "price": 2096,
                                              "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                          }
                                      ],
                                      "arrivalDate": "2020-3-04T13:07:45.962Z",
                                      "orderDate": "2020-03-06T19:27:26.733Z",
                                      "orderTotal": 2096,
                                      "address": "95 Tarkiln Hill St.Laurel, MD 20707"
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"9d259dc2-a1a3-4bfe-9f26-6adb29e02c72","method":"POST","headers":"Content-Type:
                                  application/json","dataMode":"raw","url":"{{baseUrl}}/orders","dataOptions":{"raw":{"language":"json"}},"pathVariableData":[],"queryParams":[],"headerData":[{"key":"Content-Type","name":"Content-Type","value":"application/json","type":"text"}],"data":"{\n
                                  \"items\": [\n        {\n
                                  \"itemId\": 1657,\n            \"name\":
                                  \"Smart WiFi Router\",\n            \"price\":
                                  2096,\n            \"description\": \"Wifi
                                  router/wireless router. One of routers for
                                  wireless internet, wireless routers for home.
                                  Dual band router and gigabit router. Ideal as
                                  internet router also gaming router. Long range
                                  coverage with high speed. Compatible with all
                                  802.11ac devices and below. 5ghz router/5g
                                  router Frequency Range: 2.4GHz and 5GHz;
                                  Interface Available: 4 x 10/100/1000Mbps LAN
                                  Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0
                                  Ports; Protocols Supported: Supports IPv4 and
                                  IPv6; System Requirement: Microsoft Windows
                                  98SE NT 2000 XP Vista, or Windows 7 Windows
                                  8/8.1/10, MAC OS NetWare UNIX or Linux;
                                  Wireless Standards: IEEE 802.11ac/n/a 5GHz,
                                  IEEE 802.11b/g/n 2.4GH\"\n        }\n
                                  ],\n    \"address\": \"95 Tarkiln Hill
                                  St.Laurel, MD
                                  20707\"\n}","protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14717192996
                            folder: 9d1cb5bc-ad57-4975-aae9-297c4743ed68
                            collection: 7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            id: 6316706f-cdbd-4a92-81d8-e89412f7a3e8
                            name: Get items from the database
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events: null
                            rawModeData: null
                            descriptionFormat: null
                            description: >-
                              # Get a list of items


                              You can use the `/items` endpoint to retrieve a
                              list of items, you can indicate how many items to
                              retrieve by changing the value of the `list`
                              parameter in the query, e.g. to retrieve 3 items
                              you can use

                              `{{baseUrl}}/items?list=3`.
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables: {}
                            url: '{{baseUrl}}/items?list=10 '
                            preRequestScript: null
                            tests: null
                            currentHelper: null
                            helperAttributes: null
                            queryParams:
                              - key: list
                                value: '10 '
                                equals: true
                                description: Number of items to be displayed
                                enabled: true
                            headerData: []
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: false
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T19:37:05.000Z'
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071871
                                request: 6316706f-cdbd-4a92-81d8-e89412f7a3e8
                                id: 6b3b5a59-018c-4f21-a7ca-39832ef8c7aa
                                name: OK - Successful pull of items
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  [
                                      {
                                          "itemId": 1657,
                                          "name": "Smart WiFi Router",
                                          "price": 2096,
                                          "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                      },
                                      {
                                          "itemId": 1658,
                                          "name": "VR Gaming Headset",
                                          "price": 79990,
                                          "description": "VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR."
                                      },
                                      {
                                          "itemId": 1659,
                                          "name": "Classic Loop Top Shaker Bottle, 20-Ounce",
                                          "price": 578,
                                          "description": "Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation."
                                      },
                                      {
                                          "itemId": 1660,
                                          "name": "4-Port USB 2.0 Hub",
                                          "price": 505,
                                          "description": "Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products."
                                      },
                                      {
                                          "itemId": 1661,
                                          "name": "Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)",
                                          "price": 938,
                                          "description": "For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone."
                                      },
                                      {
                                          "itemId": 1662,
                                          "name": "Cordless Vacuum Cleaner",
                                          "price": 41893,
                                          "description": "Twice the suction of any cord-free vacuum. Cord-free cleaning, made easier. Intelligently optimizes suction and run time, to deep clean everywhere. With fade-free battery power and a battery-saving trigger. And real-time reporting on the LCD screen to give you control of your clean. The Dynamic Load Sensor (DLS) system automatically changes the motor speed between carpets and hard floors. For deep cleaning across floor types."
                                      },
                                      {
                                          "itemId": 1663,
                                          "name": "Hair Dryer",
                                          "price": 1400,
                                          "description": "Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%."
                                      },
                                      {
                                          "itemId": 1664,
                                          "name": "Business Z27n G2 27 inch LED LCD Monitor",
                                          "price": 24485,
                                          "description": "Be a productive powerhouse with the sleek QHD HP Z27n G2 27-inch Display. This virtually seamless display is factory-tested for reliability and longevity with integrated color calibration, uninterrupted multi-screen tiling, and expansive device connections, including USB-C™. Multi-screen productivity with no disruptions Streamline multi-tasking on multiple displays with a 3-sided micro-edge bezel, and daisy chain up to 2 displays per workstation with DisplayPort™."
                                      },
                                      {
                                          "itemId": 1665,
                                          "name": "Smart Watch",
                                          "price": 1805,
                                          "description": "Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data."
                                      },
                                      {
                                          "itemId": 1666,
                                          "name": "Learning Thermostat, 3rd Gen, Smart Thermostat",
                                          "price": 15746,
                                          "description": "Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills."
                                      },
                                      {
                                          "itemId": 16247,
                                          "name": "Postman Merch",
                                          "price": 15,
                                          "description": "Official Merch for the Postman community."
                                      }
                                  ]
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"0e5a82f4-ade4-4448-91a9-42b2fc338bdc","method":"GET","headers":"","url":"{{baseUrl}}/items?list=10","pathVariableData":[],"queryParams":[{"key":"list","value":"10"}],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071747
                            folder: 9d1cb5bc-ad57-4975-aae9-297c4743ed68
                            collection: 7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            id: b2904734-bdfb-405d-b595-e80bcf89d336
                            name: 'Get item details from the database '
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events: null
                            rawModeData: null
                            descriptionFormat: null
                            description: >-
                              # Get details of an item


                              You can retrieve the details of a single item that
                              you know the id of by adding the `itemId` as a
                              path variable, e.g. `{{baseUrl}}/items/1657`.


                              An item is represented as such:

                              ```

                              {
                                "itemId": 1010,
                                "name": "Item",
                                "price": 10,
                                "description": "Long description of the item"
                              }

                              ```
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables:
                              itemId: ''
                            url: '{{baseUrl}}/items/:itemId'
                            preRequestScript: null
                            tests: null
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData: []
                            pathVariableData:
                              - id: b42e19a7-ff40-4535-ba90-8e390adf2bdc
                                key: itemId
                                value: ''
                                type: string
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071869
                                request: b2904734-bdfb-405d-b595-e80bcf89d336
                                id: 72032385-5bef-4785-b3db-a48517f85a2f
                                name: >-
                                  Get item details from the database - Postman
                                  Merch
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                    description: ''
                                    type: text
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                      "itemId": 16247,
                                      "name": "Postman Merch",
                                      "price": 15,
                                      "description": "Official T-shirt for the Postman community."
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"7a7b46dd-8746-4a2f-8226-453ea4d60c57","method":"GET","headers":"","pathVariables":{"itemId":"16247"},"url":"https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io/items/:itemId","pathVariableData":[{"key":"itemId","value":"16247","description":"(Required)
                                  Id of the item to pull details
                                  of"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071868
                                request: b2904734-bdfb-405d-b595-e80bcf89d336
                                id: a1e90a07-62bd-4835-943a-8a2fa4d1db35
                                name: OK - Successfully obtained order details
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                      "itemId": 1657,
                                      "name": "Smart WiFi Router",
                                      "price": 2096,
                                      "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"62c998ec-4d48-4778-9627-033ec4506382","method":"GET","headers":"","pathVariables":{"itemId":""},"url":"{{baseUrl}}/items/:itemId","pathVariableData":[{"key":"itemId","value":""}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071864
                                request: b2904734-bdfb-405d-b595-e80bcf89d336
                                id: a4c1dd21-efbf-4c7e-b91a-f9d20a1fcf6d
                                name: Bad Request - Invalid item ID supplied
                                status: Bad Request
                                responseCode:
                                  code: 400
                                  name: Bad Request
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: text/plain
                                cookies: []
                                mime: ''
                                text: "{\n\t\"error\": {\n\t\t\"message\": \"Provided Id is invalid\"\n\t}\n}"
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"b88eaf11-62ed-4720-960f-ea98c00e630f","method":"GET","headers":"","pathVariables":{"itemId":"invalid_id"},"url":"{{baseUrl}}/items/:itemId","pathVariableData":[{"key":"itemId","value":"invalid_id"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071870
                                request: b2904734-bdfb-405d-b595-e80bcf89d336
                                id: af8c0897-bcb6-4468-a95a-a41e80a7768d
                                name: Not Found - Item not found
                                status: Not Found
                                responseCode:
                                  code: 404
                                  name: Not Found
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: text/plain
                                cookies: []
                                mime: ''
                                text: "{\n\t\"error\": {\n\t\t\"message\": \"The item you are looking for, does not exist\"\n\t}\n}"
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"24d0608f-35f0-41af-83ba-02a33703768b","method":"GET","headers":"","pathVariables":{},"url":"{{baseUrl}}/items/:itemId","pathVariableData":[{"key":"itemId"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071750
                            folder: 706cf457-8a17-4b91-a606-7875d9561e90
                            collection: 7732157#7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            id: e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20
                            name: Get order details from database
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events: null
                            rawModeData: null
                            descriptionFormat: null
                            description: >-
                              ## Get details of an order


                              You can retrieve the details of an order that you
                              know the id by adding the order number as a path
                              variable, e.g. `{{baseUrl}}/orders/674`.


                              An order is represented as such:

                              ```json

                              {
                                "orderId": 10,
                                "items": [
                                  {
                                    "itemId": 1010,
                                    "name": "Order name",
                                    "price": 10,
                                    "description": "Long description of the item"
                                  }
                                ],
                                "arrivalDate": "2020-03-05T14:07:01.688Z",
                                "orderDate": "2020-03-03T04:58:18.504Z",
                                "orderTotal": 10,
                                "address": "Delivery address"
                              }

                              ```
                            variables: null
                            headers: ''
                            method: GET
                            pathVariables:
                              orderId: ''
                            url: '{{baseUrl}}/orders/:orderId'
                            preRequestScript: null
                            tests: null
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData: []
                            pathVariableData:
                              - id: bbea0f51-0f5d-40a9-aa73-e7a3fee35828
                                key: orderId
                                value: ''
                                type: string
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071874
                                request: e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20
                                id: 22ea3d09-2e7c-4d6b-84f3-c70de68b3e21
                                name: Not Found - Order not found
                                status: Not Found
                                responseCode:
                                  code: 404
                                  name: Not Found
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: text/plain
                                cookies: []
                                mime: ''
                                text: "{\n\t\"error\": {\n\t\t\"message\": \"The order you are looking for does not exist\"\n\t}\n}"
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"74da501b-22e4-48c5-976f-9efa89fa860e","method":"GET","headers":"","pathVariables":{"orderId":"1"},"url":"{{baseUrl}}/orders/:orderId","pathVariableData":[{"key":"orderId","value":"1"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071892
                                request: e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20
                                id: 623a1b4a-70cd-4566-82f4-e6ac669daadc
                                name: Bad Request - Invalid order ID supplied
                                status: Bad Request
                                responseCode:
                                  code: 400
                                  name: Bad Request
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: text/plain
                                cookies: []
                                mime: ''
                                text: "{\n\t\"error\": {\n\t\t\"message\": \"Invalid id is provided.\"\n\t}\n}"
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"7070cee0-a1bb-4b47-b0af-f2de06002eca","method":"GET","headers":"","pathVariables":{"orderId":"674"},"url":"{{baseUrl}}/orders/:orderId","pathVariableData":[{"key":"orderId","value":"674"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071891
                                request: e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20
                                id: 6bef9b9d-ccdb-4daf-b79a-6d8f57e1a4b1
                                name: OK - Successfully obtained order details
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                   "orderId": 674,
                                   "items": {
                                    "itemId": 1657,
                                    "name": "Smart WiFi Router",
                                    "price": 2096,
                                    "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                   },
                                   "arrivalDate": "2020-3-04T13:07:45.962Z",
                                   "orderDate": "2020-03-06T19:27:26.733Z",
                                   "orderTotal": 2096,
                                   "address": "95 Tarkiln Hill St.Laurel, MD 20707"
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"b62ccaa0-0c61-42dd-b200-8872af3b5b4a","method":"GET","headers":"","pathVariables":{"orderId":"674"},"url":"{{baseUrl}}/orders/:orderId","pathVariableData":[{"key":"orderId","value":"674"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071890
                                request: e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20
                                id: 74cd9137-7b55-4fa0-b8f4-c554ba62ef36
                                name: Ok - Postman Merch
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                    description: ''
                                    type: text
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                      "orderId": 656,
                                      "items": [
                                          {
                                              "itemId": 16247,
                                              "name": "Postman Merch",
                                              "price": 15,
                                              "description": "Official Merch for the Postman community."
                                          }
                                      ],
                                      "arrivalDate": "2020-3-04T13:07:45.962Z",
                                      "orderDate": "2020-03-06T19:27:26.733Z",
                                      "orderTotal": 15,
                                      "address": "SimpleKart HQ, 221B Baker street"
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"419f370d-bef1-4dec-8aaf-66353e49b2d3","method":"GET","headers":"","pathVariables":{"orderId":"656"},"url":"{{baseUrl}}/orders/:orderId","pathVariableData":[{"key":"orderId","value":"656"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071873
                                request: e92d2df6-d482-40a5-b8b5-ba8ca0ee2b20
                                id: e84aa9c9-db4c-42d4-af3b-672e6418d14a
                                name: 403 Forbidden
                                status: Forbidden
                                responseCode:
                                  code: 403
                                  name: Forbidden
                                  detail: ''
                                time: null
                                headers: []
                                cookies: []
                                mime: ''
                                text: "{\n\t\"error\":\"Forbidden\"\n}"
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"40e56917-e3fa-4064-9b68-cd906bf0551c","method":"GET","headers":"","url":"{{baseUrl}}/orders/70938243034498","pathVariableData":[],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                      7732157-37350b62-41f3-428a-8bd5-fec517bb4f43:
                        owner: '7732157'
                        lastUpdatedBy: '7732157'
                        lastRevision: 14716072072
                        team: null
                        id: 37350b62-41f3-428a-8bd5-fec517bb4f43
                        name: SimpleKart Security Tests
                        description: >-
                          API for an imaginary E-Commerce store to demonstrate
                          API Builder capabilities in Postman


                          Contact Support:
                           Name: Postman Team
                           Email: simplekart@postman.com
                        variables:
                          - id: baseUrl
                            key: baseUrl
                            value: 'https://api.simplekart.com'
                            type: string
                            enabled: true
                        auth: null
                        events: null
                        remote_id: '0'
                        remoteLink: null
                        folders_order:
                          - 0650fd8c-7bf4-42f7-9a73-32c7def1a66e
                          - 31c8a397-c527-4abf-9bc2-d02955cd6e79
                        order: []
                        createdAt: '2020-05-13T18:49:29.000Z'
                        updatedAt: '2020-05-13T18:49:30.000Z'
                        folders:
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716072019
                            collection: 7732157#37350b62-41f3-428a-8bd5-fec517bb4f43
                            folder: null
                            id: 0650fd8c-7bf4-42f7-9a73-32c7def1a66e
                            name: items
                            description: null
                            variables: null
                            auth: null
                            events: null
                            order:
                              - 9bdb5a86-aad1-4125-ac2b-ed548ed55420
                              - bbfeacec-1e78-4c38-b454-a4e7b5e6e45f
                            folders_order: []
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716072020
                            collection: 7732157#37350b62-41f3-428a-8bd5-fec517bb4f43
                            folder: null
                            id: 31c8a397-c527-4abf-9bc2-d02955cd6e79
                            name: orders
                            description: null
                            variables: null
                            auth: null
                            events: null
                            order:
                              - 98be4992-416b-414c-904a-7622b801be3a
                              - df9b22bf-c5f5-42c3-b7f3-37fac04d6f40
                              - 52cff28d-8d30-475e-a54c-8cd91ce36ae5
                            folders_order: []
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                        requests:
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071689
                            folder: 31c8a397-c527-4abf-9bc2-d02955cd6e79
                            collection: 7732157#37350b62-41f3-428a-8bd5-fec517bb4f43
                            id: 52cff28d-8d30-475e-a54c-8cd91ce36ae5
                            name: Get order details from database
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: bd36543b-ff7d-4387-90f3-2bb2331e31cf
                                  exec:
                                    - var jsonData = pm.response.json();
                                    - ''
                                    - '/* '
                                    - ''
                                    - '    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.'
                                    - ''
                                    - '*/'
                                    - >-
                                      pm.test("Strict-Transport-Security header
                                      is present", function () {
                                    - '    pm.response.to.have.header("strict-transport-security");'
                                    - '});'
                                    - ''
                                    - ''
                                    - /*
                                    - ''
                                    - '    [+] Check for Broken Access Control: Insecure Direct Object Reference or IDOR occurs when user input is taken and is used to retrieve an internal object such as a file without performing sufficient authorization. Here, the attacker can then make changes in the references to get access to unauthorized data.'
                                    - '    '
                                    - '*/'
                                    - ''
                                    - >-
                                      pm.test("IDOR: Status code should be 403",
                                      function () {
                                    - '    pm.response.to.have.status(403);'
                                    - '});'
                                    - ''
                                    - '/* '
                                    - ''
                                    - '    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.'
                                    - ''
                                    - '*/'
                                    - >-
                                      if(pm.response.headers.get("Access-Control-Allow-Origin"))
                                    - '{ '
                                    - '    let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");'
                                    - '    if(headerValue === "*" || headerValue === pm.environment.get("origin"))'
                                    - '    pm.test("Misconfigured Cross-Origin Resource Sharing");'
                                    - '}'
                                  type: text/javascript
                              - listen: prerequest
                                script:
                                  id: 6c363bfe-7061-4bfb-85c3-5c21535ab33d
                                  exec:
                                    - >-
                                      let victimOrderID =
                                      pm.environment.get("victimOrderID");
                                    - >-
                                      pm.environment.set("orderID",
                                      victimOrderID);
                                    - >-
                                      pm.environment.set("origin",
                                      "https://www.evil.com");
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: Obtain item details from the database
                            variables: null
                            headers: |
                              Origin: {{origin}}
                            method: GET
                            pathVariables: {}
                            url: 'https://simplekart.postman.com/orders/{{orderID}}'
                            preRequestScript: >-
                              let victimOrderID =
                              pm.environment.get("victimOrderID");

                              pm.environment.set("orderID", victimOrderID);

                              pm.environment.set("origin",
                              "https://www.evil.com");
                            tests: >-
                              var jsonData = pm.response.json();


                              /*

                                  [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.

                              */

                              pm.test("Strict-Transport-Security header is
                              present", function () {
                                  pm.response.to.have.header("strict-transport-security");
                              });



                              /*

                                  [+] Check for Broken Access Control: Insecure Direct Object Reference or IDOR occurs when user input is taken and is used to retrieve an internal object such as a file without performing sufficient authorization. Here, the attacker can then make changes in the references to get access to unauthorized data.

                              */


                              pm.test("IDOR: Status code should be 403",
                              function () {
                                  pm.response.to.have.status(403);
                              });


                              /*

                                  [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.

                              */

                              if(pm.response.headers.get("Access-Control-Allow-Origin"))

                              {
                                  let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");
                                  if(headerValue === "*" || headerValue === pm.environment.get("origin"))
                                  pm.test("Misconfigured Cross-Origin Resource Sharing");
                              }
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData:
                              - key: Origin
                                value: '{{origin}}'
                                type: text
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071796
                                request: 52cff28d-8d30-475e-a54c-8cd91ce36ae5
                                id: 4e7f0f52-8e29-4b7c-b1e5-eef62b155b78
                                name: Bad Request - Invalid order ID supplied
                                status: Bad Request
                                responseCode:
                                  code: 400
                                  name: Bad Request
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: text/plain
                                cookies: []
                                mime: ''
                                text: ''
                                language: text
                                rawDataType: null
                                requestObject: >-
                                  {"id":"786f711c-0479-4e58-8d77-0fe3a303de69","method":"GET","headers":"","pathVariables":{"orderId":"674"},"url":"{{baseUrl}}/orders/:orderId","pathVariableData":[{"key":"orderId","value":"674"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071797
                                request: 52cff28d-8d30-475e-a54c-8cd91ce36ae5
                                id: 6843a173-0ab0-492b-b285-c589ef02a36e
                                name: OK - Successfully obtained order details
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                   "orderId": 674,
                                   "items": {
                                    "itemId": 1657,
                                    "name": "Smart WiFi Router",
                                    "price": 2096,
                                    "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                   },
                                   "arrivalDate": "2020-3-04T13:07:45.962Z",
                                   "orderDate": "2020-03-06T19:27:26.733Z",
                                   "orderTotal": 2096,
                                   "address": "95 Tarkiln Hill St.Laurel, MD 20707"
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"960e5030-83ce-4181-a46e-434131840732","method":"GET","headers":"","pathVariables":{"orderId":"674"},"url":"{{baseUrl}}/orders/:orderId","pathVariableData":[{"key":"orderId","value":"674"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071799
                                request: 52cff28d-8d30-475e-a54c-8cd91ce36ae5
                                id: 76844289-b370-4eba-98b1-7032b83d8e47
                                name: 403 Forbidden
                                status: Forbidden
                                responseCode:
                                  code: 403
                                  name: Forbidden
                                  detail: ''
                                time: null
                                headers:
                                  - key: Cache-Control
                                    value: >-
                                      no-cache, no-store, max-age=0,
                                      must-revalidate
                                  - key: Content-Type
                                    value: application/json;charset=UTF-8
                                  - key: Date
                                    value: 'Mon, 06 Apr 2020 05:37:48 GMT'
                                  - key: Expires
                                    value: '0'
                                  - key: Pragma
                                    value: no-cache
                                  - key: Server
                                    value: nginx
                                  - key: Strict-Transport-Security
                                    value: max-age=31536000 ; includeSubDomains
                                  - key: WWW-Authenticate
                                    value: Basic realm="Realm"
                                  - key: X-Content-Type-Options
                                    value: nosniff
                                  - key: X-Frame-Options
                                    value: DENY
                                  - key: X-XSS-Protection
                                    value: 1; mode=block
                                  - key: Content-Length
                                    value: '120'
                                  - key: Connection
                                    value: keep-alive
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                      "status": 403,
                                      "error": "Forbidden"
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"8b56ea13-1778-4a06-bc75-27317dc84d57","method":"GET","headers":"Origin:
                                  {{origin}}","url":"https://simplekart.postman-beta.com/orders/70938243034498","pathVariableData":[],"queryParams":[],"headerData":[{"key":"Origin","value":"{{origin}}","type":"text"}],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071802
                                request: 52cff28d-8d30-475e-a54c-8cd91ce36ae5
                                id: 818b5dde-2c7b-4d47-bbf6-9ff6e0e484e0
                                name: Not Found - Order not found
                                status: Not Found
                                responseCode:
                                  code: 404
                                  name: Not Found
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: text/plain
                                cookies: []
                                mime: ''
                                text: ''
                                language: text
                                rawDataType: null
                                requestObject: >-
                                  {"id":"aabf7c7b-aaf3-4e7b-b309-42ed33d507fc","method":"GET","headers":"","pathVariables":{},"url":"{{baseUrl}}/orders/:orderId","pathVariableData":[{"key":"orderId"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071686
                            folder: 31c8a397-c527-4abf-9bc2-d02955cd6e79
                            collection: 7732157#37350b62-41f3-428a-8bd5-fec517bb4f43
                            id: 98be4992-416b-414c-904a-7622b801be3a
                            name: 'Get orders from the database '
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: 40912505-d39f-48f5-8c21-bb910be85229
                                  exec:
                                    - var jsonData = pm.response.json();
                                    - let responseSize = jsonData.length;
                                    - ''
                                    - '/* '
                                    - '    '
                                    - '    [+] Check for Parameter Tampering: An attacker can manipulate parameters sent in API requests to exploit the backend processing. Conceptually, when the attacker changes the input value from x to y and the server processes it, then the service will be vulnerable to parameter tampering. '
                                    - '    '
                                    - '*/'
                                    - >-
                                      if(responseSize ===
                                      parseInt(pm.environment.get("orderListValue")))
                                    - '    pm.test("Unexpected number of items fetched");'
                                    - else
                                    - '    pm.test("Expected number of items fetched");'
                                    - ''
                                    - '/* '
                                    - ''
                                    - '    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.'
                                    - ''
                                    - '*/'
                                    - >-
                                      pm.test("Strict-Transport-Security header
                                      is present", function () {
                                    - '    pm.response.to.have.header("strict-transport-security");'
                                    - '});'
                                    - ''
                                    - '/* '
                                    - ''
                                    - '    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.'
                                    - ''
                                    - '*/'
                                    - >-
                                      if(pm.response.headers.get("Access-Control-Allow-Origin"))
                                    - '{ '
                                    - '    let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");'
                                    - '    if(headerValue === "*" || headerValue === pm.environment.get("origin"))'
                                    - '    pm.test("Misconfigured Cross-Origin Resource Sharing");'
                                    - '}'
                                  type: text/javascript
                              - listen: prerequest
                                script:
                                  id: 10d904c5-7939-4976-ad39-69b60b84e0f8
                                  exec:
                                    - >-
                                      pm.environment.set("origin",
                                      "https://www.evil.com");
                                    - >-
                                      let evilValue =
                                      pm.environment.get("evilValue");
                                    - >-
                                      pm.environment.set("orderListValue",
                                      evilValue);
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: Obtain order details from orders database
                            variables: null
                            headers: |
                              Origin: {{origin}}
                            method: GET
                            pathVariables: {}
                            url: >-
                              https://simplekart.postman.com/orders?list={{orderListValue}}
                            preRequestScript: >-
                              pm.environment.set("origin",
                              "https://www.evil.com");

                              let evilValue = pm.environment.get("evilValue");

                              pm.environment.set("orderListValue", evilValue);
                            tests: >-
                              var jsonData = pm.response.json();

                              let responseSize = jsonData.length;


                              /*

                                  [+] Check for Parameter Tampering: An attacker can manipulate parameters sent in API requests to exploit the backend processing. Conceptually, when the attacker changes the input value from x to y and the server processes it, then the service will be vulnerable to parameter tampering.

                              */

                              if(responseSize ===
                              parseInt(pm.environment.get("orderListValue")))
                                  pm.test("Unexpected number of items fetched");
                              else
                                  pm.test("Expected number of items fetched");

                              /*

                                  [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.

                              */

                              pm.test("Strict-Transport-Security header is
                              present", function () {
                                  pm.response.to.have.header("strict-transport-security");
                              });


                              /*

                                  [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.

                              */

                              if(pm.response.headers.get("Access-Control-Allow-Origin"))

                              {
                                  let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");
                                  if(headerValue === "*" || headerValue === pm.environment.get("origin"))
                                  pm.test("Misconfigured Cross-Origin Resource Sharing");
                              }
                            currentHelper: null
                            helperAttributes: null
                            queryParams:
                              - key: list
                                value: '{{orderListValue}}'
                                description: Number of orders to show
                            headerData:
                              - key: Origin
                                value: '{{origin}}'
                                type: text
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071789
                                request: 98be4992-416b-414c-904a-7622b801be3a
                                id: 92c1b548-80a0-4f9e-b7a7-a46dda61c603
                                name: OK - Successful pull of orders
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  [
                                   {
                                    "orderId": 674,
                                    "items": {
                                     "itemId": 1657,
                                     "name": "Smart WiFi Router",
                                     "price": 2096,
                                     "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                    },
                                    "arrivalDate": "2020-03-03T13:07:45.962Z",
                                    "orderDate": "2020-03-01T19:27:26.733Z",
                                    "orderTotal": 2096,
                                    "address": "95 Tarkiln Hill St.Laurel, MD 20707"
                                   },
                                   {
                                    "orderId": 675,
                                    "items": {
                                     "itemId": 1658,
                                     "name": "VR Gaming Headset",
                                     "price": 79990,
                                     "description": "VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR."
                                    },
                                    "arrivalDate": "2020-03-03T15:00:56.787Z",
                                    "orderDate": "2020-03-02T21:25:22.096Z",
                                    "orderTotal": 79990,
                                    "address": "7405 Arcadia St.Rockville, MD 20850"
                                   },
                                   {
                                    "orderId": 676,
                                    "items": {
                                     "itemId": 1665,
                                     "name": "Smart Watch",
                                     "price": 1805,
                                     "description": "Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data."
                                    },
                                    "arrivalDate": "2020-03-05T17:30:15.156Z",
                                    "orderDate": "2020-03-03T01:10:27.512Z",
                                    "orderTotal": 1805,
                                    "address": "9791 Lawrence Dr.Marlton, NJ 08053r"
                                   },
                                   {
                                    "orderId": 677,
                                    "items": {
                                     "itemId": 1659,
                                     "name": "Classic Loop Top Shaker Bottle, 20-Ounce",
                                     "price": 578,
                                     "description": "Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation."
                                    },
                                    "arrivalDate": "2020-03-03T18:16:24.911Z",
                                    "orderDate": "2020-03-01T06:09:23.007Z",
                                    "orderTotal": 578,
                                    "address": "822 Clay St.Tampa, FL 33604"
                                   },
                                   {
                                    "orderId": 678,
                                    "items": {
                                     "itemId": 1663,
                                     "name": "Hair Dryer",
                                     "price": 1400,
                                     "description": "Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%."
                                    },
                                    "arrivalDate": "2020-03-04T12:09:07.955Z",
                                    "orderDate": "2020-03-02T21:50:44.173Z",
                                    "orderTotal": 1400,
                                    "address": "7444 SW. State Ave.Philadelphia, PA 19111"
                                   },
                                   {
                                    "orderId": 679,
                                    "items": {
                                     "itemId": 1660,
                                     "name": "4-Port USB 2.0 Hub",
                                     "price": 505,
                                     "description": "Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products."
                                    },
                                    "arrivalDate": "2020-03-04T11:29:56.99Z",
                                    "orderDate": "2020-03-03T00:51:26.19Z",
                                    "orderTotal": 505,
                                    "address": "307 Purple Finch Ave.New Lenox, IL 60451"
                                   },
                                   {
                                    "orderId": 680,
                                    "items": {
                                     "itemId": 1661,
                                     "name": "Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)",
                                     "price": 938,
                                     "description": "For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone."
                                    },
                                    "arrivalDate": "2020-03-04T02:06:58.886Z",
                                    "orderDate": "2020-03-02T04:33:52.652Z",
                                    "orderTotal": 938,
                                    "address": "946 Holly StreetHamilton, OH 45011"
                                   },
                                   {
                                    "orderId": 681,
                                    "items": {
                                     "itemId": 1663,
                                     "name": "Hair Dryer",
                                     "price": 1400,
                                     "description": "Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%."
                                    },
                                    "arrivalDate": "2020-03-04T17:26:07.706Z",
                                    "orderDate": "2020-03-02T04:17:23.689Z",
                                    "orderTotal": 1400,
                                    "address": "8924 East Birchwood St.Hamburg, NY 14075"
                                   },
                                   {
                                    "orderId": 682,
                                    "items": {
                                     "itemId": 1665,
                                     "name": "Smart Watch",
                                     "price": 1805,
                                     "description": "Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data."
                                    },
                                    "arrivalDate": "2020-03-05T14:07:01.688Z",
                                    "orderDate": "2020-03-03T04:58:18.504Z",
                                    "orderTotal": 1805,
                                    "address": "10 Wilson LaneBay City, MI 48706"
                                   },
                                   {
                                    "orderId": 683,
                                    "items": {
                                     "itemId": 1666,
                                     "name": "Learning Thermostat, 3rd Gen, Smart Thermostat",
                                     "price": 15746,
                                     "description": "Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills."
                                    },
                                    "arrivalDate": "2020-03-05T10:43:23.713Z",
                                    "orderDate": "2020-03-03T08:34:21.21Z",
                                    "orderTotal": 15746,
                                    "address": "m81 West Shirley Dr.Greenfield, IN 46140"
                                   }
                                  ]
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"741952b4-32a6-4508-a12f-d96cf65e9d18","method":"GET","headers":"","url":"{{baseUrl}}/orders?list=10","pathVariableData":[],"queryParams":[{"key":"list","value":"10"}],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071688
                            folder: 0650fd8c-7bf4-42f7-9a73-32c7def1a66e
                            collection: 7732157#37350b62-41f3-428a-8bd5-fec517bb4f43
                            id: 9bdb5a86-aad1-4125-ac2b-ed548ed55420
                            name: Get items from the database
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: 3eaa5514-92a8-4c42-9bfa-10b758f8fe3b
                                  exec:
                                    - 'var jsonData = pm.response.json();      '
                                    - let responseSize = jsonData.length;
                                    - console.log(responseSize);
                                    - >-
                                      console.log(parseInt(pm.environment.get("itemListValue")))
                                    - '/* '
                                    - '    '
                                    - '    [+] Check for Parameter Tampering: An attacker can manipulate parameters sent in API requests to exploit the backend processing. Conceptually, when the attacker changes the input value from x to y and the server processes it, then the service will be vulnerable to parameter tampering. '
                                    - '    '
                                    - '*/'
                                    - >-
                                      if(responseSize ===
                                      parseInt(pm.environment.get("itemListValue")))
                                    - '    pm.test("Unexpected number of items fetched");'
                                    - else
                                    - '    pm.test("Expected number of items fetched");'
                                    - ''
                                    - ''
                                    - '/* '
                                    - ''
                                    - '    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.'
                                    - ''
                                    - '*/'
                                    - >-
                                      pm.test("Strict-Transport-Security is
                                      present", function () {
                                    - '    pm.response.to.have.header("strict-transport-security");'
                                    - '});'
                                    - ''
                                    - ''
                                    - '/* '
                                    - ''
                                    - '    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.'
                                    - ''
                                    - '*/'
                                    - >-
                                      if(pm.response.headers.get("Access-Control-Allow-Origin"))
                                    - '{ '
                                    - '    let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");'
                                    - '    if(headerValue === "*" || headerValue === pm.environment.get("origin"))'
                                    - '    pm.test("Misconfigured Cross-Origin Resource Sharing");'
                                    - '}'
                                    - ''
                                  type: text/javascript
                              - listen: prerequest
                                script:
                                  id: 7554406a-bc59-4336-ae22-daa8840273af
                                  exec:
                                    - >-
                                      let evilValue =
                                      pm.environment.get("evilValue");
                                    - >-
                                      pm.environment.set("itemListValue",
                                      evilValue);
                                    - >-
                                      pm.environment.set("origin",
                                      "https://www.evil.com");
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: Pull a list of items from item database
                            variables: null
                            headers: |
                              Origin: {{origin}}
                            method: GET
                            pathVariables: {}
                            url: >-
                              https://simplekart.postman.com/items?list={{itemListValue}}
                            preRequestScript: >-
                              let evilValue = pm.environment.get("evilValue");

                              pm.environment.set("itemListValue", evilValue);

                              pm.environment.set("origin",
                              "https://www.evil.com");
                            tests: >
                              var jsonData = pm.response.json();

                              let responseSize = jsonData.length;

                              console.log(responseSize);

                              console.log(parseInt(pm.environment.get("itemListValue")))

                              /*

                                  [+] Check for Parameter Tampering: An attacker can manipulate parameters sent in API requests to exploit the backend processing. Conceptually, when the attacker changes the input value from x to y and the server processes it, then the service will be vulnerable to parameter tampering.

                              */

                              if(responseSize ===
                              parseInt(pm.environment.get("itemListValue")))
                                  pm.test("Unexpected number of items fetched");
                              else
                                  pm.test("Expected number of items fetched");


                              /*

                                  [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.

                              */

                              pm.test("Strict-Transport-Security is present",
                              function () {
                                  pm.response.to.have.header("strict-transport-security");
                              });



                              /*

                                  [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.

                              */

                              if(pm.response.headers.get("Access-Control-Allow-Origin"))

                              {
                                  let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");
                                  if(headerValue === "*" || headerValue === pm.environment.get("origin"))
                                  pm.test("Misconfigured Cross-Origin Resource Sharing");
                              }
                            currentHelper: null
                            helperAttributes: null
                            queryParams:
                              - key: list
                                value: '{{itemListValue}}'
                            headerData:
                              - key: Origin
                                value: '{{origin}}'
                                type: text
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071790
                                request: 9bdb5a86-aad1-4125-ac2b-ed548ed55420
                                id: 5f149a94-aa98-4046-8439-8312ac18ffc6
                                name: OK - Successful pull of items
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  [
                                   {
                                    "itemId": 1657,
                                    "name": "Smart WiFi Router",
                                    "price": 2096,
                                    "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                   },
                                   {
                                    "itemId": 1658,
                                    "name": "VR Gaming Headset",
                                    "price": 79990,
                                    "description": "VR Gaming Headset puts you at the center of virtual reality's most pulse-pounding, PC-powered gameplay. See the action unfold all around you through our sharpest lenses and next-generation optics. Lose yourself in the experience with a comfortable, improved design that lets you start playing faster and keep playing longer. Insight tracking gives you the power to move throughout your playspace in any direction. No external sensors. No complicated setup. Just hands-on action and interaction with our updated Oculus Touch controllers right out of the box. Step into the game and the future of PC VR."
                                   },
                                   {
                                    "itemId": 1659,
                                    "name": "Classic Loop Top Shaker Bottle, 20-Ounce",
                                    "price": 578,
                                    "description": "Easy to maintain proper nutrition and hydration on-the-go.The wide mouth makes it easy to add scoops of powdered mixes, meal ingredients, and liquids, and embossed markings show both ounces and milliliters for easy measuring anywhere (note that markings on the 20-ounce capacity shaker cup only go up to 12 ounces). Bottle contents and liquids are securely contained thanks to a tightly threaded screw-on lid that creates a leakproof seal, and a flip cap that snaps securely shut for shaking and transportation."
                                   },
                                   {
                                    "itemId": 1660,
                                    "name": "4-Port USB 2.0 Hub",
                                    "price": 505,
                                    "description": "Easily add up to 4 devices with the USB 2.0 Hub. Particularly great for recent notebooks that provide a limited number of USB ports. Achieve full 480 Mbps on each port, or daisy-chain multiple hubs to a maximum of 127 devices.Fully backwards compatible with the USB 1.1 products."
                                   },
                                   {
                                    "itemId": 1661,
                                    "name": "Wipes Flushable Wet Wipes Dispenser, Mint Chill, 48 Count (Pack of 3)",
                                    "price": 938,
                                    "description": "For a superior clean that’s fresh, gentle, and effective, choose Wipes with the CleaningRipples Texture. Wipes are 100 percent flushable, remove odor causing bacteria and offer a large, dual layer wipe to clean better than when using dry toilet paper alone."
                                   },
                                   {
                                    "itemId": 1662,
                                    "name": "Cordless Vacuum Cleaner",
                                    "price": 41893,
                                    "description": "Twice the suction of any cord-free vacuum. Cord-free cleaning, made easier. Intelligently optimizes suction and run time, to deep clean everywhere. With fade-free battery power and a battery-saving trigger. And real-time reporting on the LCD screen to give you control of your clean. The Dynamic Load Sensor (DLS) system automatically changes the motor speed between carpets and hard floors. For deep cleaning across floor types."
                                   },
                                   {
                                    "itemId": 1663,
                                    "name": "Hair Dryer",
                                    "price": 1400,
                                    "description": "Hair dryer is engineered to protect hair from extreme heat damage, with the fastest drying+ and controlled styling to help increase smoothness by 75%, increase shine by up to 132% and decrease frizz and flyaways by up to 61%."
                                   },
                                   {
                                    "itemId": 1664,
                                    "name": "Business Z27n G2 27 inch LED LCD Monitor",
                                    "price": 24485,
                                    "description": "Be a productive powerhouse with the sleek QHD HP Z27n G2 27-inch Display. This virtually seamless display is factory-tested for reliability and longevity with integrated color calibration, uninterrupted multi-screen tiling, and expansive device connections, including USB-C™. Multi-screen productivity with no disruptions Streamline multi-tasking on multiple displays with a 3-sided micro-edge bezel, and daisy chain up to 2 displays per workstation with DisplayPort™."
                                   },
                                   {
                                    "itemId": 1665,
                                    "name": "Smart Watch",
                                    "price": 1805,
                                    "description": "Built-in Multi-Sports Mode, record your Running, Cycling, Football, Swimming, Table Tennis, Badminton, Climbing, recording your daily sports data."
                                   },
                                   {
                                    "itemId": 1666,
                                    "name": "Learning Thermostat, 3rd Gen, Smart Thermostat",
                                    "price": 15746,
                                    "description": "Learning Thermostat is a smart thermostat that learns what temperatures you like, turns itself down when you’re away and connects to your phone. It has a big, sharp display. And it’s proven to help save energy. In independent studies, the Thermostat saved an average of 10% to 12% on heating bills and 15% on cooling bills."
                                   }
                                  ]
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"e8719023-0cab-4e45-b658-df1b776650b9","method":"GET","headers":"","url":"{{baseUrl}}/items?list=10","pathVariableData":[],"queryParams":[{"key":"list","value":"10"}],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071696
                            folder: 0650fd8c-7bf4-42f7-9a73-32c7def1a66e
                            collection: 7732157#37350b62-41f3-428a-8bd5-fec517bb4f43
                            id: bbfeacec-1e78-4c38-b454-a4e7b5e6e45f
                            name: 'Get item details from the database '
                            dataMode: null
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: bac7bfa9-fe35-4984-a095-91c2684da75e
                                  exec:
                                    - '/* '
                                    - ''
                                    - '    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.'
                                    - ''
                                    - '*/'
                                    - >-
                                      pm.test("Strict-Transport-Security header
                                      is present", function () {
                                    - '    pm.response.to.have.header("strict-transport-security");'
                                    - '});'
                                    - ''
                                    - '/* '
                                    - ''
                                    - '    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.'
                                    - ''
                                    - '*/'
                                    - >-
                                      if(pm.response.headers.get("Access-Control-Allow-Origin"))
                                    - '{ '
                                    - '    let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");'
                                    - '    if(headerValue === "*" || headerValue === pm.environment.get("origin"))'
                                    - '    pm.test("Misconfigured Cross-Origin Resource Sharing");'
                                    - '}'
                                  type: text/javascript
                              - listen: prerequest
                                script:
                                  id: 5260e2e0-3711-4778-960c-4b0a28da495f
                                  exec:
                                    - >-
                                      pm.environment.set("origin",
                                      "https://www.evil.com");
                                  type: text/javascript
                            rawModeData: null
                            descriptionFormat: null
                            description: Obtain item details from item database
                            variables: null
                            headers: |
                              Origin: {{origin}}
                            method: GET
                            pathVariables: {}
                            url: 'https://simplekart.postman.com/items/1657'
                            preRequestScript: >-
                              pm.environment.set("origin",
                              "https://www.evil.com");
                            tests: >-
                              /*

                                  [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.

                              */

                              pm.test("Strict-Transport-Security header is
                              present", function () {
                                  pm.response.to.have.header("strict-transport-security");
                              });


                              /*

                                  [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.

                              */

                              if(pm.response.headers.get("Access-Control-Allow-Origin"))

                              {
                                  let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");
                                  if(headerValue === "*" || headerValue === pm.environment.get("origin"))
                                  pm.test("Misconfigured Cross-Origin Resource Sharing");
                              }
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData:
                              - key: Origin
                                value: '{{origin}}'
                                type: text
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:29.000Z'
                            updatedAt: '2020-05-13T18:49:29.000Z'
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071809
                                request: bbfeacec-1e78-4c38-b454-a4e7b5e6e45f
                                id: 7d3623ea-dfa8-4f24-a367-8bffbf0a2b5f
                                name: Not Found - Item not found
                                status: Not Found
                                responseCode:
                                  code: 404
                                  name: Not Found
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: text/plain
                                cookies: []
                                mime: ''
                                text: ''
                                language: text
                                rawDataType: null
                                requestObject: >-
                                  {"id":"7b5796f8-f835-4c0a-be40-7e04c29dd25f","method":"GET","headers":"","pathVariables":{},"url":"{{baseUrl}}/items/:itemId","pathVariableData":[{"key":"itemId"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071810
                                request: bbfeacec-1e78-4c38-b454-a4e7b5e6e45f
                                id: c00243f7-00bb-4daf-9a06-c99ad60d9d9f
                                name: OK - Successfully obtained order details
                                status: OK
                                responseCode:
                                  code: 200
                                  name: OK
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                      "itemId": 1657,
                                      "name": "Smart WiFi Router",
                                      "price": 2096,
                                      "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"c3c45e4e-2941-462b-b51a-cb8665fddd09","method":"GET","headers":"","pathVariables":{"itemId":""},"url":"{{baseUrl}}/items/:itemId","pathVariableData":[{"key":"itemId","value":""}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071812
                                request: bbfeacec-1e78-4c38-b454-a4e7b5e6e45f
                                id: cfa81887-fcc7-4b23-97e6-172e018c8da7
                                name: Bad Request - Invalid item ID supplied
                                status: Bad Request
                                responseCode:
                                  code: 400
                                  name: Bad Request
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: text/plain
                                cookies: []
                                mime: ''
                                text: ''
                                language: text
                                rawDataType: null
                                requestObject: >-
                                  {"id":"7005aff3-09aa-40af-a19e-6065e0e76ad9","method":"GET","headers":"","pathVariables":{},"url":"{{baseUrl}}/items/:itemId","pathVariableData":[{"key":"itemId"}],"queryParams":[],"headerData":[],"dataMode":null,"data":null,"protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                          - owner: '7732157'
                            lastUpdatedBy: '7732157'
                            lastRevision: 14716071793
                            folder: 31c8a397-c527-4abf-9bc2-d02955cd6e79
                            collection: 7732157#37350b62-41f3-428a-8bd5-fec517bb4f43
                            id: df9b22bf-c5f5-42c3-b7f3-37fac04d6f40
                            name: Post order details to the database
                            dataMode: raw
                            data: null
                            auth:
                              type: noauth
                            events:
                              - listen: test
                                script:
                                  id: b799fedf-bba3-4f02-b76e-a9e0b01d3827
                                  exec:
                                    - var jsonData = pm.response.json();
                                    - let responseSize = jsonData.length;
                                    - ''
                                    - ''
                                    - '/* '
                                    - ''
                                    - '    [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.'
                                    - ''
                                    - '*/'
                                    - >-
                                      pm.test("Strict-Transport-Security header
                                      is present", function () {
                                    - '    pm.response.to.have.header("strict-transport-security");'
                                    - '});'
                                    - ''
                                    - ''
                                    - '/* '
                                    - ''
                                    - '    [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.'
                                    - ''
                                    - '*/'
                                    - >-
                                      if(pm.response.headers.get("Access-Control-Allow-Origin"))
                                    - '{ '
                                    - '    let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");'
                                    - '    if(headerValue === "*" || headerValue === pm.environment.get("origin"))'
                                    - '    pm.test("Misconfigured Cross-Origin Resource Sharing");'
                                    - '}'
                                  type: text/javascript
                              - listen: prerequest
                                script:
                                  id: 0f35b1b4-c7f4-4117-bfb7-919a5e6cb50e
                                  exec:
                                    - >-
                                      pm.environment.set("origin",
                                      "https://www.evil.com");
                                    - ''
                                  type: text/javascript
                            rawModeData: |-
                              {
                                  "address": "<string>",
                                  "item": {
                                      "itemId": 1,
                                      "name": "<string>",
                                      "price": 2000,
                                      "description": "<string>"
                                  }
                              }
                            descriptionFormat: null
                            description: Post item order to orders database
                            variables: null
                            headers: |
                              Origin: {{origin}}
                              Content-Type: application/json
                            method: POST
                            pathVariables: {}
                            url: 'https://simplekart.postman.com/orders'
                            preRequestScript: >
                              pm.environment.set("origin",
                              "https://www.evil.com");
                            tests: >-
                              var jsonData = pm.response.json();

                              let responseSize = jsonData.length;



                              /*

                                  [+] Check for HSTS: An attacker can carry out effective pharming, phishing, and man-in-the-middle attacks if the HTTPS server incorrectly implements Strict Transport Security. HSTS prevents visitors from making unencrypted HTTP connections to a server.

                              */

                              pm.test("Strict-Transport-Security header is
                              present", function () {
                                  pm.response.to.have.header("strict-transport-security");
                              });



                              /*

                                  [+] Check for Misconfigured CORS: CORS is a header set by the web server. It controls exactly which domains are allowed to send requests to it. A misconfigured CORS can allow a domain controlled by a malicious user to send requests.

                              */

                              if(pm.response.headers.get("Access-Control-Allow-Origin"))

                              {
                                  let headerValue = pm.response.headers.get("Access-Control-Allow-Origin");
                                  if(headerValue === "*" || headerValue === pm.environment.get("origin"))
                                  pm.test("Misconfigured Cross-Origin Resource Sharing");
                              }
                            currentHelper: null
                            helperAttributes: null
                            queryParams: []
                            headerData:
                              - key: Origin
                                value: '{{origin}}'
                              - key: Content-Type
                                value: application/json
                                type: text
                            pathVariableData: []
                            protocolProfileBehavior:
                              disableBodyPruning: true
                            dataDisabled: null
                            createdAt: '2020-05-13T18:49:30.000Z'
                            updatedAt: '2020-05-13T18:49:30.000Z'
                            dataOptions:
                              raw: {}
                            responses:
                              - owner: '7732157'
                                lastUpdatedBy: '7732157'
                                lastRevision: 14716071958
                                request: df9b22bf-c5f5-42c3-b7f3-37fac04d6f40
                                id: d76d318f-0456-4ec3-ad47-f8e760c5a38b
                                name: OK - Order created
                                status: Created
                                responseCode:
                                  code: 201
                                  name: Created
                                  detail: ''
                                time: null
                                headers:
                                  - key: Content-Type
                                    value: application/json
                                cookies: []
                                mime: ''
                                text: |-
                                  {
                                   "orderId": 674,
                                   "items": {
                                    "itemId": 1657,
                                    "name": "Smart WiFi Router",
                                    "price": 2096,
                                    "description": "Wifi router/wireless router. One of routers for wireless internet, wireless routers for home. Dual band router and gigabit router. Ideal as internet router also gaming router. Long range coverage with high speed. Compatible with all 802.11ac devices and below. 5ghz router/5g router Frequency Range: 2.4GHz and 5GHz; Interface Available: 4 x 10/100/1000Mbps LAN Ports, 1 10/100/1000Mbps WAN Port, 1 USB 2.0 Ports; Protocols Supported: Supports IPv4 and IPv6; System Requirement: Microsoft Windows 98SE NT 2000 XP Vista, or Windows 7 Windows 8/8.1/10, MAC OS NetWare UNIX or Linux; Wireless Standards: IEEE 802.11ac/n/a 5GHz, IEEE 802.11b/g/n 2.4GH"
                                   },
                                   "arrivalDate": "2020-3-04T13:07:45.962Z",
                                   "orderDate": "2020-03-06T19:27:26.733Z",
                                   "orderTotal": 2096,
                                   "address": "95 Tarkiln Hill St.Laurel, MD 20707"
                                  }
                                language: json
                                rawDataType: null
                                requestObject: >-
                                  {"id":"58f7f324-43fe-48f8-ad42-b57a612b3894","method":"POST","headers":"","dataMode":"raw","url":"{{baseUrl}}/orders","pathVariableData":[],"queryParams":[],"headerData":[],"data":"{\n
                                  \"items\": {\n        \"itemId\":
                                  1657,\n        \"name\": \"Smart WiFi
                                  Router\",\n        \"price\": 2096,\n
                                  \"description\": \"Wifi router/wireless
                                  router. One of routers for wireless internet,
                                  wireless routers for home. Dual band router
                                  and gigabit router. Ideal as internet router
                                  also gaming router. Long range coverage with
                                  high speed. Compatible with all 802.11ac
                                  devices and below. 5ghz router/5g router
                                  Frequency Range: 2.4GHz and 5GHz; Interface
                                  Available: 4 x 10/100/1000Mbps LAN Ports, 1
                                  10/100/1000Mbps WAN Port, 1 USB 2.0 Ports;
                                  Protocols Supported: Supports IPv4 and IPv6;
                                  System Requirement: Microsoft Windows 98SE NT
                                  2000 XP Vista, or Windows 7 Windows 8/8.1/10,
                                  MAC OS NetWare UNIX or Linux; Wireless
                                  Standards: IEEE 802.11ac/n/a 5GHz, IEEE
                                  802.11b/g/n 2.4GH\"\n    },\n    \"address\":
                                  \"95 Tarkiln Hill St.Laurel, MD
                                  20707\"\n}","protocolProfileBehavior":{"disableBodyPruning":true}}
                                createdAt: '2020-05-13T18:49:30.000Z'
                                updatedAt: '2020-05-13T18:49:30.000Z'
                    environments:
                      7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d:
                        id: f1719ffd-a4f1-4584-9be9-a73bcefe502d
                        name: SimpleKart - Security Tests
                        values:
                          - key: itemListValue
                            value: '21'
                            enabled: true
                          - key: orderListValue
                            value: '21'
                            enabled: true
                          - key: victimOrderID
                            value: 70938243034498
                            enabled: true
                          - key: origin
                            value: 'https://www.evil.com'
                            enabled: true
                          - key: evilValue
                            value: '21'
                            enabled: true
                          - key: orderID
                            value: 70938243034498
                            enabled: true
                      7732157-f27041a1-1e05-4f63-a81d-31107364e640:
                        id: f27041a1-1e05-4f63-a81d-31107364e640
                        name: SimpleKart - Prod
                        values:
                          - key: baseUrl
                            value: 'https://simplekart.postman.com'
                            enabled: true
                          - key: itemListValue
                            value: null
                            enabled: true
                          - key: origin
                            value: 'https://www.evil.com'
                            enabled: true
                          - key: orderListValue
                            value: null
                            enabled: true
                          - key: fuzzValue
                            value: '"><script>alert(document.domain)</script>'
                            enabled: true
                          - key: orderID
                            value: null
                            enabled: true
                      7732157-f2924ed2-5406-4a73-bb80-39a113545cb9:
                        id: f2924ed2-5406-4a73-bb80-39a113545cb9
                        name: SimpleKart - Integration test
                        values:
                          - key: '{{baseUrl}}'
                            value: >-
                              https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io
                            enabled: true
                          - key: orderId
                            value: 656
                            enabled: true
          description: Export an API
          headers:
            Server:
              schema:
                type: string
              example: nginx
            Date:
              schema:
                type: string
                format: style
              example: 'Wed, 13 May 2020 19:51:53 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=5df9946c14a4c978
            x-srv-span:
              schema:
                type: string
              example: v=1;s=7da6f5c0a50a3501
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            X-RateLimit-Limit:
              schema:
                type: integer
              example: 10
            X-RateLimit-Remaining:
              schema:
                type: integer
              example: 9
            X-RateLimit-Reset:
              schema:
                type: integer
              example: 1589399522
            ETag:
              schema:
                type: string
              example: W/"28dda-c5UbREckCc/V28gQmlWXgA"
            Vary:
              schema:
                type: string
              example: Accept-Encoding
            Content-Encoding:
              schema:
                type: string
              example: gzip
  /apis/{apiId}/watch:
    get:
      tags:
        - API
      summary: Watch related details
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiId}}'
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Watch related details
    put:
      tags:
        - API
      summary: Watch an API
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiId}}'
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
            example: null
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Watch an API
  /apis/{apiId}/unwatch:
    put:
      tags:
        - API
      summary: Unwatch API
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
            example: null
      responses:
        default:
          content:
            text/plain:
              schema:
                type: string
          description: Unwatch an API
  /apis/{apiId}/watchers:
    get:
      tags:
        - API
      summary: Watchers list
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - action
                      - model
                    properties:
                      action:
                        type: string
                      model:
                        type: string
                  data:
                    type: object
                    required:
                      - private
                      - public
                      - team
                    properties: {}
              examples:
                Example1:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      action: getWatchers
                      model: api
                    data:
                      private:
                        count: 7
                        watchers:
                          - name: Private Users
                            profilePicUrl: www.staticimage.com/1
                            profileUrl: null
                Example2:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      action: getWatchers
                      model: api
                    data:
                      public:
                        count: 1
                        watchers:
                          - name: Rashi Ben
                            profilePicUrl: www.test.com
                            profileUrl: www.explore.postman.com/rashiben
                      team:
                        count: 1
                        watchers:
                          - name: Amey Telawane
                            profilePicUrl: www.test.com
                            profileUrl: 'https://the.postman.co/users/1234'
                      private:
                        count: 7
                        watchers:
                          - name: Private Users
                            profilePicUrl: www.staticimage.com/1
                            profileUrl: null
                Example3:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      action: getWatchers
                      model: api
                    data:
                      public:
                        count: 1
                        watchers:
                          - name: Rashi Ben
                            profilePicUrl: www.test.com
                            profileUrl: www.explore.postman.com/rashiben
                      team:
                        count: 1
                        watchers:
                          - name: Amey Telawane
                            profilePicUrl: www.test.com
                            profileUrl: 'https://the.postman.co/users/1234'
          description: Watchers list when only private user is watching
  /apis/{apiId}/versions/{apiVersionId}/subscribe:
    post:
      tags:
        - Socket only endpoints
      summary: Subscribe to an API Version for events
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - subscription
                    properties:
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              examples:
                Example1:
                  value:
                    meta:
                      model: apiversion
                      action: subscribe
                    data:
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}'
                Example2:
                  value:
                    meta:
                      model: apiversion
                      action: subscribe
                    data:
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}'
          description: '[Success] Subscribe to an API Version for events'
    delete:
      tags:
        - Socket only endpoints
      summary: Unsubscribe to an API Version for events
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                nullable: true
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - subscription
                    properties:
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              examples:
                Example1:
                  value:
                    meta:
                      model: apiversion
                      action: unsubscribe
                    data:
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}'
                Example2:
                  value: null
          description: '[Success] Unsubscribe to an API Version for events'
  /apis/{apiId}/versions/{apiVersionId}:
    get:
      tags:
        - API Version
      summary: Get an API Version
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - api
                      - createdBy
                      - updatedBy
                      - createdAt
                      - updatedAt
                      - summary
                      - stage
                      - visibility
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      api:
                        type: string
                      createdBy:
                        type: object
                        required:
                          - id
                          - name
                          - username
                          - email
                          - profilePicUrl
                        properties:
                          id:
                            type: string
                            format: color
                          name:
                            type: string
                          username:
                            type: string
                          email:
                            type: string
                            format: email
                          profilePicUrl:
                            type: string
                            format: uri
                      updatedBy:
                        type: string
                        format: utc-millisec
                      createdAt:
                        type: string
                      updatedAt:
                        type: string
                      summary:
                        type: string
                      stage:
                        type: string
                      visibility:
                        type: string
                      relations:
                        type: object
                        required:
                          - schema
                          - monitor
                          - mock
                          - environment
                          - documentation
                          - contracttest
                          - testsuite
                          - integrationtest
                        properties:
                          schema:
                            type: array
                            items:
                              type: string
                          monitor:
                            type: array
                            items:
                              type: string
                          mock:
                            type: array
                            items:
                              type: string
                          environment:
                            type: array
                            items:
                              type: string
                          documentation:
                            type: array
                            items:
                              type: string
                          contracttest:
                            type: array
                            items:
                              type: string
                          testsuite:
                            type: array
                            items:
                              type: string
                          integrationtest:
                            type: array
                            items:
                              type: string
              examples:
                Example1:
                  value:
                    model_id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                    meta:
                      model: apiversion
                      action: find
                    data:
                      id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                      name: '0.1'
                      api: 06e41ca3-8bea-4bc5-a726-70338b9f1940
                      createdBy:
                        id: '234'
                        name: John doe
                        username: john.doe
                        email: john@doe.com
                        profilePicUrl: 'https://thispersondoesnotexist.com/'
                      updatedBy: '5665'
                      createdAt: ''
                      updatedAt: ''
                      summary: ''
                      stage: ''
                      visibility: ''
                Example2:
                  value:
                    model_id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                    meta:
                      model: apiversion
                      action: find
                    data:
                      id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                      name: '0.1'
                      api: 06e41ca3-8bea-4bc5-a726-70338b9f1940
                      createdBy: ''
                      updatedBy: '5665'
                      createdAt: ''
                      updatedAt: ''
                      summary: ''
                      stage: ''
                      visibility: ''
                      relations:
                        schema:
                          - ''
                        monitor:
                          - ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af
                        mock:
                          - 63334d1b-a8d9-4d77-a6cd-c4b0877426dc
                        environment: []
                        documentation: []
                        contracttest:
                          - 392355ae-5f06-47b7-a5b6-854b8be41bd5
                        testsuite: []
                        integrationtest: []
          description: Get an API Version(w/ createdBy populated)
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - api
                      - schema
                      - createdBy
                      - updatedBy
                      - createdAt
                      - updatedAt
                      - summary
                      - stage
                      - visibility
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      api:
                        type: string
                      schema:
                        type: array
                        items:
                          type: string
                      createdBy:
                        type: string
                        format: utc-millisec
                      updatedBy:
                        type: string
                        format: utc-millisec
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      summary:
                        type: string
                      stage:
                        type: string
                      visibility:
                        type: string
              example:
                model_id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                meta:
                  model: apiversion
                  action: find
                data:
                  id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                  name: '0.1'
                  api: 06e41ca3-8bea-4bc5-a726-70338b9f1940
                  schema:
                    - 3484cd1e-e00d-4c39-aea4-539663afe898
                  createdBy: '5665'
                  updatedBy: '5665'
                  createdAt: '2019-07-21T16:31:15.000Z'
                  updatedAt: '2019-07-21T16:31:15.000Z'
                  summary: ''
                  stage: ''
                  visibility: ''
          description: Get an API Version
    delete:
      tags:
        - API Version
      summary: Delete an API Version
      description: This endpoint creates an API Version for an API.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: string
                  revision:
                    type: integer
              example:
                model_id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                meta:
                  model: apiversion
                  action: destroy
                data:
                  id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                revision: 123
          description: Delete an API Version
    put:
      tags:
        - API Version
      summary: Update an API Version
      description: This endpoint creates an API Version for an API.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  format: utc-millisec
                description:
                  type: string
                summary:
                  type: string
            example:
              name: '1.0'
              description: Hidden easter egg
              summary: No Summary
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - createdAt
                      - updatedAt
                      - api
                      - createdBy
                      - updatedBy
                      - summary
                      - stage
                      - visibility
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                        format: utc-millisec
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      api:
                        type: string
                      createdBy:
                        type: string
                        format: utc-millisec
                      updatedBy:
                        type: string
                        format: utc-millisec
                      summary:
                        type: string
                      stage:
                        type: string
                      visibility:
                        type: string
              example:
                model_id: '{{apiVersionId}}'
                meta:
                  model: apiversion
                  action: update
                data:
                  id: '{{apiVersionId}}'
                  name: '2.0'
                  createdAt: '2019-07-26T11:24:15.000Z'
                  updatedAt: '2019-08-09T09:27:36.000Z'
                  api: '{{apiId}}'
                  createdBy: '12'
                  updatedBy: '12'
                  summary: ''
                  stage: ''
                  visibility: ''
          description: Update an API Version
  /apis/{apiId}/versions/{apiVersionId}/mocks:
    post:
      tags:
        - API Version
      summary: '[Deprecated] Add mock to API version'
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - collection
                      - mock
                    properties:
                      collection:
                        type: object
                        required:
                          - id
                          - uid
                        properties:
                          id:
                            type: string
                          uid:
                            type: string
                      mock:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              examples:
                Example1:
                  value:
                    model_id: '{{apiVersionId}}'
                    meta:
                      model: apiversion
                      action: addMockOrMonitor
                    data:
                      collection:
                        id: 4a5c117a-06ad-40fd-9414-912e058dd8e0
                        uid: 1122-4a5c117a-06ad-40fd-9414-912e058dd8e0
                      mock:
                        id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                Example2:
                  value:
                    model_id: '{{apiVersionId}}'
                    meta:
                      model: apiversion
                      action: addMockOrMonitor
                    data:
                      collection:
                        id: 4a5c117a-06ad-40fd-9414-912e058dd8e0
                        uid: 1122-4a5c117a-06ad-40fd-9414-912e058dd8e0
                      mock:
                        id: 03c17f53-7e2e-427d-b55a-006b244f29ff
          description: Add mock to api version from existing collection
  /apis/{apiId}/versions/{apiVersionId}/monitors:
    post:
      tags:
        - API Version
      summary: '[Deprecated] Add monitor to API version'
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - collection
                      - monitor
                    properties:
                      collection:
                        type: object
                        required:
                          - id
                          - uid
                        properties:
                          id:
                            type: string
                          uid:
                            type: string
                      monitor:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              examples:
                Example1:
                  value:
                    model_id: '{{apiVersionId}}'
                    meta:
                      model: apiversion
                      action: addMockOrMonitor
                    data:
                      collection:
                        id: 4a5c117a-06ad-40fd-9414-912e058dd8e0
                        uid: 1122-4a5c117a-06ad-40fd-9414-912e058dd8e0
                      monitor:
                        id: 03c17f53-7e2e-427d-b55a-006b244f29ff
                Example2:
                  value:
                    model_id: '{{apiVersionId}}'
                    meta:
                      model: apiversion
                      action: addMockOrMonitor
                    data:
                      collection:
                        id: 4a5c117a-06ad-40fd-9414-912e058dd8e0
                        uid: 1122-4a5c117a-06ad-40fd-9414-912e058dd8e0
                      monitor:
                        id: 03c17f53-7e2e-427d-b55a-006b244f29ff
          description: Add monitor to api version from existing collection
  /apis/{apiId}/versions/{apiVersionId}/relations:
    get:
      tags:
        - API Version
      summary: Get relations in a version
      description: Returns all the relation in a API version
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                allOf:
                  - $ref: >-
                      #/components/schemas/getRelationsInAVersion200ResponseSubSchema
                  - type: object
                    properties:
                      model_id:
                        type: string
              examples:
                Example1:
                  value:
                    model_id: 103eccbe-6a4e-4ee9-a498-169885976f87
                    meta:
                      model: apiversion
                      action: getRelations
                    data:
                      environment:
                        5670e8c6-6ae8-4913-8051-9663b9d88774:
                          id: 5670e8c6-6ae8-4913-8051-9663b9d88774
                          name: An environment
                          versionTag:
                            id: 136d77c2-cfd8-49d3-a685-c23aab9216c5
                            name: Draft
                          updatedAt: '2019-07-31T08:15:15.000Z'
                        9d1c8696-c4eb-44fe-bb44-afa52c7b0739:
                          id: 9d1c8696-c4eb-44fe-bb44-afa52c7b0739
                          name: An environment returns
                          versionTag:
                            id: 136d77c2-cfd8-49d3-a685-c23aab9216c4
                            name: Draft
                          updatedAt: '2019-07-31T08:15:15.000Z'
                Example2:
                  value:
                    model_id: 103eccbe-6a4e-4ee9-a498-169885976f87
                    meta:
                      model: apiversion
                      action: getRelations
                    data:
                      environment: {}
                      documentation: {}
                      mock:
                        63334d1b-a8d9-4d77-a6cd-c4b0877426dc:
                          id: 63334d1b-a8d9-4d77-a6cd-c4b0877426dc
                          url: 'https://something.mock.pstmn.io'
                          versionTag:
                            id: 136d77c2-cfd8-49d3-a685-c23aab9216c5
                            name: Draft
                          createdAt: '2019-0101 12:34:56'
                          createdBy: '5665'
                          updatedBy: '5665'
                          validation:
                            status: invalid
                            message: 3 errors found
                Example3:
                  value:
                    model_id: 103eccbe-6a4e-4ee9-a498-169885976f87
                    meta:
                      model: apiversion
                      action: getRelations
                    data:
                      environment: {}
                      documentation: {}
                      testsuite: {}
                      integrationtest: {}
                      monitor:
                        ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af:
                          id: ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af
                          name: A monitor
                          versionTag:
                            id: 9d1c8696-c4eb-44fe-bb44-afa52c7b0739
                            name: '0.1'
                            indicators:
                              - type: warning
                                name: versionMismatch
                                message:
                                  template: >-
                                    The provided version does not match the
                                    whatever version. {{url}}
                                  variables:
                                    url: ''
                          createdAt: '2019-0101 12:34:56'
                          createdBy: '5665'
                          updatedBy: '5665'
                          validation:
                            status: invalid
                            message: 3 errors found
                      mock:
                        63334d1b-a8d9-4d77-a6cd-c4b0877426dc:
                          id: 63334d1b-a8d9-4d77-a6cd-c4b0877426dc
                          url: 'https://something.mock.pstmn.io'
                          versionTag:
                            id: 28d137e9-0e87-4f2e-be4d-1311a9b31f78
                            name: '0.1'
                          createdAt: '2019-0101 12:34:56'
                          createdBy: '5665'
                          updatedBy: '5665'
                          validation:
                            status: invalid
                            message: 2 errors found
                      contracttest:
                        392355ae-5f06-47b7-a5b6-854b8be41bd5:
                          id: 392355ae-5f06-47b7-a5b6-854b8be41bd5
                          name: Some contract test
                          versionTag:
                            id: ce1a3aa7-70da-4ebf-850b-b6e613c73ac7
                            name: '0.1'
                          createdAt: '2019-0101 12:34:56'
                          createdBy: '5665'
                          updatedBy: '5665'
                          validation:
                            status: invalid
                            message: 3 errors found
                Example4:
                  value:
                    model_id: 103eccbe-6a4e-4ee9-a498-169885976f87
                    meta:
                      model: apiversion
                      action: getRelations
                    data:
                      monitor:
                        ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af:
                          id: ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af
                          name: some name
                          versiontag:
                            id: latest
                            name: CURRENT
                            system: true
                            indicators:
                              - type: info
                                name: versionMismatch
                                message:
                                  template: >-
                                    There's no version tag for this {{type}}.
                                    Add a version tag to link this {{type}} to a
                                    specific version of your
                                    API.<br/><br/>[Learn more]({{docs_link}})
                                    about version tags.
                                  variables:
                                    type: contract test
                                    docs_link: 'https://go.pstmn.io/version-tags'
                          updatedAt: '2019-01-01 12:34:56'
                      mock:
                        8958c176-2d09-4ac8-831a-c991525bac4b:
                          id: 8958c176-2d09-4ac8-831a-c991525bac4b
                          name: ccvcv
                          url: >-
                            https://8958c176-2d09-4ac8-831a-c991525bac4b.mock-beta.pstmn.io
                          versionTag:
                            id: latest
                            name: CURRENT
                            system: true
                            indicators:
                              - type: info
                                name: versionMismatch
                                message:
                                  template: >-
                                    There's no version tag for this {{type}}.
                                    Add a version tag to link this {{type}} to a
                                    specific version of your
                                    API.<br/><br/>[Learn more]({{docs_link}})
                                    about version tags.
                                  variables:
                                    type: mock
                                    docs_link: 'https://go.pstmn.io/version-tags'
                          updatedAt: '2019-08-07T07:57:33.000Z'
                          actions:
                            copyLink:
                              type: mockURL
                              data: >-
                                https://d1a16119-f03c-44c9-a125-70e515a35ab8.mock.pstmn.io
                            edit:
                              type: openAuthenticatedURL
                              data: >-
                                https://go.postman.co/mock/4451e51a-b2ac-42a3-8cbc-b040208a32ed
                      contracttest:
                        392355ae-5f06-47b7-a5b6-854b8be41bd5:
                          id: 392355ae-5f06-47b7-a5b6-854b8be41bd5
                          name: ''
                          versiontag:
                            id: latest
                            name: CURRENT
                            system: true
                            indicators:
                              - type: info
                                name: versionMismatch
                                message:
                                  template: >-
                                    There's no version tag for this {{type}}.
                                    Add a version tag to link this {{type}} to a
                                    specific version of your
                                    API.<br/><br/>[Learn more]({{docs_link}})
                                    about version tags.
                                  variables:
                                    type: contract test
                                    docs_link: 'https://go.pstmn.io/version-tags'
                          createdBy: '5665'
                          createdAt: '2019-01-01 12:34:56'
                          updatedAt: '2019-01-01 12:34:56'
                      documentation:
                        392355ae-5f06-47b7-a5b6-854b8be41bd5:
                          id: 392355ae-5f06-47b7-a5b6-854b8be41bd5
                          name: ''
                          versiontag:
                            id: latest
                            name: CURRENT
                            system: true
                            indicators:
                              - type: info
                                name: versionMismatch
                                message:
                                  template: >-
                                    There's no version tag for this {{type}}.
                                    Add a version tag to link this {{type}} to a
                                    specific version of your
                                    API.<br/><br/>[Learn more]({{docs_link}})
                                    about version tags.
                                  variables:
                                    type: contract test
                                    docs_link: 'https://go.pstmn.io/version-tags'
                          createdBy: '5665'
                          createdAt: '2019-01-01 12:34:56'
                          updatedAt: '2019-01-01 12:34:56'
                          actions:
                            edit:
                              type: collectionId
                              data: 55850-392355ae-5f06-47b7-a5b6-854b8be41bd7
                      integrationtest:
                        fe273bc4-09b5-4ee4-af35-c0312e59f87f:
                          id: fe273bc4-09b5-4ee4-af35-c0312e59f87f
                          name: C3
                          versionTag:
                            id: 136d77c2-cfd8-49d3-a685-c23aab9216c5
                            name: Draft
                          updatedAt: '2019-07-31T08:15:15.000Z'
                Example5:
                  value:
                    meta:
                      action: getRelations
                      model: apiversion
                      model_id: b77e07f6-4226-4df6-aa65-569002c45939
                    testsuite:
                      10c67fab-caa4-416b-b622-a74642be81ea:
                        id: 10c67fab-caa4-416b-b622-a74642be81ea
                        modelId: U1-b5c8f40a-dd21-447d-a23d-867fcb710ec6
                        links:
                          name:
                            type: openAuthenticatedURL
                            action: >-
                              https://go.postman.co/collections/U1-b5c8f40a-dd21-447d-a23d-867fcb710ec6
                        name: C2
                        versionTag:
                          id: latest
                          name: CURRENT
                          system: true
                          indicators:
                            - type: info
                              name: versionMismatch
                              message:
                                template: >-
                                  There's no version tag for this {{type}}. Add
                                  a version tag to link this {{type}} to a
                                  specific version of your API.<br/><br/>[Learn
                                  more]({{docs_link}}) about version tags.
                                variables:
                                  type: test suite
                                  docs_link: 'https://go.pstmn.io/version-tags'
                        updatedAt: '2020-10-28T13:01:36.000Z'
                        createdAt: '2020-10-28T13:01:36.000Z'
                        latestCollectionRun:
                          id: 24b73f99-5840-4377-b449-16b8c07bcadf
                          failedTestCount: 2
                          passedTestCount: 9
                        validation:
                          type: warning
                          message: Issues found
                          actions:
                            popup:
                              description: >-
                                The underlying collection is not in sync with
                                the API schema. Review these issues to keep the
                                collection in sync.
                              actions:
                                - type: refresh
                                  label: Validate Again
                                - type: link
                                  label: Review Issues
                                  url:
                                    type: openAuthenticatedURL
                                    link: >-
                                      https://go.postman.co/apis/904c5f39-dc50-432e-919e-f977ac7a2006/versions/10b198cf-f1bd-4cec-bf5b-8f6367996183/testsuite/10c67fab-caa4-416b-b622-a74642be81ea/update
                Example6:
                  value:
                    model_id: 103eccbe-6a4e-4ee9-a498-169885976f87
                    meta:
                      model: apiversion
                      action: getRelations
                    data:
                      schema:
                        5670e8c6-6ae8-4913-8051-9663b9d88774:
                          id: 5670e8c6-6ae8-4913-8051-9663b9d88774
          description: Get relations in a version (w/ type filtering)
    post:
      tags:
        - Relations & Entities
      summary: Link a Relation with an API Version
      description: >-
        This endpoint will allow you to add any of the following entities to the
        specified API Version.


        The `versionTag` field is optional, which means if you don't specify
        any, this will go ahead and link the HEAD/Current state of the
        collection. (Note: This behaviour can change based on what is required
        by product)
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: workspace
          in: query
          schema:
            type: string
          description: >-
            Required if generating relations from schema or when creating
            mock/monitor from a collection
          example: '{{workspaceId}}'
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                        format: color
                  data:
                    type: object
                    required:
                      - id
                      - model
                      - modelId
                      - versionTag
                    properties:
                      id:
                        type: string
                      model:
                        type: string
                      modelId:
                        type: string
                      versionTag:
                        type: string
                        nullable: true
                      url:
                        type: string
                        format: uri
                      links:
                        type: object
                        required:
                          - dashboard
                        properties:
                          dashboard:
                            type: object
                            required:
                              - type
                              - action
                            properties:
                              type:
                                type: string
                              action:
                                type: string
                                format: uri
              examples:
                Example1:
                  value:
                    model_id: 711e9560-e47c-4b92-9579-866153a4099a
                    meta:
                      model: mock
                      action: add
                    data:
                      id: 711e9560-e47c-4b92-9579-866153a4099a
                      model: mock
                      modelId: 12345678-1234-1234-1234-123456789012
                      versionTag: null
                Example2:
                  value:
                    model_id: 711e9560-e47c-4b92-9579-866153a4099a
                    meta:
                      model: mock
                      action: add
                    data:
                      id: 711e9560-e47c-4b92-9579-866153a4099a
                      model: mock
                      modelId: 711e9560-e47c-4b92-9579-866153a4099a
                      versionTag: null
                      url: >-
                        https://711e9560-e47c-4b92-9579-866153a4099a.mock.pstmn.io
                Example3:
                  value:
                    model_id: 711e9560-e47c-4b92-9579-866153a4099a
                    meta:
                      model: monitor
                      action: add
                    data:
                      id: 711e9560-e47c-4b92-9579-866153a4099a
                      model: collection
                      modelId: 5665-12345678-1234-1234-1234-123456789012
                      versionTag: null
                      links:
                        dashboard:
                          type: openAuthenticatedURL
                          action: >-
                            https://go.postman.co/monitors/711e9560-e47c-4b92-9579-866153a4099a
                Example4:
                  value:
                    model_id: 711e9560-e47c-4b92-9579-866153a4099a
                    meta:
                      model: testsuite
                      action: add
                    data:
                      id: 711e9560-e47c-4b92-9579-866153a4099a
                      model: collection
                      modelId: 5665-12345678-1234-1234-1234-123456789012
                      versionTag: null
          description: Create a mock from schema
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: invalidParamsError
                  message: The specified parameter is in an invalid format
          description: Create environment from schema
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                        format: color
                  data:
                    type: object
                    required:
                      - id
                      - model
                      - modelId
                      - versionTag
                    properties:
                      id:
                        type: string
                      model:
                        type: string
                      modelId:
                        type: string
                      versionTag:
                        type: string
                        nullable: true
              examples:
                Example1:
                  value:
                    model_id: 711e9560-e47c-4b92-9579-866153a4099a
                    meta:
                      model: documentation
                      action: add
                    data:
                      id: 711e9560-e47c-4b92-9579-866153a4099a
                      model: collection
                      modelId: 5665-12345678-1234-1234-1234-123456789012
                      versionTag: null
                Example2:
                  value:
                    model_id: fc64d1fe-b6aa-444c-a414-3367bed54064
                    meta:
                      model: schema
                      action: add
                    data:
                      id: fc64d1fe-b6aa-444c-a414-3367bed54064
                      model: schema
                      modelId: fc64d1fe-b6aa-444c-a414-3367bed54064
                      versionTag: null
          description: 'Success: Link a Collection with an API Version'
  /apis/versions/stages:
    get:
      tags:
        - API Version
      summary: Get Stages of an API Version
      parameters:
        - name: X-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: array
                    items:
                      type: string
              example:
                meta:
                  model: apiversion
                  action: stages
                data:
                  - Planning
                  - In Production
                  - In design
                  - In Review
                  - In Development
                  - Code Review
                  - Test
                  - SecurityReview
                  - Deprecated
                  - Alpha
                  - Beta
                  - Sunset
                  - Retired
          description: Get Stages of an API Version
  /apis/versions/visibility:
    get:
      tags:
        - API Version
      summary: Get visibility values of an API Version
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: array
                    items:
                      type: string
              example:
                meta:
                  model: apiversion
                  action: visibility
                data:
                  - public
                  - private
          description: Get visibility values of an API Version
  /apis/{apiId}/versions/{apiVersionId}/schemas/{schemaId}/collections:
    post:
      tags:
        - Schema
      summary: '[Deprecated][Older Apps] Generate Collections from Schema'
      description: >-
        Generates a postman collection on the server using previously uploaded
        schema.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiId}}'
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiVersionId}}'
        - name: schemaId
          in: path
          schema:
            type: string
          required: true
          example: '{{schemaId}}'
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                relations:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                    properties:
                      type:
                        type: string
            example:
              name: '{{collectionName}}'
              relations:
                - type: '{{relationType1}}'
                - type: '{{relationType2}}'
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - collection
                      - relations
                    properties:
                      collection:
                        type: object
                        required:
                          - id
                          - uid
                        properties:
                          id:
                            type: string
                          uid:
                            type: string
                      relations:
                        type: array
                        items:
                          type: object
                          required:
                            - type
                            - id
                          properties:
                            type:
                              type: string
                            id:
                              type: string
              example:
                model_id: 5d810c39-df60-434e-a76f-a2192cd8d816
                meta:
                  model: schema
                  action: generateCollection
                data:
                  collection:
                    id: e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822
                    uid: 5852-e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822
                  relations:
                    - type: documentation
                      id: cf72594d-d37c-43ce-8281-a76f-a2192cd8d81f
                    - type: testsuite
                      id: e3b3a0b7-d37c-43ce-8281-a76f-a2192cd8d816
          description: 'Success: Generate collections'
  /collections/{collectionUID}/schema:
    get:
      tags:
        - Schema
      summary: Fetch schema for a collection
      parameters:
        - name: collectionUID
          in: path
          schema:
            type: string
          required: true
        - name: schemaTypes
          in: query
          schema:
            type: string
          example: 'openapi3,openapi2,raml'
        - name: populate
          in: query
          schema:
            type: string
          examples:
            Example1:
              value: api
            Example2:
              value: apiVersion
        - name: updatedAt
          in: query
          schema:
            type: string
          description: >-
            The updated at of the schema version the client has If not passed
            then the new schema will always be sent
          example: updatedAt
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - schema
                    properties:
                      schema:
                        type: object
                        required:
                          - id
                          - updatedAt
                          - schema
                          - type
                          - language
                        properties:
                          id:
                            type: string
                          updatedAt:
                            type: string
                            format: date-time
                          schema:
                            type: string
                            format: style
                          type:
                            type: string
                          language:
                            type: string
                      api:
                        type: object
                        required:
                          - id
                          - name
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                      apiVersion:
                        type: object
                        required:
                          - id
                          - name
                        properties:
                          id:
                            type: string
                          name:
                            type: string
              examples:
                Example1:
                  value:
                    model_id: 305475-0b0cfc23-1baf-44ef-9edc-f23d7ad21444
                    meta:
                      model: collection
                      action: fetchSchema
                    data:
                      schema:
                        id: 5f6a11bc-c8dd-4def-9a33-6a630f102f26
                        updatedAt: '2019-12-17T13:10:59.000Z'
                        schema: >-
                          {"openapi":"3.0","swagger":"2.0","version":"1.0","info":{"title":"Sample
                          API Server -
                          JSON","version":"v0.3.0"},"paths":{"/api/books":{"get":{"description":"Sends
                          list of
                          books","produces":["application/json"],"schemes":["https"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/components/schemas/books"}}}}},"/api/authors":{"get":{"description":"Send
                          list of
                          authors","produces":["application/json"],"schemes":["https"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/componenets/schemas/author"}}}}},"/api/book/:name":{"get":{"description":"Send
                          a particular book
                          name","produces":["application/json"],"schemes":["https"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/components/schemas/book"}}}}}},"components":{"schemas":{"books":{"type":"object","properties":{"title":{"type":"string"},"author":{"type":"string"}}},"author":{"type":"object","properties":{"name":{"type":"string"}}}}}}
                        type: openapi3
                        language: json
                      api:
                        id: 5f6a11bc-c8dd-4def-9a33-6a630f102f26
                        name: My api
                      apiVersion:
                        id: 5f6a11bc-c8dd-4def-9a33-6a630f102f26
                        name: Api Version name
                Example2:
                  value:
                    model_id: 305475-0b0cfc23-1baf-44ef-9edc-f23d7ad21444
                    meta:
                      model: collection
                      action: fetchSchema
                    data:
                      schema:
                        id: 5f6a11bc-c8dd-4def-9a33-6a630f102f26
                        updatedAt: '2019-12-17T13:10:59.000Z'
                        schema: >-
                          {"openapi":"3.0","swagger":"2.0","version":"1.0","info":{"title":"Sample
                          API Server -
                          JSON","version":"v0.3.0"},"paths":{"/api/books":{"get":{"description":"Sends
                          list of
                          books","produces":["application/json"],"schemes":["https"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/components/schemas/books"}}}}},"/api/authors":{"get":{"description":"Send
                          list of
                          authors","produces":["application/json"],"schemes":["https"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/componenets/schemas/author"}}}}},"/api/book/:name":{"get":{"description":"Send
                          a particular book
                          name","produces":["application/json"],"schemes":["https"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/components/schemas/book"}}}}}},"components":{"schemas":{"books":{"type":"object","properties":{"title":{"type":"string"},"author":{"type":"string"}}},"author":{"type":"object","properties":{"name":{"type":"string"}}}}}}
                        type: openapi3
                        language: json
                Example3:
                  value:
                    model_id: 305475-0b0cfc23-1baf-44ef-9edc-f23d7ad21444
                    meta:
                      model: collection
                      action: fetchSchema
                    data:
                      schema:
                        id: 5f6a11bc-c8dd-4def-9a33-6a630f102f26
                        updatedAt: '2019-12-17T13:10:59.000Z'
                        schema: >-
                          {"openapi":"3.0","swagger":"2.0","version":"1.0","info":{"title":"Sample
                          API Server -
                          JSON","version":"v0.3.0"},"paths":{"/api/books":{"get":{"description":"Sends
                          list of
                          books","produces":["application/json"],"schemes":["https"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/components/schemas/books"}}}}},"/api/authors":{"get":{"description":"Send
                          list of
                          authors","produces":["application/json"],"schemes":["https"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/componenets/schemas/author"}}}}},"/api/book/:name":{"get":{"description":"Send
                          a particular book
                          name","produces":["application/json"],"schemes":["https"],"responses":{"200":{"description":"OK","schema":{"$ref":"#/components/schemas/book"}}}}}},"components":{"schemas":{"books":{"type":"object","properties":{"title":{"type":"string"},"author":{"type":"string"}}},"author":{"type":"object","properties":{"name":{"type":"string"}}}}}}
                        type: openapi3
                        language: json
                      api:
                        id: 5f6a11bc-c8dd-4def-9a33-6a630f102f26
                        name: My api
          description: Fetch schema for a collection (with api and api info)
  /apis/{apiId}/versions/{apiVersionId}/entities/{entityType}:
    get:
      tags:
        - Relations & Entities
      summary: Get all "possible" entities for a type (for an API Version)
      description: >-
        This endpoint would also require the workspace context to be passed
        along.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: entityType
          in: path
          schema:
            type: string
          required: true
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        url:
                          type: string
                          format: uri
              examples:
                Example1:
                  value:
                    model_id: fdd171e2-09f5-426d-9b3e-6c13c119e1b3
                    meta:
                      model: apiversion
                      action: getEntities
                    data:
                      - id: c48b37ac-e7ab-4dce-abcb-e27e4b8bc790
                        name: Sync Service Uptime Monitor
                      - id: e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822
                        name: Sync Service Downtime Monitor
                Example2:
                  value:
                    model_id: fdd171e2-09f5-426d-9b3e-6c13c119e1b3
                    meta:
                      model: apiversion
                      action: getEntities
                    data:
                      - id: c48b37ac-e7ab-4dce-abcb-e27e4b8bc790
                        name: Sync Service Mock
                        url: >-
                          https://8958c176-2d09-4ac8-831a-c991525bac4b.mock-beta.pstmn.io
          description: Get all "possible" entities of a type for an API and workspace
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: string
                        name:
                          type: string
              examples:
                Example1:
                  value:
                    model_id: fdd171e2-09f5-426d-9b3e-6c13c119e1b3
                    meta:
                      model: apiversion
                      action: getEntities
                    data:
                      - id: c48b37ac-e7ab-4dce-abcb-e27e4b8bc790
                        name: Sync Service Uptime Monitor
                      - id: e3b3a0b7-34d5-4fc5-83e0-118bd9e8c822
                        name: Sync Service Downtime Monitor
                Example2:
                  value:
                    meta:
                      model: apiversion
                      action: getEntities
                    data:
                      - id: U1-4a5c117a-06ad-40fd-9414-912e058dd8e0
                        name: C1
                        owner: U1
                        uid: U1-4a5c117a-06ad-40fd-9414-912e058dd8e0
                      - id: U1-63be42f0-108e-4a23-84bf-3e7a6e7edc86
                        name: Collection 5
                        owner: U1
                        uid: U1-63be42f0-108e-4a23-84bf-3e7a6e7edc86
                      - id: U1-805196be-3b3b-4aa0-b63d-c6df714d2f6f
                        name: C1
                        owner: U1
                        uid: U1-805196be-3b3b-4aa0-b63d-c6df714d2f6f
                        forkedFrom:
                          id: U1-4a5c117a-06ad-40fd-9414-912e058dd8e0
                          forkName: This is the fork!
                          name: C1
                          createdAt: '2019-05-20T11:36:26.000Z'
                      - id: U1-8587160f-5a8a-4989-8866-15c2df273780
                        name: Collection 6
          description: Get all "possible" entities for an API
  /apis/{apiId}/versions/{apiVersionId}/{entityType}:
    get:
      tags:
        - Relations & Entities
      summary: Get IDs of the linked relations in an API Version
      description: >-
        The `relationType` can be either of `mock` or `monitor`. More will be
        supported later.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: entityType
          in: path
          schema:
            type: string
          required: true
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - mock
                      - monitor
                    properties:
                      mock:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                          properties:
                            id:
                              type: string
                      monitor:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: string
                            name:
                              type: string
              examples:
                Example1:
                  value:
                    model_id: '{{apiVersionId}}'
                    meta:
                      model: apiversion
                      action: getLinkedRelationsForType
                    data:
                      mock:
                        - id: ''
                        - id: ''
                Example2:
                  value:
                    model_id: 103eccbe-6a4e-4ee9-a498-169885976f87
                    meta:
                      model: apiversion
                      action: getLinkedRelationsForType
                    data:
                      monitor:
                        - id: 103eccbe-6a4e-4ee9-a498-169885976f21
                          name: Monitor 1
                        - id: 103eccbe-6a4e-4ee9-a498-169885976f23
                          name: Monitor2
          description: Get IDs of the linked mocks in an API Version
  /apis/{apiId}/versions{{apiVersionId}}/relations/{entityType}/{entityId}:
    delete:
      tags:
        - Relations & Entities
      summary: Delete a relation of an API Version
      description: >-
        This endpoint will allow you to add any of the following entities to the
        specified API Version.


        Applicable Entities:

        - Contract Tests (`contracttest`)

        - Documentation (`documentation`)

        - Test Suites (`testsuite`)

        - Integration Tests (`integrationtest`)


        The payload should include the type of entity you want to link, which is
        mentioned in brackets for the above. It should specify the `model` and
        the `modelId` that you want to link it as.


        The `versionTag` field is optional, which means if you don't specify
        any, this will go ahead and link the HEAD/Current state of the
        collection. (Note: This behaviour can change based on what is required
        by product)
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: entityType
          in: path
          schema:
            type: string
          required: true
        - name: entityId
          in: path
          schema:
            type: string
          required: true
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                    properties:
                      id:
                        type: string
              example:
                model_id: 711e9560-e47c-4b92-9579-866153a4099a
                meta:
                  model: documentation
                  action: destroy
                data:
                  id: 711e9560-e47c-4b92-9579-866153a4099a
          description: Delete a link of an API Version
  /apis/{apiId}/versions{apiVersionId}/relations/{relationType}/constraint-checks:
    post:
      tags:
        - Relations & Entities
      summary: Check whether an entity can be linked to an API Version
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: relationType
          in: path
          schema:
            type: string
          required: true
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                    type: object
                    required:
                        - entityId
                        - allowed
                    properties:
                        entityId:
                            type: string
                        allowed:
                            type: boolean
                        reason:
                            type: object
                            properties:
                                message:
                                    type: string
              example:
                relations:
                    - entityId : 'U1-b5c8f40a-dd21-447d-a23d-867fcb710ec6'
                      allowed: true
                      message:  'This collection is already added to House Stark API, version Draft.'
          description: Checks if a relation can be linked to an API version
  /support/user/{userId}/apis:
    get:
      tags:
        - Support endpoints
      summary: List APIs accessible by an user
      description: This endpoint will return all the APIs accessible by an user.
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          required: true
          example: '{{userId}}'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{supportdashSecret}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  apis:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - summary
                        - description
                        - createdBy
                        - createdAt
                        - updatedAt
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        summary:
                          type: string
                        description:
                          type: string
                        createdBy:
                          type: string
                          format: utc-millisec
                        createdAt:
                          type: string
                          format: style
                        updatedAt:
                          type: string
              example:
                apis:
                  - id: 387c2863-6ee3-4a56-8210-225f774edadf
                    name: Sync API
                    summary: This is a summary
                    description: description
                    createdBy: '5665'
                    createdAt: '2019-02-12 19:34:49'
                    updatedAt: '2019-02-12 19:34:49'
                  - id: 387c2863-6ee3-4a56-8210-225f774edaee
                    name: New Sync API
                    summary: This is a summary
                    description: description
                    createdBy: '5665'
                    createdAt: '2019-02-12 19:34:49'
                    updatedAt: '2019-02-12 19:34:49'
                  - id: 387c2863-6ee3-4a56-8210-225f774edbde
                    name: Another Sync API
                    summary: This is a summary
                    description: description
                    createdBy: '5665'
                    createdAt: '2019-02-12 19:34:49'
                    updatedAt: '2019-02-12 19:34:49'
          description: List APIs accessible by an user
      security:
        - securityScheme1: []
  /support/team/{teamId}/apis:
    get:
      tags:
        - Support endpoints
      summary: List all APIs of a team
      description: This endpoint will return all the APIs belonging to a team.
      parameters:
        - name: teamId
          in: path
          schema:
            type: string
          required: true
          example: '{{teamId}}'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{supportdashSecret}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  apis:
                    type: array
                    items:
                      type: object
                      required:
                        - id
                        - name
                        - summary
                        - description
                        - createdBy
                        - createdAt
                        - updatedAt
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        summary:
                          type: string
                        description:
                          type: string
                        createdBy:
                          type: string
                          format: utc-millisec
                        createdAt:
                          type: string
                          format: style
                        updatedAt:
                          type: string
              example:
                apis:
                  - id: 387c2863-6ee3-4a56-8210-225f774edadf
                    name: Sync API
                    summary: This is a summary
                    description: description
                    createdBy: '5665'
                    createdAt: '2019-02-12 19:34:49'
                    updatedAt: '2019-02-12 19:34:49'
                  - id: 387c2863-6ee3-4a56-8210-225f774edaee
                    name: New Sync API
                    summary: This is a summary
                    description: description
                    createdBy: '9876'
                    createdAt: '2019-02-12 19:34:49'
                    updatedAt: '2019-02-12 19:34:49'
                  - id: 387c2863-6ee3-4a56-8210-225f774edbde
                    name: Another Sync API
                    summary: This is a summary
                    description: description
                    createdBy: '7685'
                    createdAt: '2019-02-12 19:34:49'
                    updatedAt: '2019-02-12 19:34:49'
          description: List all APIs of a team
      security:
        - securityScheme1: []
  /support/api/{apiId}:
    delete:
      tags:
        - Support endpoints
      summary: Delete an API
      description: This endpoint will enable deletion of APIs from support dashboard.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiId}}'
        - name: x-support-secret
          in: header
          schema:
            type: string
          example: '{{supportdashSecret}}'
      responses:
        default:
          description: No responses available
      security:
        - securityScheme1: []
    get:
        tags:
          - Support endpoints
        description: >-
            This endpoint will introduce the ability to find an API given an id
            This can only be used by support dashboard
        parameters:
            - name: apiId
              in: path
              schema:
                type: string
              required: true
            - name: x-support-secret
              in: header
              schema:
                type: string
              required: true
        responses:
          '200':
            description: Returns an API with all its meta data, versions and relations
            content:
              application/json:
                schema:
                    type: object
                    properties:
                        apis:
                            type: array
                            items:
                                type: object
                                properties:
                                    createdAt:
                                        type: string
                                    id:
                                        type: string
                                    name:
                                        type: string
                                    description:
                                        type: string
                                    createdBy:
                                        type: string
                                    updatedBy:
                                        type: string
                                    versions:
                                        type: string
                            required:
                                - createdAt
                                - id
                                - name
                                - description
                                - createdBy
                                - updatedBy
                                - versions
                    required:
                        - apis
          '400':
            description: >-
                It can be thrown when the given API id is not a
                valid GUID
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                $ref: '#/components/schemas/error'
                        required:
                            - error
          '403':
            description: >-
                It can be thrown when the given x-support-secret is
                incorrect or the basic auth credentials are invalid
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            error:
                                $ref: '#/components/schemas/error'
                        required:
                            - error
                  
  /apis/{apiId}/versions/{apiVersionId}/relations/{entityType}/{entityId}/validate:
    post:
      tags:
        - Validation
      summary: Validate a relation
      description: >-
        Calling this endpoint will trigger the collection validation flow for
        the linked collection of this relation.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: entityType
          in: path
          schema:
            type: string
          required: true
        - name: entityId
          in: path
          schema:
            type: string
          required: true
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - validation
                      - actions
                    properties:
                      id:
                        type: string
                      validation:
                        type: object
                        required:
                          - type
                          - message
                        properties:
                          type:
                            type: string
                          message:
                            type: string
                      actions:
                        type: object
                        required:
                          - popup
                        properties:
                          popup:
                            type: object
                            required:
                              - description
                              - actions
                            properties:
                              description:
                                type: string
                              actions:
                                type: array
                                items:
                                  type: object
                                  required:
                                    - type
                                    - label
                                  properties:
                                    type:
                                      type: string
                                    label:
                                      type: string
                  revision:
                    type: string
                    nullable: true
              examples:
                Example1:
                  value:
                    model_id: 5b32caea-903c-472e-81a2-2cb054ede666
                    meta:
                      model: relation
                      action: validate
                    data:
                      id: 5b32caea-903c-472e-81a2-2cb054ede666
                      validation:
                        type: warning
                        message: Issues found
                      actions:
                        popup:
                          description: >-
                            We found a few issues when validating against the
                            schema.
                          actions:
                            - type: refresh
                              label: Validate Again
                            - type: link
                              label: View Issues
                              url:
                                type: openAuthenticatedURL
                                link: >-
                                  https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/documentation/5b32caea-903c-472e-81a2-2cb054ede666/validation
                    revision: null
                Example2:
                  value:
                    model_id: 5b32caea-903c-472e-81a2-2cb054ede666
                    meta:
                      model: relation
                      action: validate
                    data:
                      id: R1_ID
                      actions:
                        popup:
                          actions:
                            - type: refresh
                              label: Validate Again
                          description: >-
                            Your documentation matches the schema for this API
                            version. Hurray!
                      validation:
                        type: success
                        message: No issues found
                    revision: null
          description: Validate a relation
          headers:
            Server:
              schema:
                type: string
              example: nginx
            Date:
              schema:
                type: string
                format: style
              example: 'Wed, 13 May 2020 20:07:46 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=a392d313e6a11241
            x-srv-span:
              schema:
                type: string
              example: v=1;s=9c38fd4e6111b94e
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            X-RateLimit-Limit:
              schema:
                type: integer
              example: 10
            X-RateLimit-Remaining:
              schema:
                type: integer
              example: 9
            X-RateLimit-Reset:
              schema:
                type: integer
              example: 1589400476
            ETag:
              schema:
                type: string
              example: W/"27a-DtN2aJ5d96CuoEmGBiK1MQ"
            Vary:
              schema:
                type: string
              example: Accept-Encoding
            Content-Encoding:
              schema:
                type: string
              example: gzip
  /apis/{apiId}/versions/{apiVersionId}/relations/validate:
    post:
      tags:
        - Validation
      summary: Validate all relations of an APIVersion
      description: >-
        Calling this endpoint will trigger the validation flow for all the
        relations of an APIVersion.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{accessToken}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - documentation
                      - testsuite
                      - integrationtest
                      - contracttest
                      - monitor
                      - mock
                    properties:
                      monitor:
                        type: object
                        required:
                          - 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                        properties:
                          1ea954a7-ad6d-46c0-b8e7-552c5334c253:
                            type: object
                            required:
                              - validation
                              - actions
                            properties:
                              validation:
                                type: object
                                required:
                                  - type
                                  - message
                                properties:
                                  type:
                                    type: string
                                  message:
                                    type: string
                              actions:
                                type: object
                                required:
                                  - popup
                                properties:
                                  popup:
                                    type: object
                                    required:
                                      - description
                                      - actions
                                    properties:
                                      description:
                                        type: string
                                      actions:
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - type
                                            - label
                                          properties:
                                            type:
                                              type: string
                                            label:
                                              type: string
                      mock:
                        type: object
                        required:
                          - 7681c25b-5c50-44a6-8724-fe1e71550160
                        properties:
                          7681c25b-5c50-44a6-8724-fe1e71550160:
                            type: object
                            required:
                              - validation
                              - actions
                            properties:
                              validation:
                                type: object
                                required:
                                  - type
                                  - message
                                properties:
                                  type:
                                    type: string
                                  message:
                                    type: string
                              actions:
                                type: object
                                required:
                                  - popup
                                properties:
                                  popup:
                                    type: object
                                    required:
                                      - description
                                      - actions
                                    properties:
                                      description:
                                        type: string
                                      actions:
                                        type: array
                                        items:
                                          type: object
                  revision:
                    type: string
                    nullable: true
              example:
                meta:
                  model: relation
                  action: validateAll
                data:
                  documentation:
                    5b32caea-903c-472e-81a2-2cb054ede666:
                      validation:
                        type: warning
                        message: Issues found
                      actions:
                        popup:
                          description: >-
                            We found a few issues when validating against the
                            schema.
                          actions:
                            - type: refresh
                              label: Validate Again
                            - type: link
                              label: View Issues
                              url:
                                type: openAuthenticatedURL
                                link: >-
                                  https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/documentation/5b32caea-903c-472e-81a2-2cb054ede666/validation
                  testsuite:
                    b26bc935-7422-4f73-8d03-9bf212fb48ba:
                      validation:
                        type: warning
                        message: Issues found
                      actions:
                        popup:
                          description: >-
                            We found a few issues when validating against the
                            schema.
                          actions:
                            - type: refresh
                              label: Validate Again
                            - type: link
                              label: View Issues
                              url:
                                type: openAuthenticatedURL
                                link: >-
                                  https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/testsuite/b26bc935-7422-4f73-8d03-9bf212fb48ba/validation
                  integrationtest:
                    35c6bdbd-d602-4b37-9c87-1640fc8025c8:
                      validation:
                        type: warning
                        message: Issues found
                      actions:
                        popup:
                          description: >-
                            We found a few issues when validating against the
                            schema.
                          actions:
                            - type: refresh
                              label: Validate Again
                            - type: link
                              label: View Issues
                              url:
                                type: openAuthenticatedURL
                                link: >-
                                  https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/integrationtest/35c6bdbd-d602-4b37-9c87-1640fc8025c8/validation
                  contracttest:
                    bb69b435-a90a-44fe-aa49-f580eeb1be88:
                      validation:
                        type: refresh
                        message: Validation failed
                      actions:
                        popup:
                          description: We hit a snag while updating. Try validating again.
                          actions:
                            - type: refresh
                              label: Validate Again
                  monitor:
                    1ea954a7-ad6d-46c0-b8e7-552c5334c253:
                      validation:
                        type: refresh
                        message: Validation failed
                      actions:
                        popup:
                          description: We hit a snag while updating. Try validating again.
                          actions:
                            - type: refresh
                              label: Validate Again
                  mock:
                    7681c25b-5c50-44a6-8724-fe1e71550160:
                      validation:
                        type: warning
                        message: Issues found
                      actions:
                        popup:
                          description: >-
                            We found a few issues when validating against the
                            schema.
                          actions:
                            - type: refresh
                              label: Validate Again
                            - type: link
                              label: View Issues
                              url:
                                type: openAuthenticatedURL
                                link: >-
                                  https://go.postman.co/apis/8fe00285-9991-455a-a8dc-af3115d3db24/versions/559da235-7d58-460a-ac17-7431e6304c94/mock/7681c25b-5c50-44a6-8724-fe1e71550160/validation
                revision: null
          description: Validate all relations of an APIVersion
          headers:
            Server:
              schema:
                type: string
              example: nginx
            Date:
              schema:
                type: string
                format: style
              example: 'Wed, 13 May 2020 20:08:20 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=b1d053bf22d788f3
            x-srv-span:
              schema:
                type: string
              example: v=1;s=da109ce8e4247734
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            X-RateLimit-Limit:
              schema:
                type: integer
              example: 10
            X-RateLimit-Remaining:
              schema:
                type: integer
              example: 9
            X-RateLimit-Reset:
              schema:
                type: integer
              example: 1589400509
            ETag:
              schema:
                type: string
              example: W/"a7a-3Y0dKXjgLFUfEAmVhL85rw"
            Vary:
              schema:
                type: string
              example: Accept-Encoding
            Content-Encoding:
              schema:
                type: string
              example: gzip
  /apis/{apiId}/versions/{apiVersionId}/relations/{entityType}/{entityId}/diff:
    get:
      tags:
        - Validation
      summary: Fetch diff data for a relation
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiId}}'
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiVersionId}}'
        - name: entityType
          in: path
          schema:
            type: string
          required: true
          example: '{{entityType}}'
        - name: entityId
          in: path
          schema:
            type: string
          required: true
          example: '{{entityId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
            example: null
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    nullable: true
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - diff
                      - link
                      - validationMeta
                    properties:
                      link:
                        type: object
                        required:
                          - view_updated_collection
                        properties:
                          view_updated_collection:
                            type: object
                            required:
                              - url
                            properties:
                              url:
                                type: string
                                format: uri
                      validationMeta:
                        type: object
                        required:
                          - title
                          - description
                          - collection
                        properties:
                          title:
                            type: string
                          description:
                            type: object
                            required:
                              - template
                              - variables
                            properties:
                              template:
                                type: string
                                format: style
                              variables:
                                type: object
                                required:
                                  - api_link
                                  - collection_link
                                properties:
                                  api_link:
                                    type: string
                                    format: uri
                                  collection_link:
                                    type: string
                                    format: uri
                          collection:
                            type: object
                            required:
                              - id
                              - canUpdate
                            properties:
                              id:
                                type: string
                              canUpdate:
                                type: boolean
                      diff:
                        type: object
                        required:
                          - request
                          - response
                        properties:
                          request:
                            type: object
                            required:
                              - update
                              - destroy
                            properties:
                              update:
                                type: object
                                required:
                                  - objs
                                properties:
                                  objs:
                                    type: object
                                    required:
                                      - ebb7405e-77b9-4210-9227-5e2c85e60922
                                      - 644d1cb9-ab8b-4210-9f64-e80e10f46942
                                      - 2520d0ef-d2fe-41d9-9be7-05cc3b8f9997
                                    properties:
                                      ebb7405e-77b9-4210-9227-5e2c85e60922:
                                        type: object
                                        required:
                                          - responses
                                          - name
                                          - method
                                          - endpoint
                                          - diff
                                        properties:
                                          responses:
                                            type: array
                                            items:
                                              type: string
                                          name:
                                            type: string
                                          method:
                                            type: string
                                          endpoint:
                                            type: string
                                          diff:
                                            type: object
                                            required:
                                              - queryParams
                                            properties:
                                              queryParams:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - description
                                                        - key
                                                        - value
                                                      properties:
                                                        description:
                                                          type: string
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                                  to:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - description
                                                        - key
                                                        - value
                                                      properties:
                                                        description:
                                                          type: string
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                                          format: utc-millisec
                                      644d1cb9-ab8b-4210-9f64-e80e10f46942:
                                        type: object
                                        required:
                                          - responses
                                          - name
                                          - method
                                          - endpoint
                                          - diff
                                        properties:
                                          responses:
                                            type: array
                                            items:
                                              type: string
                                          name:
                                            type: string
                                          method:
                                            type: string
                                          endpoint:
                                            type: string
                                          diff:
                                            type: object
                                      2520d0ef-d2fe-41d9-9be7-05cc3b8f9997:
                                        type: object
                                        required:
                                          - responses
                                          - name
                                          - method
                                          - endpoint
                                          - diff
                                        properties:
                                          responses:
                                            type: array
                                            items:
                                              type: string
                                          name:
                                            type: string
                                          method:
                                            type: string
                                          endpoint:
                                            type: string
                                          diff:
                                            type: object
                              destroy:
                                type: object
                                required:
                                  - objs
                                properties:
                                  objs:
                                    type: object
                          response:
                            type: object
                            required:
                              - update
                            properties:
                              update:
                                type: object
                                required:
                                  - objs
                                properties:
                                  objs:
                                    type: object
                                    required:
                                      - 662917f1-ae9f-47a5-b33f-fff43e3125fe
                                      - 81da2915-0dac-4d14-8002-c5765ab5a7bc
                                      - 71719ca5-7ae5-4032-8603-a66002be5a0b
                                      - d80807c9-b419-4833-943e-0700097785a8
                                      - 24e27af5-22b2-466a-a3a8-0a5eb3f35666
                                      - 52296c93-606c-4bb0-8fcd-9f76d93e5dd2
                                    properties:
                                      662917f1-ae9f-47a5-b33f-fff43e3125fe:
                                        type: object
                                        required:
                                          - name
                                          - diff
                                        properties:
                                          name:
                                            type: string
                                          diff:
                                            type: object
                                            required:
                                              - headers
                                              - text
                                            properties:
                                              headers:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: array
                                                    items:
                                                      type: object
                                                  to:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                        - description
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                                        description:
                                                          type: string
                                              text:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: string
                                                    format: style
                                                  to:
                                                    type: string
                                      81da2915-0dac-4d14-8002-c5765ab5a7bc:
                                        type: object
                                        required:
                                          - name
                                          - diff
                                        properties:
                                          name:
                                            type: string
                                          diff:
                                            type: object
                                            required:
                                              - headers
                                              - text
                                            properties:
                                              headers:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                                  to:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                              text:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: string
                                                    format: style
                                                  to:
                                                    type: string
                                      71719ca5-7ae5-4032-8603-a66002be5a0b:
                                        type: object
                                        required:
                                          - name
                                          - diff
                                        properties:
                                          name:
                                            type: string
                                          diff:
                                            type: object
                                            required:
                                              - headers
                                              - text
                                            properties:
                                              headers:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                                  to:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                              text:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: string
                                                    format: style
                                                  to:
                                                    type: string
                                      d80807c9-b419-4833-943e-0700097785a8:
                                        type: object
                                        required:
                                          - name
                                          - diff
                                        properties:
                                          name:
                                            type: string
                                          diff:
                                            type: object
                                            required:
                                              - headers
                                            properties:
                                              headers:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                                  to:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                      24e27af5-22b2-466a-a3a8-0a5eb3f35666:
                                        type: object
                                        required:
                                          - name
                                          - diff
                                        properties:
                                          name:
                                            type: string
                                          diff:
                                            type: object
                                            required:
                                              - headers
                                              - text
                                            properties:
                                              headers:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                                  to:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                              text:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: string
                                                    format: style
                                                  to:
                                                    type: string
                                      52296c93-606c-4bb0-8fcd-9f76d93e5dd2:
                                        type: object
                                        required:
                                          - name
                                          - diff
                                        properties:
                                          name:
                                            type: string
                                          diff:
                                            type: object
                                            required:
                                              - headers
                                              - text
                                            properties:
                                              headers:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                                  to:
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - key
                                                        - value
                                                      properties:
                                                        key:
                                                          type: string
                                                        value:
                                                          type: string
                                              text:
                                                type: object
                                                required:
                                                  - from
                                                  - to
                                                properties:
                                                  from:
                                                    type: string
                                                    format: style
                                                  to:
                                                    type: string
                  revision:
                    type: string
                    nullable: true
              examples:
                Example1:
                  value:
                    model_id: null
                    meta:
                      model: validation
                      action: updateRelation
                    data:
                      link:
                        view_updated_collection:
                          url: >-
                            https://go.postman-beta.co/collections/510747-4db39d40-9688-402b-a6e3-b41d4fd7724c
                    revision: null
                Example2:
                  value:
                    model_id: 47541
                    meta:
                      model: validation
                      action: findForRelation
                    data:
                      validationMeta:
                        title: Generated Collection - 2
                        description:
                          template: >-
                            We found issues between [Generated Collection -
                            2]({{collection_link}}) collection and [ADP Test -
                            29/5/2020-18:35:18]({{api_link}}) API schema version
                            v1.0.0 API. Make the following changes to keep the
                            collection in sync.
                          variables:
                            api_link: >-
                              https://go.postman-beta.co/apis/31d96d1c-074c-4a4d-a26e-73df68101a21?version=774bd02c-3a9d-476a-990c-0e7bda064e07
                            collection_link: >-
                              https://go.postman-beta.co/collections/510747-4db39d40-9688-402b-a6e3-b41d4fd7724c
                        collection:
                          id: 510747-4db39d40-9688-402b-a6e3-b41d4fd7724c
                          canUpdate: true
                      diff:
                        request:
                          update:
                            objs:
                              ebb7405e-77b9-4210-9227-5e2c85e60922:
                                responses:
                                  - 662917f1-ae9f-47a5-b33f-fff43e3125fe
                                  - 81da2915-0dac-4d14-8002-c5765ab5a7bc
                                name: List all pets
                                method: GET
                                endpoint: GET /pets
                                diff:
                                  queryParams:
                                    from:
                                      - description: >-
                                          How many items to return at one time
                                          (max 100)
                                        key: limit
                                        value: <integer>
                                    to:
                                      - description: >-
                                          How many items to return at one time
                                          (max 100)
                                        key: limit
                                        value: '-14647066'
                              644d1cb9-ab8b-4210-9f64-e80e10f46942:
                                responses:
                                  - 71719ca5-7ae5-4032-8603-a66002be5a0b
                                  - d80807c9-b419-4833-943e-0700097785a8
                                name: Create a pet
                                method: POST
                                endpoint: POST /pets
                                diff: {}
                              2520d0ef-d2fe-41d9-9be7-05cc3b8f9997:
                                responses:
                                  - 24e27af5-22b2-466a-a3a8-0a5eb3f35666
                                  - 52296c93-606c-4bb0-8fcd-9f76d93e5dd2
                                name: Info for a specific pet
                                method: GET
                                endpoint: 'GET /pets/{petId}'
                                diff: {}
                          destroy:
                            objs: {}
                        response:
                          update:
                            objs:
                              662917f1-ae9f-47a5-b33f-fff43e3125fe:
                                name: A paged array of pets
                                diff:
                                  headers:
                                    from:
                                      - key: x-next
                                        value: <string>
                                        description: A link to the next page of responses
                                      - key: Content-Type
                                        value: application/json
                                    to:
                                      - key: x-next
                                        value: <string>
                                        description: A link to the next page of responses
                                  text:
                                    from: |-
                                      [
                                       {
                                        "id": "<long>",
                                        "name": "<string>",
                                        "tag": "<string>"
                                       },
                                       {
                                        "id": "<long>",
                                        "name": "<string>",
                                        "tag": "<string>"
                                       }
                                      ]
                                    to: >-
                                      [{"id":-20483028,"name":"<string>","tag":"<string>"},{"id":22536007,"name":"<string>","tag":"<string>"}]
                              81da2915-0dac-4d14-8002-c5765ab5a7bc:
                                name: unexpected error
                                diff:
                                  headers:
                                    from:
                                      - key: Content-Type
                                        value: application/json
                                    to: []
                                  text:
                                    from: |-
                                      {
                                       "code": "<integer>",
                                       "message": "<string>"
                                      }
                                    to: '{"code":-80303703,"message":"<string>"}'
                              71719ca5-7ae5-4032-8603-a66002be5a0b:
                                name: unexpected error
                                diff:
                                  headers:
                                    from:
                                      - key: Content-Type
                                        value: application/json
                                    to: []
                                  text:
                                    from: |-
                                      {
                                       "code": "<integer>",
                                       "message": "<string>"
                                      }
                                    to: '{"code":-80303703,"message":"<string>"}'
                              d80807c9-b419-4833-943e-0700097785a8:
                                name: Null response
                                diff:
                                  headers:
                                    from:
                                      - key: Content-Type
                                        value: text/plain
                                    to: []
                              24e27af5-22b2-466a-a3a8-0a5eb3f35666:
                                name: unexpected error
                                diff:
                                  headers:
                                    from:
                                      - key: Content-Type
                                        value: application/json
                                    to: []
                                  text:
                                    from: |-
                                      {
                                       "code": "<integer>",
                                       "message": "<string>"
                                      }
                                    to: '{"code":-80303703,"message":"<string>"}'
                              52296c93-606c-4bb0-8fcd-9f76d93e5dd2:
                                name: Expected response to a valid request
                                diff:
                                  headers:
                                    from:
                                      - key: Content-Type
                                        value: application/json
                                    to: []
                                  text:
                                    from: |-
                                      {
                                       "id": "<long>",
                                       "name": "<string>",
                                       "tag": "<string>"
                                      }
                                    to: >-
                                      {"id":-28263921,"name":"<string>","tag":"<string>"}
          description: Update validations
          headers:
            Date:
              schema:
                type: string
                format: style
              example: Fri, 12 Jun 2020 07:15:20 GMT
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=f95ad94ac07dc469
            x-srv-span:
              schema:
                type: string
              example: v=1;s=8f0446bc7d95bb9e
            ETag:
              schema:
                type: string
              example: W/"e5b-xLEvtaq3qw5pVrMQk+GkTA"
            Content-Encoding:
              schema:
                type: string
              example: gzip
    put:
      tags:
        - Validation
      summary: Update validations
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiId}}'
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiVersionId}}'
        - name: entityType
          in: path
          schema:
            type: string
          required: true
          example: '{{entityType}}'
        - name: entityId
          in: path
          schema:
            type: string
          required: true
          example: '{{entityId}}'
        - name: x-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                updates:
                  type: object
                  required:
                    - requests
                    - responses
                  properties:
                    requests:
                      type: array
                      items:
                        type: object
                        required:
                          - id
                          - fieldsToBeUpdated
                        properties:
                          id:
                            type: string
                          fieldsToBeUpdated:
                            type: string
                    responses:
                      type: array
                      items:
                        type: object
                        required:
                          - id
                          - fieldsToBeUpdated
                        properties:
                          id:
                            type: string
                          fieldsToBeUpdated:
                            type: string
                destroys:
                  type: object
                  required:
                    - requests
                    - responses
                  properties:
                    requests:
                      type: array
                      items:
                        type: string
                    responses:
                      type: array
                      items:
                        type: string
            example:
              updates:
                requests:
                  - id: <RequestId> (required)
                    fieldsToBeUpdated: Value
                responses:
                  - id: <Response Id> (required)
                    fieldsToBeUpdated: Value
              destroys:
                requests:
                  - Array of request ids
                responses:
                  - Array of response ids
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    nullable: true
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - link
                    properties:
                      link:
                        type: object
                        required:
                          - view_updated_collection
                        properties:
                          view_updated_collection:
                            type: object
                            required:
                              - url
                            properties:
                              url:
                                type: string
                                format: uri
                  revision:
                    type: string
                    nullable: true
              example:
                model_id: null
                meta:
                  model: validation
                  action: updateRelation
                data:
                  link:
                    view_updated_collection:
                      url: >-
                        https://go.postman-beta.co/collections/510747-4db39d40-9688-402b-a6e3-b41d4fd7724c
                revision: null
          description: Update validations
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Fri, 12 Jun 2020 07:15:20 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=b53bd52e307bfb3c
            x-srv-span:
              schema:
                type: string
              example: v=1;s=3114e06b92d522d5
            ETag:
              schema:
                type: string
              example: W/"e2-HgCZW+4jqGVzHIGh0h2FDw"
            Content-Encoding:
              schema:
                type: string
              example: gzip
        default:
          content:
            application/json:
              schema:
                type: string
                nullable: true
              example: null
          description: Accept all updates
  /:
    get:
      tags:
        - All APIs in a Workspace Subscription Events
      summary: Get API linked to a collection
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                      - subscription
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
                  data:
                    type: object
              example:
                model_id: '{{apiId}}'
                meta:
                  model: api
                  action: updateRoles
                  subscription:
                    id: 'apis/{{apiId}}'
                data: {}
          description: Roles on the API Updated
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                      - subscription
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
                  data:
                    type: object
                    required:
                      - api
                      - apiId
                      - apiVersion
                      - apiVersionId
                      - createdAt
                      - createdBy
                      - description
                      - id
                      - isEditable
                      - name
                      - schema
                      - summary
                      - team
                      - type
                      - updatedAt
                      - updatedBy
                      - workspace
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      summary:
                        type: string
                      updatedAt:
                        type: string
                      createdAt:
                        type: string
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                      description:
                        type: string
                      team:
                        type: string
                      api:
                        type: object
                        required:
                          - createdAt
                          - id
                          - name
                          - updatedAt
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
                      apiVersion:
                        type: object
                        required:
                          - createdAt
                          - id
                          - name
                          - updatedAt
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          createdAt:
                            type: string
                          updatedAt:
                            type: string
                      schema:
                        type: object
                        required:
                          - id
                          - updatedAt
                          - createdAt
                          - createdBy
                          - updatedBy
                          - schema
                        properties:
                          id:
                            type: string
                          updatedAt:
                            type: string
                          createdAt:
                            type: string
                          createdBy:
                            type: string
                          updatedBy:
                            type: string
                          schema:
                            type: string
              examples:
                Example1:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: api
                      action: create
                      subscription:
                        id: 'workspace/{{workspaceId}}/apis'
                    data:
                      id: '{{apiId}}'
                      name: '{{apiName}}'
                      summary: '{{apiSummary}}'
                      updatedAt: '{{updatedAt}}'
                      createdAt: '{{createdAt}}'
                      createdBy: '{{createdBy}}'
                      updatedBy: '{{updatedBy}}'
                      description: '{{description}}'
                Example2:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: api
                      action: destroy
                      subscription:
                        id: 'workspace/{{workspaceId}}/apis'
                    data:
                      id: '{{apiId}}'
                Example3:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: api
                      action: addedToWorkspace
                      subscription:
                        id: 'workspace/{{workspaceId}}/apis'
                    data:
                      id: '{{apiId}}'
                      team: '{{teamId}}'
                      workspace: '{{workspaceId}}'
                      isEditable: true/false
                Example4:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: api
                      action: removedFromWorkspace
                      subscription:
                        id: 'workspace/{{workspaceId}}/apis'
                    data:
                      id: '{{apiId}}'
                      workspace: '{{workspaceId}}'
                Example5:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: api
                      action: update
                      subscription:
                        id: 'apis/{{apiId}}'
                    data:
                      id: '{{apiId}}'
                      name: '{{name}}'
                      summary: '{{summary}}'
                      description: '{{description}}'
                      updatedBy: '{{updatedBy}}'
                      updatedAt: '{{updatedAt}}'
                Example6:
                  value:
                    model_id: '{{apiVersionId}}'
                    meta:
                      model: apiversion
                      action: create
                      subscription:
                        id: 'apis/{{apiId}}'
                    data:
                      api: '{{apiId}}'
                      name: '{{apiVersionName}}'
                      id: '{{apiVersionId}}'
                      createdBy: '{{createdBy}}'
                      updatedBy: '{{updatedBy}}'
                      createdAt: '{{createdAt}}'
                      updatedAt: '{{updatedAt}}'
                Example7:
                  value:
                    model_id: '{{apiVersionId}}'
                    meta:
                      model: apiversion
                      action: destroy
                      subscription:
                        id: 'apis/{{apiId}}'
                    data:
                      api: '{{apiId}}'
                      id: '{{apiVersionId}}'
                Example8:
                  value:
                    model_id: '{{schemaId}}'
                    meta:
                      model: schema
                      action: create
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}'
                    data:
                      api: '{{apiId}}'
                      apiVersion: '{{apiVersionId}}'
                      id: '{{schemaId}}'
                Example9:
                  value:
                    model_id: '{{schemaId}}'
                    meta:
                      model: schema
                      action: update
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}'
                    data:
                      id: '{{schemaId}}'
                      api: '{{apiId}}'
                      apiVersion: '{{apiVersionId}}'
                Example10:
                  value:
                    model_id: '{{apiVersionId}}'
                    meta:
                      model: apiversion
                      action: update
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}'
                    data:
                      api: '{{apiId}}'
                      name: '{{apiVersionName}}'
                      id: '{{apiVersionId}}'
                      updatedBy: '{{updatedBy}}'
                      updatedAt: '{{updatedAt}}'
                Example11:
                  value:
                    model_id: '{{relationId}}'
                    meta:
                      model: relation
                      action: update
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}'
                    data:
                      type: '{{relationType}}'
                      api: '{{apiId}}'
                      apiVersion: '{{apiVersionId}}'
                Example12:
                  value:
                    model_id: '{{relationId}}'
                    meta:
                      model: relation
                      action: update
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}'
                    data:
                      type: '{{relationType}}'
                      api: '{{apiId}}'
                      apiVersion: '{{apiVersionId}}'
                Example13:
                  value:
                    model_id: '{{relationId}}'
                    meta:
                      model: relation
                      action: remove
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}'
                    data:
                      type: '{{relationType}}'
                      api: '{{apiId}}'
                      apiVersion: '{{apiVersionId}}'
                Example14:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: api
                      action: update
                      subscription:
                        id: 'collections/{{collectionidUid}}/apis'
                    data:
                      api:
                        id: apiId
                        name: apiname
                        createdAt: '{{createdAt}}'
                        updatedAt: '{{updatedAt}}'
                Example15:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: api
                      action: link
                      subscription:
                        id: 'collections/{{collectionidUid}}/apis'
                    data:
                      api:
                        id: apiId
                        name: apiname
                        createdAt: '{{createdAt}}'
                        updatedAt: '{{updatedAt}}'
                      apiVersion:
                        id: apiVersionId
                        name: api version name
                        createdAt: '{{createdAt}}'
                        updatedAt: '{{updatedAt}}'
                Example16:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: api
                      action: unlink
                      subscription:
                        id: 'collections/{{collectionidUid}}/apis'
                    data:
                      api:
                        id: '{{modelId}}'
                Example17:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: apiVersion
                      action: create
                      subscription:
                        id: 'collections/{{collectionidUid}}/apis'
                    data:
                      apiVersion:
                        id: apiId
                        name: api version name
                        createdAt: '{{createdAt}}'
                        updatedAt: '{{updatedAt}}'
                      api:
                        id: apiId
                Example18:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: apiVersion
                      action: update
                      subscription:
                        id: 'collections/{{collectionidUid}}/apis'
                    data:
                      apiVersion:
                        id: apiId
                        name: apiname
                        createdAt: '{{createdAt}}'
                        updatedAt: '{{updatedAt}}'
                      api:
                        id: '{{apiId}}'
                Example19:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: apiVersion
                      action: destroy
                      subscription:
                        id: 'collections/{{collectionidUid}}/apis'
                    data:
                      apiVersion:
                        id: '{{apiVersionId}}'
                      api:
                        id: '{{apiId}}'
                Example20:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: schema
                      action: link
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}/schema'
                    data:
                      schema:
                        id: '{{schemaId}}'
                        updatedAt: '{{updatedAt}}'
                        createdAt: '{{createdAt}}'
                        createdBy: '{{createdBy}}'
                        updatedBy: '{{updatedBy}}'
                        schema: '{{schema}}'
                      apiId: '{{apiId}}'
                      apiVersionId: '{{apiVersionId}}'
                Example21:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: schema
                      action: update
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}/schema'
                    data:
                      schema:
                        id: '{{schemaId}}'
                        updatedAt: '{{updatedAt}}'
                        createdAt: '{{createdAt}}'
                        createdBy: '{{createdBy}}'
                        updatedBy: '{{updatedBy}}'
                        schema: '{{schema}}'
                      apiId: '{{apiId}}'
                      apiVersionId: '{{apiVersionId}}'
                Example22:
                  value:
                    model_id: '{{apiId}}'
                    meta:
                      model: schema
                      action: unlink
                      subscription:
                        id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}/schema'
                    data:
                      schema: {}
                      apiId: '{{apiId}}'
                      apiVersionId: '{{apiVersionId}}'
          description: API Created
      servers:
        - url: undefined
  /apis/{apiId}/versions/{apiVersionId}/schemas/subscribe:
    post:
      tags:
        - Collection
      summary: Subscribe to schema events for a collection
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - subscription
                    properties:
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              example:
                meta:
                  model: collection
                  action: subscribeSchema
                data:
                  subscription:
                    id: 'apis/{{apiId}}/apiversions/{{apiVersionId}}/schema'
          description: >-
            Subscribe to schema events for a collection when not linked to a
            collection
  /apis/{apiId}/versions/{apiVersionId}/schema/subscribe:
    delete:
      tags:
        - Collection
      summary: UnSubscribe to schema events for a collection
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
              example:
                meta:
                  model: collection
                  action: unsubscribeSchema
                data: {}
          description: Subscribe to schema events for a collection
  /x/apis:
    get:
      tags:
        - API
      summary: Get API and API Version for Relation
      parameters:
        - name: relationType
          in: query
          schema:
            type: string
          description: >-
            Supports non-collection relation types - schema, mock, monitor,
            environment
          example: '{{relationType}}'
        - name: relationId
          in: query
          schema:
            type: string
          description: >-
            ID of the entity which is a relation e.g. schemaId, mockId,
            monitorId etc
          example: '{{relationId}}'
        - name: X-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    nullable: true
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - createdAt
                      - updatedAt
                      - createdBy
                      - updatedBy
                      - apiVersion
                    nullable: true
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      createdBy:
                        type: string
                      updatedBy:
                        type: string
                      apiVersion:
                        type: object
                        required:
                          - api
                          - id
                          - name
                          - createdAt
                          - updatedAt
                          - createdBy
                          - updatedBy
                        properties:
                          api:
                            type: string
                          id:
                            type: string
                          name:
                            type: string
                          createdAt:
                            type: string
                            format: date-time
                          updatedAt:
                            type: string
                            format: date-time
                          createdBy:
                            type: string
                          updatedBy:
                            type: string
              examples:
                Example1:
                  value:
                    model_id: 85129485-9433-4a72-ab4e-4117cb1e1ef0
                    meta:
                      model: api
                      action: find
                    data:
                      id: 1afb3a16-e282-46da-a3a3-941fb324d43f
                      name: some api
                      createdAt: '2021-07-29T10:21:27.000Z'
                      updatedAt: '2021-07-28T10:21:27.000Z'
                      createdBy: U1
                      updatedBy: U1
                      apiVersion:
                        api: 1afb3a16-e282-46da-a3a3-941fb324d43f
                        id: bc9d0e64-dda4-4792-85f3-95ec0cc7834e
                        name: Draft
                        createdAt: '2021-07-29T10:21:27.000Z'
                        updatedAt: '2021-07-29T10:21:27.000Z'
                        createdBy: U1
                        updatedBy: U1
                Example2:
                  value:
                    model_id: 1afb3a16-e282-46da-a3a3-941fb324d43f
                    meta:
                      model: api
                      action: find
                    data:
                      id: 1afb3a16-e282-46da-a3a3-941fb324d43f
                      name: some api
                      createdAt: '2021-07-29T10:21:27.000Z'
                      updatedAt: '2021-07-28T10:21:27.000Z'
                      createdBy: U1
                      updatedBy: U1
                      apiVersion:
                        api: 1afb3a16-e282-46da-a3a3-941fb324d43f
                        id: bc9d0e64-dda4-4792-85f3-95ec0cc7834e
                        name: Draft
                        createdAt: '2021-07-29T10:21:27.000Z'
                        updatedAt: '2021-07-29T10:21:27.000Z'
                        createdBy: U1
                        updatedBy: U1
                Example3:
                  value:
                    model_id: null
                    meta:
                      model: api
                      action: find
                    data: null
          description: Response for Schema Type
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - type
                          - uid
                        properties:
                          type:
                            type: string
                          uid:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: invalidRelationTypeError
                      message: The provided relation type is invalid.
                      details:
                        type: qwhqiuuh
                Example2:
                  value:
                    error:
                      name: invalidUIDError
                      message: The ID provided is not a valid UID.
                      details:
                        uid: euthi3uh4ivh
          description: 'Validation: Relation Type is not valid'
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                            format: color
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the relation you are looking for
                  details:
                    model: relation
                    model_id: '123'
                    owner: '610363'
          description: Relation Not Found
          headers:
            Date:
              schema:
                type: string
                format: style
              example: 'Fri, 06 Aug 2021 10:14:49 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            Server:
              schema:
                type: string
              example: nginx
            Vary:
              schema:
                type: string
              example: Origin
            Access-Control-Allow-Credentials:
              schema:
                type: boolean
              example: true
            X-DNS-Prefetch-Control:
              schema:
                type: string
              example: 'off'
            X-Frame-Options:
              schema:
                type: string
              example: DENY
            Strict-Transport-Security:
              schema:
                type: string
              example: max-age=15552000; includeSubDomains
            X-Download-Options:
              schema:
                type: string
              example: noopen
            X-Content-Type-Options:
              schema:
                type: string
              example: nosniff
            Referrer-Policy:
              schema:
                type: string
              example: same-origin
            X-XSS-Protection:
              schema:
                type: string
              example: 1; mode=block
            Content-Encoding:
              schema:
                type: string
              example: gzip
      servers:
        - url: 'https://api-dev-platform.postman.tech'
  /x/apis/{apiId}:
    get:
      tags:
        - API
      summary: Get an API
      description: This endpoint returns an API with the provided id.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: user_id
          in: query
          schema:
            type: string
          example: '{{user_id}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - createdBy
                      - id
                      - name
                      - summary
                      - description
                      - createdAt
                      - updatedAt
                    properties:
                      createdBy:
                        type: string
                        format: utc-millisec
                      updatedBy:
                        type: string
                        format: utc-millisec
                      team:
                        type: string
                        nullable: true
                      id:
                        type: string
                      name:
                        type: string
                      summary:
                        type: string
                      description:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      versions:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: string
                            name:
                              type: string
                            relations:
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - model
                                  - type
                                  - modelId
                                properties:
                                  id:
                                    type: string
                                  model:
                                    type: string
                                  type:
                                    type: string
                                  modelId:
                                    type: string
                            schemas:
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - type
                                  - language
                                properties:
                                  id:
                                    type: string
                                  type:
                                    type: string
                                  language:
                                    type: string
              examples:
                Example1:
                  value:
                    model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    meta:
                      model: api
                      action: findone
                    data:
                      createdBy: '7732157'
                      updatedBy: '7732157'
                      team: null
                      id: 8fe00285-9991-455a-a8dc-af3115d3db24
                      name: Sync Pen test
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2020-05-13T18:49:31.000Z'
                      updatedAt: '2020-05-13T19:01:31.000Z'
                      versions:
                        - id: 559da235-7d58-460a-ac17-7431e6304c94
                          name: 1.0.0
                          relations:
                            - id: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                              model: environment
                              type: environment
                              modelId: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                            - id: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                              model: environment
                              type: environment
                              modelId: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                            - id: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                              model: environment
                              type: environment
                              modelId: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                            - id: 7681c25b-5c50-44a6-8724-fe1e71550160
                              model: mock
                              type: mock
                              modelId: 7681c25b-5c50-44a6-8724-fe1e71550160
                            - id: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                              model: monitor
                              type: monitor
                              modelId: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                            - id: 5b32caea-903c-472e-81a2-2cb054ede666
                              model: collection
                              type: documentation
                              modelId: 7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            - id: 35c6bdbd-d602-4b37-9c87-1640fc8025c8
                              model: collection
                              type: integrationtest
                              modelId: 7732157-6537c169-8d02-413f-94f3-4dda79355a90
                            - id: b26bc935-7422-4f73-8d03-9bf212fb48ba
                              model: collection
                              type: testsuite
                              modelId: 7732157-37350b62-41f3-428a-8bd5-fec517bb4f43
                            - id: bb69b435-a90a-44fe-aa49-f580eeb1be88
                              model: collection
                              type: contracttest
                              modelId: 7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac
                Example2:
                  value:
                    model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    meta:
                      model: api
                      action: findone
                    data:
                      createdBy: '7732157'
                      updatedBy: '7732157'
                      team: null
                      id: 8fe00285-9991-455a-a8dc-af3115d3db24
                      name: Sync Pen test
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2020-05-13T18:49:31.000Z'
                      updatedAt: '2020-05-13T19:01:31.000Z'
                      versions:
                        - id: 559da235-7d58-460a-ac17-7431e6304c94
                          name: 1.0.0
                          schemas:
                            - id: e2b2dd33-6261-4ba7-b6a8-cc21b633c101
                              type: openapi3
                              language: yaml
                          relations:
                            - id: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                              model: environment
                              type: environment
                              modelId: 7732157-f27041a1-1e05-4f63-a81d-31107364e640
                            - id: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                              model: environment
                              type: environment
                              modelId: 7732157-f1719ffd-a4f1-4584-9be9-a73bcefe502d
                            - id: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                              model: environment
                              type: environment
                              modelId: 7732157-f2924ed2-5406-4a73-bb80-39a113545cb9
                            - id: 7681c25b-5c50-44a6-8724-fe1e71550160
                              model: mock
                              type: mock
                              modelId: 7681c25b-5c50-44a6-8724-fe1e71550160
                            - id: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                              model: monitor
                              type: monitor
                              modelId: 1ea954a7-ad6d-46c0-b8e7-552c5334c253
                            - id: 5b32caea-903c-472e-81a2-2cb054ede666
                              model: collection
                              type: documentation
                              modelId: 7732157-7c63b47c-6e7f-40a4-b6b6-4db6bda35cf4
                            - id: b26bc935-7422-4f73-8d03-9bf212fb48ba
                              model: collection
                              type: testsuite
                              modelId: 7732157-37350b62-41f3-428a-8bd5-fec517bb4f43
                            - id: 35c6bdbd-d602-4b37-9c87-1640fc8025c8
                              model: collection
                              type: integrationtest
                              modelId: 7732157-6537c169-8d02-413f-94f3-4dda79355a90
                            - id: bb69b435-a90a-44fe-aa49-f580eeb1be88
                              model: collection
                              type: contracttest
                              modelId: 7732157-38f1a479-3175-40c6-8b76-9b151f04d7ac
                Example3:
                  value:
                    model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    meta:
                      model: api
                      action: findone
                    data:
                      createdBy: '7732157'
                      updatedBy: '7732157'
                      team: null
                      id: 8fe00285-9991-455a-a8dc-af3115d3db24
                      name: Sync Pen test
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2020-05-13T18:49:31.000Z'
                      updatedAt: '2020-05-13T19:01:31.000Z'
                      versions:
                        - id: 559da235-7d58-460a-ac17-7431e6304c94
                          name: 1.0.0
                Example4:
                  value:
                    model_id: 8fe00285-9991-455a-a8dc-af3115d3db24
                    meta:
                      model: api
                      action: findone
                    data:
                      createdBy: '7732157'
                      updatedBy: '7732157'
                      team: null
                      id: 8fe00285-9991-455a-a8dc-af3115d3db24
                      name: Sync Pen test
                      summary: This is supposed to be a short summary.
                      description: This is supposed to handle markdown *descriptions*.
                      createdAt: '2020-05-13T18:49:31.000Z'
                      updatedAt: '2020-05-13T19:01:31.000Z'
                      versions:
                        - id: 559da235-7d58-460a-ac17-7431e6304c94
                          name: 1.0.0
                          schemas:
                            - id: e2b2dd33-6261-4ba7-b6a8-cc21b633c101
                              type: openapi3
                              language: yaml
                Example5:
                  value:
                    model_id: 387c2863-6ee3-4a56-8210-225f774edade
                    meta:
                      model: api
                      action: find
                    data:
                      id: 387c2863-6ee3-4a56-8210-225f774edade
                      name: Sync API
                      summary: This is a summary
                      description: >-
                        This is a description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.This is a
                        description.This is a description.
                      createdBy: '5665'
                      createdAt: '2019-02-12 19:34:49'
                      updatedAt: '2019-02-12 19:34:49'
          description: Get an API with version and relation without schema
          headers:
            Server:
              schema:
                type: string
              example: nginx
            Date:
              schema:
                type: string
                format: style
              example: 'Wed, 13 May 2020 19:06:04 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=316b2ff795ad0a46
            x-srv-span:
              schema:
                type: string
              example: v=1;s=fbff419242e20a27
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"24f-zsrnkmp37EXZ/5LZl2tzrg"
            Vary:
              schema:
                type: string
              example: Accept-Encoding
            Content-Encoding:
              schema:
                type: string
              example: gzip
      security:
        - securityScheme1: []
    delete:
        tags:
          - API
        summary: Delete API without access token
        description: >-
          This endpoint will allow services to delete APIs on behalf of a user when
          the access token is not available for making this call.
          Right now we'd only allow workspace-service to use this endpoint for their
          background processing of workspace deletion.
        parameters:
          - name: apiId
            in: path
            schema:
              type: string
            required: true

          - name: user_id
            description: >-
                It should be the id of the user on whose behalf the request is being made
            in: query
            schema:
                type: string
            required: true

          - name: x-postman-service
            description: >-
                This is the service identifier from which service this endpoint is being called.
                For now we'll only allow workspaces service to consume this endpoint 
            in: header
            schema:
                type: string
            required: true
        responses:
          '200':
            description: Successfully deleted API
            content:
              application/json:
                schema:
                    type: object
                    properties:
                        model_id:
                            type: string
                        meta:
                            type: object
                            properties:
                                model:
                                    type: string
                                action:
                                    type: string
                            required:
                              - model
                              - action
                        data:
                            type: object
                            properties:
                                id:
                                  type: string
                            required:
                              - id
                    required:
                      - model_id
                      - data
                      - meta
          '403':
            description: >-
              This could be thrown for multiple reasons: 
              1. Service is not allowed to call this endpoint
              2. user_id provided does not have permission to delete the API
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        name:
                          type: string
                        message:
                          type: string
                        details:
                          type: object
                          properties:
                            service:
                              type: string
                          required:
                            - service
                      required:
                        - name
                        - message
                        - details
                  required:
                    - error
          '404':
            description: This error will be thrown if the provided API id is not found in the database
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        name:
                          type: string
                        message:
                          type: string
                        details:
                          type: object
                          properties:
                            service:
                              type: string
                          required:
                            - service
                      required:
                        - name
                        - message
                        - details
                  required:
                    - error
          '400':
            description: >-
              Bad request errors can be thrown in case
              if the user_id query parameter is not passed
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        name:
                          type: string
                        message:
                          type: string
                        details:
                          type: object
                          properties:
                            service:
                              type: string
                          required:
                            - service
                      required:
                        - name
                        - message
                        - details
                  required:
                    - error
  /x/apis/{apiId}/versions/{apiVersionId}/relations:
    post:
      tags:
        - Relations
      summary: Link a Schema with an API Version
      description: >-
        This endpoint will allow you to add any of the following entities to the
        specified API Version.


        The `versionTag` field is optional, which means if you don't specify
        any, this will go ahead and link the HEAD/Current state of the
        collection. (Note: This behaviour can change based on what is required
        by product)
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                        format: color
                  data:
                    type: object
                    required:
                      - id
                      - model
                      - modelId
                      - versionTag
                    properties:
                      id:
                        type: string
                      model:
                        type: string
                      modelId:
                        type: string
                      versionTag:
                        type: string
                        nullable: true
              examples:
                Example1:
                  value:
                    model_id: fc64d1fe-b6aa-444c-a414-3367bed54064
                    meta:
                      model: schema
                      action: add
                    data:
                      id: fc64d1fe-b6aa-444c-a414-3367bed54064
                      model: schema
                      modelId: fc64d1fe-b6aa-444c-a414-3367bed54064
                      versionTag: null
                Example2:
                  value:
                    model_id: fc64d1fe-b6aa-444c-a414-3367bed54064
                    meta:
                      model: schema
                      action: add
                    data:
                      id: fc64d1fe-b6aa-444c-a414-3367bed54064
                      model: schema
                      modelId: fc64d1fe-b6aa-444c-a414-3367bed54064
                      versionTag: null
          description: 'Success: Link an existing schema with an API Version'
  /x/events:
    post:
      tags:
        - Internal
      summary: Model Events
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                    nullable: true
                  meta:
                    type: object
                    required:
                      - service
                      - action
                      - event
                    properties:
                      service:
                        type: string
                      action:
                        type: string
                      event:
                        type: object
                        required:
                          - model
                          - action
                        properties:
                          model:
                            type: string
                          action:
                            type: string
                  data:
                    type: object
                    required:
                      - success
                    properties:
                      success:
                        type: boolean
              examples:
                Example1:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: collectionrun
                        action: create/destroy
                    data:
                      success: true
                Example2:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: environment
                        action: destroy
                    data:
                      success: true
                Example3:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: api
                        action: addedToWorkspace
                    data:
                      success: true
                Example4:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: api
                        action: removedFromWorkspace
                    data:
                      success: true
                Example5:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: api
                        action: updatePublishedStatus
                    data:
                      success: true
                Example6:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: api
                        action: unpublish
                    data:
                      success: true
                Example7:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: mock
                        action: destroy
                    data:
                      success: true
                Example8:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: monitor
                        action: destroy
                    data:
                      success: true
                Example9:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: mock
                        action: update
                    data:
                      success: true
                Example10:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: monitor
                        action: update
                    data:
                      success: true
                Example11:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: versionTag
                        action: destroy
                    data:
                      success: true
                Example12:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: collection
                        action: update
                    data:
                      success: true
                Example13:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: collection
                        action: destroy
                    data:
                      success: true
                Example14:
                  value:
                    model_id: null
                    meta:
                      service: api-dev-platform
                      action: handleModelEvent
                      event:
                        model: schema
                        action: destroy
                    data:
                      success: true
          description: CollectionRun Create/ Destroy
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - service
                      - action
                      - event
                    properties:
                      service:
                        type: string
                      action:
                        type: string
                      event:
                        type: object
                        required:
                          - model
                          - action
                        properties:
                          model:
                            type: string
                          action:
                            type: string
                  data:
                    type: object
                    required:
                      - success
                    properties:
                      success:
                        type: boolean
              example:
                model_id: eb4c6a70-92f6-4236-94f9-d8a9da92d2d7
                meta:
                  service: api-dev-platform
                  action: handleModelEvent
                  event:
                    model: schema
                    action: update
                data:
                  success: true
          description: Schema Update
      security:
        - securityScheme1: []
  /x/apis/{apiId}/versions/{apiVersionId}/{entityType}:
    get:
      tags:
        - Internal
      summary: Get IDs of the linked relations in an API Version
      description: >-
        The `relationType` can be either of `mock` or `monitor`. More will be
        supported later.
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: entityType
          in: path
          schema:
            type: string
          required: true
        - name: user_id
          in: query
          schema:
            type: string
          example: '{{userId}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - mock
                      - monitor
                    properties:
                      mock:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                          properties:
                            id:
                              type: string
                      monitor:
                        type: array
                        items:
                          type: object
                          required:
                            - id
                            - name
                          properties:
                            id:
                              type: string
                            name:
                              type: string
              examples:
                Example1:
                  value:
                    model_id: '{{apiVersionId}}'
                    meta:
                      model: apiversion
                      action: getLinkedRelationsForType
                    data:
                      mock:
                        - id: ''
                        - id: ''
                Example2:
                  value:
                    model_id: 103eccbe-6a4e-4ee9-a498-169885976f87
                    meta:
                      model: apiversion
                      action: getLinkedRelationsForType
                    data:
                      monitor:
                        - id: 103eccbe-6a4e-4ee9-a498-169885976f21
                          name: Monitor 1
                        - id: 103eccbe-6a4e-4ee9-a498-169885976f23
                          name: Monitor2
          description: Get IDs of the linked mocks in an API Version
      security:
        - securityScheme1: []
  /x/apiversions/{id}:
    get:
      tags:
        - Internal
      summary: '[Internal] Find API Version by ID'
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: '{{apiVersionId}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - api
                      - id
                      - name
                      - summary
                      - stage
                      - visibility
                      - createdBy
                      - updatedBy
                      - repositoryIntegration
                      - lastRevision
                      - transactionId
                      - createdAt
                      - updatedAt
                    properties:
                      api:
                        type: string
                      id:
                        type: string
                      name:
                        type: string
                      summary:
                        type: string
                        nullable: true
                      stage:
                        type: string
                      visibility:
                        type: string
                        nullable: true
                      createdBy:
                        type: string
                        format: color
                      updatedBy:
                        type: string
                        format: color
                      repositoryIntegration:
                        type: string
                        nullable: true
                      lastRevision:
                        type: string
                        nullable: true
                      transactionId:
                        type: string
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
              example:
                model_id: 14d467d2-5e1e-4b8a-b97e-aa485d54f738
                meta:
                  model: apiVersion
                  action: findById
                data:
                  api: 8be2e1e7-f6e0-4705-9f17-e06304729456
                  id: 14d467d2-5e1e-4b8a-b97e-aa485d54f738
                  name: v2
                  summary: null
                  stage: Planning
                  visibility: null
                  createdBy: '460493'
                  updatedBy: '460493'
                  repositoryIntegration: null
                  lastRevision: null
                  transactionId: e60f9a02-94be-4791-9ff9-263c02486b3d
                  createdAt: '2021-07-28T06:00:15.000Z'
                  updatedAt: '2021-07-28T06:00:15.000Z'
          description: '[Internal] Find API Version by ID'
          headers:
            Server:
              schema:
                type: string
              example: nginx
            Date:
              schema:
                type: string
                format: style
              example: 'Wed, 28 Jul 2021 06:04:47 GMT'
            Transfer-Encoding:
              schema:
                type: string
              example: chunked
            Connection:
              schema:
                type: string
              example: keep-alive
            strict-transport-security:
              schema:
                type: string
              example: max-age=63072000; includeSubDomains
            x-srv-trace:
              schema:
                type: string
              example: v=1;t=98819941aef986a9
            x-srv-span:
              schema:
                type: string
              example: v=1;s=7f9b852cb70b7e5e
            Access-Control-Allow-Origin:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Credentials:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Methods:
              schema:
                type: string
              example: ''
            Access-Control-Allow-Headers:
              schema:
                type: string
              example: ''
            Access-Control-Expose-Headers:
              schema:
                type: string
              example: ''
            ETag:
              schema:
                type: string
              example: W/"1e7-3Rx0wFAMBDN9BKqQDvfbuA"
            Content-Encoding:
              schema:
                type: string
              example: gzip
  /x/versionTag/{id}:
    post:
      tags:
        - Internal
      summary: Link relations on version tag create
      parameters:
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: '{{versionTagId}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                apiVersionId:
                  type: string
                collectionId:
                  type: string
                relations:
                  type: array
                  items:
                    type: object
                    required:
                      - type
                    properties:
                      type:
                        type: string
            example:
              apiVersionId: '{{apVersionId}}'
              collectionId: '{{collectionUID}}'
              relations:
                - type: integrationtest
      responses:
        default:
          content:
            text/plain:
              schema:
                type: string
          description: Link relations on version tag create
      servers:
        - url: undefined
  /apis/{apiId}/versions/{id}/repository/changes:
    post:
      tags:
        - Git Integration
      summary: Push changes to the linked repository
      description: >-
        This endpoint will allow you to add any of the following entities to the
        specified API Version.


        The `versionTag` field is optional, which means if you don't specify
        any, this will go ahead and link the HEAD/Current state of the
        collection. (Note: This behaviour can change based on what is required
        by product)
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: branch
          in: query
          schema:
            type: string
          example: develop
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commitMessage:
                  type: string
            example:
              commitMessage: ''
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - name
                          - details
                          - message
                          - code
                        properties:
                          name:
                            type: string
                          details:
                            type: string
                          message:
                            type: string
                          code:
                            type: integer
              example:
                error:
                  name: serverError
                  message: Something went wrong with the server.
                  details:
                    name: githubConflictError
                    details: Conflicts encountered at Github.
                    message: Update is not a fast forward
                    code: 409
          description: 200 Successfully pushed changes to the linked repository
    get:
      tags:
        - Git Integration
      summary: Pull changes from the linked repository
      description: >-
        This endpoint will allow you to add any of the following entities to the
        specified API Version.


        The `versionTag` field is optional, which means if you don't specify
        any, this will go ahead and link the HEAD/Current state of the
        collection. (Note: This behaviour can change based on what is required
        by product)
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
          example: 42da2d27-a338-46b5-982d-92d7f6dff499
        - name: id
          in: path
          schema:
            type: string
          required: true
          example: 3c3cc6cc-8e92-4698-ac98-c8ef8532a684
        - name: branch
          in: query
          schema:
            type: string
          example: develop
        - name: commit
          in: query
          schema:
            type: string
          example: '{{commit}}'
        - name: ':apiI'
          in: query
          schema:
            type: string
          example: ''
        - name: X-Access-Token
          in: header
          schema:
            type: string
          example: >-
            5764df78e25ea5bf71ab419a9740439fd0e53180fc8a9ea9ebada5d274b24ae1a3d3be1a9ce2cc9574f640a572e8844dfb1a5769adc2a5cef99f012a56da2fac
      requestBody:
        content:
          application/json:
            schema:
              type: string
              nullable: true
            example: null
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: resourceNotFoundError
                  message: The specified request could not be found on Github.
          description: 200 Successfully pulled changes to the linked repository Copy
  /apis/{apiId}/versions/{apiVersionId}/repository/accepted-changes:
    post:
      tags:
        - Git Integration
      summary: Accept Pull changes from the linked repository Copy
      description: >-
        This endpoint will allow you to add any of the following entities to the
        specified API Version.


        The `versionTag` field is optional, which means if you don't specify
        any, this will go ahead and link the HEAD/Current state of the
        collection. (Note: This behaviour can change based on what is required
        by product)
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: workspace
          in: query
          schema:
            type: string
          example: '{{workspaceId}}'
        - name: branch
          in: query
          schema:
            type: string
          example: develop
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: 200 Successfully pulled changes to the linked repository
  /apis/{apiId}/versions/{apiVersionId}/repository:
    post:
      tags:
        - Git Integration
      summary: Connect to Git repo
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiId}}'
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
          example: '{{apiVersionId}}'
        - name: X-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                repository:
                  type: object
                  required:
                    - id
                    - name
                    - owner
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    owner:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                service:
                  type: string
                tokenId:
                  type: string
                userConfig:
                  type: object
                  required:
                    - branches
                    - paths
                  properties:
                    branches:
                      type: object
                      required:
                        - main
                        - develop
                      properties:
                        main:
                          type: string
                        develop:
                          type: string
                    paths:
                      type: object
                      required:
                        - collection
                        - schema
                      properties:
                        collection:
                          type: string
                        schema:
                          type: string
            example:
              repository:
                id: repoId
                name: repository name
                owner:
                  id: owner
                  name: owner name
              service: 3rd party service name such as github or bitbucket
              tokenId: >-
                Oauth token id for github/bitbucket received during
                authentication
              userConfig:
                branches:
                  main: the main branch used for tracking releases
                  develop: the development branch for pushing/pulling the changes
                paths:
                  collection: the path where we should sync collections
                  schema: the path where we should sync schemas
      responses:
        default:
          description: No responses available
    delete:
      tags:
        - Git Integration
      summary: Unlink for API from repository
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: X-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - result
                    properties:
                      result:
                        type: boolean
              example:
                model_id: 406363bd-9caf-4d86-942d-ea84cbb1eb1c
                meta:
                  model: apiversion
                  action: unlinkFromRepository
                data:
                  result: true
          description: Successul unlink of an API from repository
        '403':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - owner
                          - message
                        properties:
                          model:
                            type: string
                          owner:
                            type: string
                          message:
                            type: string
              example:
                error:
                  name: forbiddenError
                  message: You are not permitted to perform the action.
                  details:
                    model: apirepository
                    owner: shreys7
                    message: You do not have access to perform this action on the API
          description: Forbidden Error
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                    properties:
                      name:
                        type: string
                      message:
                        type: string
              example:
                error:
                  name: apiRepositoryNotFoundError
                  message: >-
                    We could not find the api-repository link you are looking
                    for
          description: 'Repostiory already unlinked, i.e Not Found'
      servers:
        - url: 'https://api-dev-platform.postman.tech'
  /apis/{apiId}/versions/{apiVersionId}/repository/changes-to-be-pushed:
    get:
      tags:
        - Git Integration
      summary: Changes to be pushed
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
          required: true
        - name: branch
          in: query
          schema:
            type: string
          example: '{{branch}}'
        - name: X-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Successful fetch of changes
      servers:
        - url: 'https://api-dev-platform.postman.tech'
  /apis/{apiId}/versions/{apiVersionId}/releases/{id}/subscribe:
    post:
      tags:
        - Socket only endpoints
      summary: Subscribe to a release
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
            nullable: true
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
            nullable: true
          required: true
        - name: id
          in: path
          schema:
            type: string
            nullable: true
          required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - subscription
                    properties:
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              example:
                meta:
                  model: release
                  action: subscribe
                data:
                  subscription:
                    id: >-
                      apis/{{apiId}}/apiversions/{{apiVersionId}}/releases/{{id}}
          description: '[Success] Subscribe to a release'
    delete:
      tags:
        - Socket only endpoints
      summary: Unsubscribe to a release
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
            nullable: true
          required: true
        - name: apiVersionId
          in: path
          schema:
            type: string
            nullable: true
          required: true
        - name: id
          in: path
          schema:
            type: string
            nullable: true
          required: true
      responses:
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - subscription
                    properties:
                      subscription:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
              example:
                meta:
                  model: release
                  action: unsubscribe
                data:
                  subscription:
                    id: >-
                      apis/{{apiId}}/apiversions/{{apiVersionId}}/releases/{{id}}
          description: '[Success] Unsubscribe to a release'
  /apis/{apiId}/versions/{versionId}/releases:
    post:
      tags:
        - Release
      summary: Create a new release
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
          example: 887f7542-487c-4754-b0b9-232f1feffd79
        - name: versionId
          in: path
          schema:
            type: string
          required: true
          example: 75fe8592-0568-4c37-9ba5-1201fb6ff5ea
        - name: x-access-token
          in: header
          schema:
            type: string
          example: >-
            6a6c5133ada94a44ed257745a5e75412c64423ebe5d7dd10f82344d6f10bacafa654e43ba11a91b07a5c81b7a82b5be1c89c9c496936df8cd3d8b04988007206
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                          - param
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          owner:
                            type: string
                          param:
                            type: string
              examples:
                Example1:
                  value:
                    error:
                      name: instanceNotFoundError
                      message: We could not find the apiversion you are looking for
                      details:
                        model: apiversion
                        model_id: API1V1
                        owner: U1
                Example2:
                  value:
                    error:
                      name: paramMissingError
                      message: Parameter is missing in the request.
                      details:
                        param: name
            text/plain:
              schema:
                type: string
          description: ( 404 When API Version is invalid ) Create a new release
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          owner:
                            type: string
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the API you are looking for
                  details:
                    model: api
                    model_id: API1V1
                    owner: U1
          description: ( 404 When API is invalid ) Create a new release
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - summary
                      - description
                      - visibility
                      - gitTag
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      summary:
                        type: string
                      description:
                        type: string
                      visibility:
                        type: string
                      gitTag:
                        type: string
              example:
                model_id: '{{releaseId}}'
                meta:
                  model: release
                  action: create
                data:
                  id: '{{releaseId}}'
                  name: '1.2'
                  summary: My first release summary
                  description: My first release description
                  visibility: public
                  gitTag: Tag 1
          description: ( 200  OK ) Create a new release
    get:
      tags:
        - Release
      summary: List all releases
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: versionId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - apiVersion
                        - id
                        - name
                        - summary
                        - description
                        - visibility
                        - entities
                        - createdBy
                        - updatedBy
                        - createdAt
                        - updatedAt
                        - transactionId
                      properties:
                        apiVersion:
                          type: string
                        id:
                          type: string
                        name:
                          type: string
                        summary:
                          type: string
                        description:
                          type: string
                        visibility:
                          type: string
                        entities:
                          type: object
                          required:
                            - tests
                            - schemas
                            - testsuites
                            - contracttests
                            - documentations
                            - integrationtests
                          properties:
                            tests:
                              type: array
                              items:
                                type: object
                                required:
                                  - tag
                                  - entityId
                                  - entityType
                                  - relationType
                                properties:
                                  tag:
                                    type: string
                                  entityId:
                                    type: string
                                  entityType:
                                    type: string
                                  relationType:
                                    type: string
                            schemas:
                              type: array
                              items:
                                type: object
                                required:
                                  - tag
                                  - entityId
                                  - entityType
                                  - relationType
                                properties:
                                  tag:
                                    type: string
                                  entityId:
                                    type: string
                                  entityType:
                                    type: string
                                  relationType:
                                    type: string
                            testsuites:
                              type: array
                              items:
                                type: object
                                required:
                                  - tag
                                  - entityId
                                  - entityType
                                  - relationType
                                properties:
                                  tag:
                                    type: string
                                  entityId:
                                    type: string
                                  entityType:
                                    type: string
                                  relationType:
                                    type: string
                            contracttests:
                              type: array
                              items:
                                type: object
                                required:
                                  - tag
                                  - entityId
                                  - entityType
                                  - relationType
                                properties:
                                  tag:
                                    type: string
                                  entityId:
                                    type: string
                                  entityType:
                                    type: string
                                  relationType:
                                    type: string
                            documentations:
                              type: array
                              items:
                                type: object
                                required:
                                  - tag
                                  - entityId
                                  - entityType
                                  - relationType
                                properties:
                                  tag:
                                    type: string
                                  entityId:
                                    type: string
                                  entityType:
                                    type: string
                                  relationType:
                                    type: string
                            integrationtests:
                              type: array
                              items:
                                type: object
                                required:
                                  - tag
                                  - entityId
                                  - entityType
                                  - relationType
                                properties:
                                  tag:
                                    type: string
                                  entityId:
                                    type: string
                                  entityType:
                                    type: string
                                  relationType:
                                    type: string
                        createdBy:
                          type: string
                          format: color
                        updatedBy:
                          type: string
                          format: color
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        transactionId:
                          type: string
              examples:
                Example1:
                  value:
                    meta:
                      model: release
                      action: findall
                    data:
                      - apiVersion: 10819bfe-19c1-47e4-b172-3dcfa9bd62e3
                        id: 4fe8f8b2-4571-4d9e-b5c0-1bbfc499329f
                        name: release doc
                        summary: r11
                        description: r1
                        visibility: public
                        entities:
                          schemas:
                            - tag: bdca84bc-f348-4c7e-9e5c-aacb236551fd
                              entityId: 8f40961a-8295-4b6c-b5d4-d2fd9be3281b
                              entityType: schema
                              relationType: schema
                          documentations:
                            - tag: 8891af4e-d0f7-4e0f-afd1-c509533d0ee1
                              entityId: 525986-550e55a2-09a3-4eb7-af02-5148754a8e8a
                              entityType: collection
                              relationType: documentation
                          integrationtests:
                            - tag: 9d983bc9-1dd0-40a0-a1ea-1b6c3302fb07
                              entityId: 525986-441cfffb-542f-40b7-a52c-a6a5c0c43615
                              entityType: collection
                              relationType: integrationtest
                        createdBy: '525986'
                        updatedBy: '525986'
                        createdAt: '2021-08-11T12:53:15.000Z'
                        updatedAt: '2021-08-11T12:53:15.000Z'
                        transactionId: 0a390c18-5238-4999-903b-b28a6a120bee
                      - apiVersion: 10819bfe-19c1-47e4-b172-3dcfa9bd62e3
                        id: 73283fc1-682d-4f82-96bc-4856b5295823
                        name: Release with doc
                        description: doc release
                        visibility: public
                        entities:
                          schemas:
                            - tag: ebfcdd5e-aea9-4740-b299-436fe45d73b7
                              entityId: 8f40961a-8295-4b6c-b5d4-d2fd9be3281b
                              entityType: schema
                              relationType: schema
                          documentations:
                            - tag: 4169a89b-f34e-4d13-b94b-47068e1b7b4f
                              entityId: 525986-1bb63f31-fac1-44c9-a8b4-0bb325ab79cc
                              entityType: collection
                              relationType: documentation
                          integrationtests:
                            - tag: b121b8b7-8037-40d3-9936-59ca9d857cbc
                              entityId: 525986-441cfffb-542f-40b7-a52c-a6a5c0c43615
                              entityType: collection
                              relationType: integrationtest
                        createdBy: '525986'
                        updatedBy: '525986'
                        createdAt: '2021-08-11T11:26:28.000Z'
                        updatedAt: '2021-08-11T11:26:28.000Z'
                        transactionId: a975242f-84d3-4688-acd8-ee427c96a170
                      - apiVersion: 10819bfe-19c1-47e4-b172-3dcfa9bd62e3
                        id: 8d62d805-1fd8-41a4-8f97-19b8d96376dd
                        name: r33
                        description: r3
                        visibility: public
                        entities:
                          schemas:
                            - tag: 684a914d-6d8d-44fa-a912-74ec3610a01a
                              entityId: 8f40961a-8295-4b6c-b5d4-d2fd9be3281b
                              entityType: schema
                              relationType: schema
                          documentations:
                            - tag: 3daa1777-77d4-4f9d-8782-25babd81e83e
                              entityId: 525986-550e55a2-09a3-4eb7-af02-5148754a8e8a
                              entityType: collection
                              relationType: documentation
                          integrationtests:
                            - tag: f5105af2-e2bf-4531-b950-9935e0e44377
                              entityId: 525986-441cfffb-542f-40b7-a52c-a6a5c0c43615
                              entityType: collection
                              relationType: integrationtest
                        createdBy: '525986'
                        updatedBy: '525986'
                        createdAt: '2021-08-18T11:47:56.000Z'
                        updatedAt: '2021-08-18T11:47:56.000Z'
                        transactionId: 7c637352-c9b2-476c-ba20-58d2d303dfe3
                      - apiVersion: 10819bfe-19c1-47e4-b172-3dcfa9bd62e3
                        id: 93d34f76-f637-4316-bd6b-fb51119caf30
                        name: Release R1
                        description: >-
                          The admin.analytics.getFile method now returns daily
                          data about conversations in public channels.
                        visibility: public
                        entities:
                          schemas:
                            - tag: 00f60a39-1878-4794-88f3-2c9b10e4d1a5
                              entityId: 8f40961a-8295-4b6c-b5d4-d2fd9be3281b
                              entityType: schema
                              relationType: schema
                        createdBy: '525986'
                        updatedBy: '525986'
                        createdAt: '2021-08-09T15:50:47.000Z'
                        updatedAt: '2021-08-09T15:50:47.000Z'
                        transactionId: 6b99f540-4e0f-4da2-8fed-7a79356e6647
                      - apiVersion: 10819bfe-19c1-47e4-b172-3dcfa9bd62e3
                        id: ed58e593-4d95-4b89-8180-751c7ad04a6a
                        name: R1
                        description: RELEASE
                        visibility: public
                        entities:
                          schemas:
                            - tag: f8fab867-1f77-418e-ac53-6d583a498a08
                              entityId: 8f40961a-8295-4b6c-b5d4-d2fd9be3281b
                              entityType: schema
                              relationType: schema
                          documentations:
                            - tag: 86e7aed6-6d13-4e8d-9e07-fa760824fbdc
                              entityId: 525986-550e55a2-09a3-4eb7-af02-5148754a8e8a
                              entityType: collection
                              relationType: documentation
                          integrationtests:
                            - tag: aa77b566-f8ff-40b8-a5ab-1786a465d60f
                              entityId: 525986-441cfffb-542f-40b7-a52c-a6a5c0c43615
                              entityType: collection
                              relationType: integrationtest
                        createdBy: '525986'
                        updatedBy: '525986'
                        createdAt: '2021-08-17T15:56:23.000Z'
                        updatedAt: '2021-08-17T15:56:23.000Z'
                        transactionId: 17b54a22-f421-40b6-b5be-614edf1e0724
                Example2:
                  value:
                    meta:
                      model: release
                      action: findall
                    data:
                      - apiVersion: 6e2b2d6d-5914-49f4-afa8-a8f3d7eee852
                        id: 134a9075-629d-4b7a-bd93-61896336fdfc
                        name: another release
                        description: test release
                        visibility: public
                        entities:
                          tests:
                            - tag: 77d28594-1839-4939-8679-f888e3fbee5e
                              entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                              entityType: collection
                              relationType: test
                            - tag: 7618e365-7bcc-47db-ad0c-b6d2c70769d4
                              entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                              entityType: collection
                              relationType: test
                            - tag: d3d1b05a-9fbf-4b46-9898-0e08fe50d097
                              entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                              entityType: collection
                              relationType: test
                            - tag: 9b61cb20-32f6-4b3d-9f43-7e5557c1f630
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: test
                            - tag: 267a3513-73b1-418c-81ad-bb5fee5b80c6
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: test
                            - tag: 1b88977e-0123-4613-8b9e-d37a2d8f26e7
                              entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                              entityType: collection
                              relationType: test
                            - tag: 82d6e82f-0dba-4cc6-9c09-b90011b4c45e
                              entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                              entityType: collection
                              relationType: test
                            - tag: 6ea51235-ba56-494d-9bea-388bf3179998
                              entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                              entityType: collection
                              relationType: test
                          schemas:
                            - tag: 179ebfa7-61a3-4bfd-b75a-2644a565f793
                              entityId: 304aa93a-504f-410d-b88b-9cec4c8c1630
                              entityType: schema
                              relationType: schema
                          testsuites:
                            - tag: 77d28594-1839-4939-8679-f888e3fbee5e
                              entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                              entityType: collection
                              relationType: testsuite
                            - tag: 7618e365-7bcc-47db-ad0c-b6d2c70769d4
                              entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                              entityType: collection
                              relationType: testsuite
                            - tag: d3d1b05a-9fbf-4b46-9898-0e08fe50d097
                              entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                              entityType: collection
                              relationType: testsuite
                            - tag: 9b61cb20-32f6-4b3d-9f43-7e5557c1f630
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: testsuite
                            - tag: 267a3513-73b1-418c-81ad-bb5fee5b80c6
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: testsuite
                            - tag: 1b88977e-0123-4613-8b9e-d37a2d8f26e7
                              entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                              entityType: collection
                              relationType: testsuite
                            - tag: 82d6e82f-0dba-4cc6-9c09-b90011b4c45e
                              entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                              entityType: collection
                              relationType: testsuite
                            - tag: 6ea51235-ba56-494d-9bea-388bf3179998
                              entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                              entityType: collection
                              relationType: testsuite
                          contracttests:
                            - tag: 9b61cb20-32f6-4b3d-9f43-7e5557c1f630
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: contracttest
                          documentations:
                            - tag: 3f7cf13b-a03e-4a02-81d1-61f6cad46576
                              entityId: 545941-b9eebc88-b14d-4d55-a498-11ffd27a9137
                              entityType: collection
                              relationType: documentation
                          integrationtests:
                            - tag: 267a3513-73b1-418c-81ad-bb5fee5b80c6
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: integrationtest
                        createdBy: '545941'
                        updatedBy: '545941'
                        createdAt: '2021-09-07T23:35:13.000Z'
                        updatedAt: '2021-09-07T23:35:13.000Z'
                        transactionId: c27989b5-4e90-4893-b2de-56a5d6a2ac01
                      - apiVersion: 6e2b2d6d-5914-49f4-afa8-a8f3d7eee852
                        id: 8c38fa36-2709-4056-90bf-6c5fc6c62a17
                        name: release 7
                        description: removed the forceful clubbing in the create
                        visibility: public
                        entities:
                          tests:
                            - tag: fb03ac82-29a8-4736-9c72-40bda41d7f66
                              entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                              entityType: collection
                              relationType: test
                            - tag: ffc030f3-66c9-44f8-9f3d-4a402a3a20ba
                              entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                              entityType: collection
                              relationType: test
                            - tag: ea8c6fca-c04a-4374-9a1b-db8c566a1372
                              entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                              entityType: collection
                              relationType: test
                            - tag: 9a8d907d-c64b-4ba4-8fc7-db496779667c
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: test
                            - tag: 38b14b7b-86c7-4bac-8db7-b82053ca5548
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: test
                            - tag: 03d84085-57d7-4fb0-b1f4-f8b3d9c7a44e
                              entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                              entityType: collection
                              relationType: test
                            - tag: dd24de68-80a9-436f-9126-555988181afe
                              entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                              entityType: collection
                              relationType: test
                            - tag: 1f31c0bb-d13e-4a1c-beb5-337d3ec190d5
                              entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                              entityType: collection
                              relationType: test
                          schemas:
                            - tag: fffbfa5b-36f0-400f-a2cc-54abb742e7d6
                              entityId: 304aa93a-504f-410d-b88b-9cec4c8c1630
                              entityType: schema
                              relationType: schema
                          testsuites:
                            - tag: 03d84085-57d7-4fb0-b1f4-f8b3d9c7a44e
                              entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                              entityType: collection
                              relationType: testsuite
                            - tag: dd24de68-80a9-436f-9126-555988181afe
                              entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                              entityType: collection
                              relationType: testsuite
                            - tag: 1f31c0bb-d13e-4a1c-beb5-337d3ec190d5
                              entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                              entityType: collection
                              relationType: testsuite
                            - tag: fb03ac82-29a8-4736-9c72-40bda41d7f66
                              entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                              entityType: collection
                              relationType: testsuite
                            - tag: ffc030f3-66c9-44f8-9f3d-4a402a3a20ba
                              entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                              entityType: collection
                              relationType: testsuite
                            - tag: ea8c6fca-c04a-4374-9a1b-db8c566a1372
                              entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                              entityType: collection
                              relationType: testsuite
                          contracttests:
                            - tag: 9a8d907d-c64b-4ba4-8fc7-db496779667c
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: contracttest
                          documentations:
                            - tag: ad51f969-3018-40d0-9690-72b2009962f1
                              entityId: 545941-b9eebc88-b14d-4d55-a498-11ffd27a9137
                              entityType: collection
                              relationType: documentation
                          integrationtests:
                            - tag: 38b14b7b-86c7-4bac-8db7-b82053ca5548
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: integrationtest
                        createdBy: '545941'
                        updatedBy: '545941'
                        createdAt: '2021-09-08T04:38:44.000Z'
                        updatedAt: '2021-09-08T04:38:44.000Z'
                        transactionId: bc37c324-13b9-43e3-89fc-70c5df459855
                      - apiVersion: 6e2b2d6d-5914-49f4-afa8-a8f3d7eee852
                        id: a5bbeeb9-4c6e-426e-90e9-e9f699172fc2
                        name: test release
                        description: this is a test release
                        visibility: public
                        entities:
                          tests:
                            - tag: 368524dd-06f6-4fec-afb3-e3b665baba41
                              entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                              entityType: collection
                              relationType: test
                            - tag: 4a4ee8c1-385a-4cba-9c16-bffb94aab232
                              entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                              entityType: collection
                              relationType: test
                            - tag: 2680b425-f427-4902-85da-2ad685805596
                              entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                              entityType: collection
                              relationType: test
                            - tag: 3468aad3-f7b8-488d-806b-7b402bb540e3
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: test
                            - tag: bc11d065-3262-4bde-9a63-d8d908ec9193
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: test
                            - tag: 42228238-5246-4810-8842-e7e8768a2d1e
                              entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                              entityType: collection
                              relationType: test
                            - tag: 6b70983f-cf4e-45a5-b9f4-0117b23d1280
                              entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                              entityType: collection
                              relationType: test
                            - tag: 2808868e-2eeb-4249-858b-9b8f44867a09
                              entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                              entityType: collection
                              relationType: test
                          schemas:
                            - tag: 9d9abe84-e11d-4826-b9ca-000881bc0fdf
                              entityId: 304aa93a-504f-410d-b88b-9cec4c8c1630
                              entityType: schema
                              relationType: schema
                          testsuites:
                            - tag: 368524dd-06f6-4fec-afb3-e3b665baba41
                              entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                              entityType: collection
                              relationType: testsuite
                            - tag: 4a4ee8c1-385a-4cba-9c16-bffb94aab232
                              entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                              entityType: collection
                              relationType: testsuite
                            - tag: 2680b425-f427-4902-85da-2ad685805596
                              entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                              entityType: collection
                              relationType: testsuite
                            - tag: 3468aad3-f7b8-488d-806b-7b402bb540e3
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: testsuite
                            - tag: bc11d065-3262-4bde-9a63-d8d908ec9193
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: testsuite
                            - tag: 42228238-5246-4810-8842-e7e8768a2d1e
                              entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                              entityType: collection
                              relationType: testsuite
                            - tag: 6b70983f-cf4e-45a5-b9f4-0117b23d1280
                              entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                              entityType: collection
                              relationType: testsuite
                            - tag: 2808868e-2eeb-4249-858b-9b8f44867a09
                              entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                              entityType: collection
                              relationType: testsuite
                          contracttests:
                            - tag: 3468aad3-f7b8-488d-806b-7b402bb540e3
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: contracttest
                          documentations:
                            - tag: 7257bb86-1123-45ab-8814-e371f90b761c
                              entityId: 545941-b9eebc88-b14d-4d55-a498-11ffd27a9137
                              entityType: collection
                              relationType: documentation
                          integrationtests:
                            - tag: bc11d065-3262-4bde-9a63-d8d908ec9193
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: integrationtest
                        createdBy: '545941'
                        updatedBy: '545941'
                        createdAt: '2021-09-07T21:50:57.000Z'
                        updatedAt: '2021-09-07T21:50:57.000Z'
                        transactionId: d95ebdbd-b464-45fe-aea2-966025168866
                      - apiVersion: 6e2b2d6d-5914-49f4-afa8-a8f3d7eee852
                        id: e809a345-d59a-49e2-9ac2-3197b393240d
                        name: release test
                        description: 'another release test '
                        visibility: public
                        entities:
                          tests:
                            - tag: 4b44a5d8-db00-44fa-bd2c-c504a60ffae8
                              entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                              entityType: collection
                              relationType: test
                            - tag: fe02bf99-0856-4102-9d03-a05d2d580726
                              entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                              entityType: collection
                              relationType: test
                            - tag: cc9554ba-d762-46ae-8f08-6639256daa5c
                              entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                              entityType: collection
                              relationType: test
                            - tag: a60ce132-19cb-40a5-a672-a523624a3c94
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: test
                            - tag: c93a65b6-ac7b-4345-bb00-e63a2b67ceda
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: test
                            - tag: 38755e44-578b-4e91-b84f-31dabf77bb96
                              entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                              entityType: collection
                              relationType: test
                            - tag: cb0b2849-9e36-4381-8e2e-6af00cdaa837
                              entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                              entityType: collection
                              relationType: test
                            - tag: f5cd2e1b-9250-4763-be99-c242e38b5814
                              entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                              entityType: collection
                              relationType: test
                          schemas:
                            - tag: fdc560f5-d274-4498-9f4e-54f45efd328d
                              entityId: 304aa93a-504f-410d-b88b-9cec4c8c1630
                              entityType: schema
                              relationType: schema
                          testsuites:
                            - tag: 38755e44-578b-4e91-b84f-31dabf77bb96
                              entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                              entityType: collection
                              relationType: testsuite
                            - tag: cb0b2849-9e36-4381-8e2e-6af00cdaa837
                              entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                              entityType: collection
                              relationType: testsuite
                            - tag: f5cd2e1b-9250-4763-be99-c242e38b5814
                              entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                              entityType: collection
                              relationType: testsuite
                            - tag: 4b44a5d8-db00-44fa-bd2c-c504a60ffae8
                              entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                              entityType: collection
                              relationType: testsuite
                            - tag: fe02bf99-0856-4102-9d03-a05d2d580726
                              entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                              entityType: collection
                              relationType: testsuite
                            - tag: cc9554ba-d762-46ae-8f08-6639256daa5c
                              entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                              entityType: collection
                              relationType: testsuite
                          contracttests:
                            - tag: a60ce132-19cb-40a5-a672-a523624a3c94
                              entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                              entityType: collection
                              relationType: contracttest
                          documentations:
                            - tag: 73523e98-3695-44a3-8fd9-d0a50c7cdddd
                              entityId: 545941-b9eebc88-b14d-4d55-a498-11ffd27a9137
                              entityType: collection
                              relationType: documentation
                          integrationtests:
                            - tag: c93a65b6-ac7b-4345-bb00-e63a2b67ceda
                              entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                              entityType: collection
                              relationType: integrationtest
                        createdBy: '545941'
                        updatedBy: '545941'
                        createdAt: '2021-09-08T05:13:26.000Z'
                        updatedAt: '2021-09-08T05:13:26.000Z'
                        transactionId: fae92550-f76a-4fb9-83b9-690b0a6993d9
          description: List all releases
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - apiVersion
                        - id
                        - name
                        - summary
                        - description
                        - visibility
                        - entities
                        - createdBy
                        - updatedBy
                        - createdAt
                        - updatedAt
                        - transactionId
                        - gitTag
                      properties:
                        apiVersion:
                          type: string
                        id:
                          type: string
                        name:
                          type: string
                        summary:
                          type: string
                        description:
                          type: string
                        visibility:
                          type: string
                        entities:
                          type: object
                          required:
                            - documentations
                          properties:
                            documentations:
                              type: array
                              items:
                                type: object
                                required:
                                  - tag
                                  - entityId
                                  - entityType
                                  - relationType
                                properties:
                                  tag:
                                    type: string
                                  entityId:
                                    type: string
                                  entityType:
                                    type: string
                                  relationType:
                                    type: string
                        createdBy:
                          type: string
                          format: color
                        updatedBy:
                          type: string
                          format: color
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                        transactionId:
                          type: string
                        gitTag:
                          type: string
              examples:
                Example1:
                  value:
                    meta:
                      model: release
                      action: findall
                    data: []
                Example2:
                  value:
                    meta:
                      model: release
                      action: findall
                    data:
                      - apiVersion: f5fa33de-de4b-46e6-ac63-3b2fcd7ba3a8
                        id: 5b946fe3-0516-4f78-ad4f-9d3463e85343
                        name: Testing
                        description: '0.2'
                        visibility: public
                        entities:
                          documentations:
                            - tag: bf332eb0-856e-4437-b7dd-08aa60da1e76
                              entityId: 525986-8005fa07-8976-471c-8608-baf06a40e9b2
                              entityType: collection
                              relationType: documentation
                        createdBy: '525986'
                        updatedBy: '525986'
                        createdAt: '2021-08-17T12:04:06.000Z'
                        updatedAt: '2021-08-17T12:04:06.000Z'
                        transactionId: e0970e72-db93-4cf3-9f39-56a888d1c89b
                        gitTag: ''
          description: No releases found
  /apis/{apiId}/versions/{versionId}/releases/{id}:
    patch:
      tags:
        - Release
      summary: Update a release
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: versionId
          in: path
          schema:
            type: string
          required: true
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - id
                      - name
                      - visibiltiy
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      visibiltiy:
                        type: string
                      gitTag:
                         type: string
              example:
                model_id: '{{releaseId}}'
                meta:
                  model: release
                  action: update
                data:
                  id: '{{releaseId}}'
                  name: Release 2
                  visibiltiy: private
                  gitTag: r1
          description: 200 OK
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - model_id
                          - owner
                        properties:
                          model:
                            type: string
                          model_id:
                            type: string
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the release you are looking for
                  details:
                    model: release
                    model_id: f4498d7
                    owner: '525986'
          description: 404 Not found
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - param
                        properties:
                          param:
                            type: string
              example:
                error:
                  name: invalidParamsError
                  message: The specified parameter is in an invalid format
                  details:
                    param: visibility
          description: 400 Bad Request
    delete:
      tags:
        - Release
      summary: Delete a release
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: versionId
          in: path
          schema:
            type: string
          required: true
        - name: id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
            example: {}
      responses:
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - action
                        properties:
                          model:
                            type: string
                          action:
                            type: string
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the release you are looking for
                  details:
                    model: release
                    action: destroy
          description: (404 Release Id not found) Delete a release
        default:
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
              example:
                model_id: '{{releaseId}}'
                meta:
                  model: release
                  action: delete
          description: ( 200 OK )Delete a release
    get:
      tags:
        - Release
      summary: Fetch details of a release
      parameters:
        - name: apiId
          in: path
          schema:
            type: string
          required: true
        - name: versionId
          in: path
          schema:
            type: string
          required: true
        - name: id
          in: path
          schema:
            type: string
          required: true
        - name: X-access-token
          in: header
          schema:
            type: string
          example: '{{access_token}}'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  model_id:
                    type: string
                  meta:
                    type: object
                    required:
                      - model
                      - action
                    properties:
                      model:
                        type: string
                      action:
                        type: string
                  data:
                    type: object
                    required:
                      - apiVersion
                      - id
                      - name
                      - summary
                      - description
                      - visibility
                      - entities
                      - createdBy
                      - updatedBy
                      - createdAt
                      - updatedAt
                      - transactionId
                    properties:
                      apiVersion:
                        type: string
                      id:
                        type: string
                      name:
                        type: string
                      summary:
                        type: string
                      description:
                        type: string
                      visibility:
                        type: string
                      entities:
                        type: object
                        required:
                          - schemas
                          - documentations
                          - integrationtests
                        properties:
                          schemas:
                            type: array
                            items:
                              type: object
                              required:
                                - tag
                                - entityId
                                - entityType
                                - relationType
                              properties:
                                tag:
                                  type: string
                                entityId:
                                  type: string
                                entityType:
                                  type: string
                                relationType:
                                  type: string
                          documentations:
                            type: array
                            items:
                              type: object
                              required:
                                - tag
                                - entityId
                                - entityType
                                - relationType
                              properties:
                                tag:
                                  type: string
                                entityId:
                                  type: string
                                entityType:
                                  type: string
                                relationType:
                                  type: string
                          integrationtests:
                            type: array
                            items:
                              type: object
                              required:
                                - tag
                                - entityId
                                - entityType
                                - relationType
                              properties:
                                tag:
                                  type: string
                                entityId:
                                  type: string
                                entityType:
                                  type: string
                                relationType:
                                  type: string
                          tests:
                            type: array
                            items:
                              type: object
                              required:
                                - tag
                                - entityId
                                - entityType
                                - relationType
                              properties:
                                tag:
                                  type: string
                                entityId:
                                  type: string
                                entityType:
                                  type: string
                                relationType:
                                  type: string
                          testsuites:
                            type: array
                            items:
                              type: object
                              required:
                                - tag
                                - entityId
                                - entityType
                                - relationType
                              properties:
                                tag:
                                  type: string
                                entityId:
                                  type: string
                                entityType:
                                  type: string
                                relationType:
                                  type: string
                          contracttests:
                            type: array
                            items:
                              type: object
                              required:
                                - tag
                                - entityId
                                - entityType
                                - relationType
                              properties:
                                tag:
                                  type: string
                                entityId:
                                  type: string
                                entityType:
                                  type: string
                                relationType:
                                  type: string
                      createdBy:
                        type: string
                        format: color
                      updatedBy:
                        type: string
                        format: color
                      createdAt:
                        type: string
                        format: date-time
                      updatedAt:
                        type: string
                        format: date-time
                      transactionId:
                        type: string
              examples:
                Example1:
                  value:
                    model_id: 8d62d805-1fd8-41a4-8f97-19b8d96376dd
                    meta:
                      model: release
                      action: findbyid
                    data:
                      apiVersion: 10819bfe-19c1-47e4-b172-3dcfa9bd62e3
                      id: 8d62d805-1fd8-41a4-8f97-19b8d96376dd
                      name: r33
                      description: r3
                      visibility: public
                      entities:
                        schemas:
                          - tag: 684a914d-6d8d-44fa-a912-74ec3610a01a
                            entityId: 8f40961a-8295-4b6c-b5d4-d2fd9be3281b
                            entityType: schema
                            relationType: schema
                        documentations:
                          - tag: 3daa1777-77d4-4f9d-8782-25babd81e83e
                            entityId: 525986-550e55a2-09a3-4eb7-af02-5148754a8e8a
                            entityType: collection
                            relationType: documentation
                        integrationtests:
                          - tag: f5105af2-e2bf-4531-b950-9935e0e44377
                            entityId: 525986-441cfffb-542f-40b7-a52c-a6a5c0c43615
                            entityType: collection
                            relationType: integrationtest
                      createdBy: '525986'
                      updatedBy: '525986'
                      createdAt: '2021-08-18T11:47:56.000Z'
                      updatedAt: '2021-08-18T11:47:56.000Z'
                      transactionId: 5aa8bcec-73cd-48a1-89d5-fee4e6dfd2fa
                Example2:
                  value:
                    model_id: e809a345-d59a-49e2-9ac2-3197b393240d
                    meta:
                      model: release
                      action: findbyid
                    data:
                      apiVersion: 6e2b2d6d-5914-49f4-afa8-a8f3d7eee852
                      id: e809a345-d59a-49e2-9ac2-3197b393240d
                      name: release test
                      summary: 'test release summary'
                      description: 'another release test '
                      visibility: public
                      entities:
                        tests:
                          - tag: 4b44a5d8-db00-44fa-bd2c-c504a60ffae8
                            entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                            entityType: collection
                            relationType: test
                          - tag: fe02bf99-0856-4102-9d03-a05d2d580726
                            entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                            entityType: collection
                            relationType: test
                          - tag: cc9554ba-d762-46ae-8f08-6639256daa5c
                            entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                            entityType: collection
                            relationType: test
                          - tag: a60ce132-19cb-40a5-a672-a523624a3c94
                            entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                            entityType: collection
                            relationType: test
                          - tag: c93a65b6-ac7b-4345-bb00-e63a2b67ceda
                            entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                            entityType: collection
                            relationType: test
                          - tag: 38755e44-578b-4e91-b84f-31dabf77bb96
                            entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                            entityType: collection
                            relationType: test
                          - tag: cb0b2849-9e36-4381-8e2e-6af00cdaa837
                            entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                            entityType: collection
                            relationType: test
                          - tag: f5cd2e1b-9250-4763-be99-c242e38b5814
                            entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                            entityType: collection
                            relationType: test
                        schemas:
                          - tag: fdc560f5-d274-4498-9f4e-54f45efd328d
                            entityId: 304aa93a-504f-410d-b88b-9cec4c8c1630
                            entityType: schema
                            relationType: schema
                        testsuites:
                          - tag: 38755e44-578b-4e91-b84f-31dabf77bb96
                            entityId: 545941-f66b942e-8fe2-49a3-9d25-34fe3fcd6f5b
                            entityType: collection
                            relationType: testsuite
                          - tag: cb0b2849-9e36-4381-8e2e-6af00cdaa837
                            entityId: 545941-41d74988-a6dd-443b-911b-5774001641f1
                            entityType: collection
                            relationType: testsuite
                          - tag: f5cd2e1b-9250-4763-be99-c242e38b5814
                            entityId: 545941-ab66c209-e61f-404d-9138-84c4e49e76b5
                            entityType: collection
                            relationType: testsuite
                          - tag: 4b44a5d8-db00-44fa-bd2c-c504a60ffae8
                            entityId: 545941-b49d65ea-941a-4cbe-aecb-e40fafbc4040
                            entityType: collection
                            relationType: testsuite
                          - tag: fe02bf99-0856-4102-9d03-a05d2d580726
                            entityId: 545941-276b1520-34ed-447b-8647-5da135df49f1
                            entityType: collection
                            relationType: testsuite
                          - tag: cc9554ba-d762-46ae-8f08-6639256daa5c
                            entityId: 545941-2d5b31a4-7db7-4686-a062-fa83413fab29
                            entityType: collection
                            relationType: testsuite
                        contracttests:
                          - tag: a60ce132-19cb-40a5-a672-a523624a3c94
                            entityId: 545941-12dc2cbf-a82a-4997-acdd-b92aaef7c2e8
                            entityType: collection
                            relationType: contracttest
                        documentations:
                          - tag: 73523e98-3695-44a3-8fd9-d0a50c7cdddd
                            entityId: 545941-b9eebc88-b14d-4d55-a498-11ffd27a9137
                            entityType: collection
                            relationType: documentation
                        integrationtests:
                          - tag: c93a65b6-ac7b-4345-bb00-e63a2b67ceda
                            entityId: 545941-33b8045d-8a59-4f20-9f65-a4dea8bf88c3
                            entityType: collection
                            relationType: integrationtest
                      createdBy: '545941'
                      updatedBy: '545941'
                      createdAt: '2021-09-08T05:13:26.000Z'
                      updatedAt: '2021-09-08T05:13:26.000Z'
                      transactionId: f7048c7d-a5ae-45ca-995a-805ee82be9ad
          description: Fetch details of a release
        '404':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: object
                    required:
                      - name
                      - message
                      - details
                    properties:
                      name:
                        type: string
                      message:
                        type: string
                      details:
                        type: object
                        required:
                          - model
                          - owner
                        properties:
                          model:
                            type: string
                          owner:
                            type: string
                            format: color
              example:
                error:
                  name: instanceNotFoundError
                  message: We could not find the release you are looking for
                  details:
                    model: release
                    owner: '545941'
          description: Release Id not found
  /apis/{apiId}/versions/{apiVersionId}/operations:
    get:
      summary: Get all operations
      operationId: getOperations
      description: Returns all operations
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiVersionId'
        - $ref: '#/components/parameters/fields'
        - name: releaseId
          in: query
          description: The ID of the Release
          required: false
          schema:
            type: string
            format: uuid
            example: 'f5f8b9e4-8b4e-4b2e-b9d6-f9f8b9e4b2d6'
      responses:
        200:
          $ref: '#/components/responses/operations'
        400:
          description:
            Bad Request. Possible reasons:
              - Invalid field name passed.
              - Release ID is not valid.
              - The query returned too many operations.
          $ref: '#/components/responses/error'
        403:
          description:
            Forbidden. Possible reasons:
              - The user does not have the relevant permissions on API ID or API Version ID.
          $ref: '#/components/responses/error'
        404:
          description:
            Not Found. Possible reasons:
              - API ID or API Version ID is not valid.
          $ref: '#/components/responses/error'
    post:
      summary: Create an operation
      operationId: createOperation
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiVersionId'
      requestBody:
        $ref: '#/components/requestBodies/createOperation'
      responses:
        200:
          $ref: '#/components/responses/operation'
        400:
          description:
            Bad Request. Possible reasons:
              - Identifier is not provided or invalid.
              - Definition is not in a valid format.
          $ref: '#/components/responses/error'
        403:
          description:
            Forbidden. Possible reasons:
              - The user does not have the relevant permissions on API ID or API Version ID.
          $ref: '#/components/responses/error'
        404:
          description:
            Not Found. Possible reasons:
              - API ID or API Version ID is not valid.
          $ref: '#/components/responses/error'
  /apis/{apiId}/versions/{apiVersionId}/operations/{operationId}:
    get:
      summary: Get an operation
      operationId: getOperation
      description: Returns the operation with the given ID
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiVersionId'
        - $ref: '#/components/parameters/operationId'
        - $ref: '#/components/parameters/fields'
      responses:
        200:
          $ref: '#/components/responses/operation'
        400:
          description:
            Bad Request. Possible reasons:
              - Invalid field name passed.
              - Operation ID is not valid.
          $ref: '#/components/responses/error'
        403:
          description:
            Forbidden. Possible reasons:
              - The user does not have the relevant permissions on API ID or API Version ID.
          $ref: '#/components/responses/error'
        404:
          description:
            Not Found. Possible reasons:
              - API ID or API Version ID is not valid.
              - Operation ID is not valid.
          $ref: '#/components/responses/error'
    patch:
      summary: Update an operation
      operationId: updateOperation
      description: Updates the operation with the given ID
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiVersionId'
        - $ref: '#/components/parameters/operationId'
      requestBody:
        $ref: 'https://json.schemastore.org/json-patch'
      responses:
        200:
          $ref: '#/components/responses/operation'
        400:
          description:
            Bad Request. Possible reasons:
              - Operation ID is not valid.
              - The patch request is not in a valid format.
          $ref: '#/components/responses/error'
        403:
          description:
            Forbidden. Possible reasons:
              - The user does not have the relevant permissions on API ID or API Version ID.
          $ref: '#/components/responses/error'
        404:
          description:
            Not Found. Possible reasons:
              - API ID or API Version ID is not valid.
              - Operation ID is not valid.
          $ref: '#/components/responses/error'
    delete:
      summary: Delete an operation
      operationId: deleteOperation
      description: Deletes the operation with the given ID
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiVersionId'
        - $ref: '#/components/parameters/operationId'
      responses:
        200:
          $ref: '#/components/responses/operation'
        403:
          description:
            Forbidden. Possible reasons:
              - The user does not have the relevant permissions on API ID or API Version ID.
          $ref: '#/components/responses/error'
        404:
          description:
            Not Found. Possible reasons:
              - API ID or API Version ID is not valid.
              - Operation ID is not valid.
          $ref: '#/components/responses/error'
  /apis/{apiId}/versions/{apiVersionId}/operations/modify:
    post:
      summary: Create/update/delete operations in bulk
      operationId: bulkUpsertOperations
      parameters:
        - $ref: '#/components/parameters/apiId'
        - $ref: '#/components/parameters/apiVersionId'
      requestBody:
        $ref: '#/components/requestBodies/bulkUpsertOperations'
      responses:
        200:
          description: Successfully executed
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    $ref: '#/components/schemas/meta'
        400:
          description:
            Bad Request. Possible reasons:
              - The request body is not in a valid format. Missing source or data.
              - The identifier is not provided or invalid for any of the operation.
              - The definition is not in a valid format for any of the operation.
          $ref: '#/components/responses/error'
        403:
          description:
            Forbidden. Possible reasons:
              - The user does not have the relevant permissions on API ID or API Version ID.
          $ref: '#/components/responses/error'
        404:
          description:
            Not Found. Possible reasons:
              - API ID or API Version ID is not valid.
          $ref: '#/components/responses/error'
components:
  schemas:
    watchersList200ResponseDataSubSchema:
      type: object
      required:
        - private
        - public
        - team
      properties:
        private:
          type: object
          required:
            - count
            - watchers
          properties:
            count:
              type: integer
            watchers:
              type: array
              items:
                type: object
                required:
                  - name
                  - profilePicUrl
                  - profileUrl
                properties:
                  name:
                    type: string
                  profilePicUrl:
                    type: string
                  profileUrl:
                    type: string
                    nullable: true
        public:
          type: object
          required:
            - count
            - watchers
          properties:
            count:
              type: integer
            watchers:
              type: array
              items:
                type: object
                required:
                  - name
                  - profilePicUrl
                  - profileUrl
                properties:
                  name:
                    type: string
                  profilePicUrl:
                    type: string
                  profileUrl:
                    type: string
        team:
          type: object
          required:
            - count
            - watchers
          properties:
            count:
              type: integer
            watchers:
              type: array
              items:
                type: object
                required:
                  - name
                  - profilePicUrl
                  - profileUrl
                properties:
                  name:
                    type: string
                  profilePicUrl:
                    type: string
                  profileUrl:
                    type: string
                    format: uri
    getRelationsInAVersion200ResponseDataSubSchema:
      type: object
      required:
        - contracttest
        - documentation
        - environment
        - integrationtest
        - mock
        - monitor
        - schema
        - testsuite
      properties:
        documentation:
          type: object
          required:
            - 392355ae-5f06-47b7-a5b6-854b8be41bd5
            - 5b32caea-903c-472e-81a2-2cb054ede666
          properties:
            392355ae-5f06-47b7-a5b6-854b8be41bd5:
              type: object
              required:
                - id
                - name
                - versiontag
                - createdBy
                - createdAt
                - updatedAt
                - actions
              properties:
                id:
                  type: string
                name:
                  type: string
                versiontag:
                  type: object
                  required:
                    - id
                    - name
                    - system
                    - indicators
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    system:
                      type: boolean
                    indicators:
                      type: array
                      items:
                        type: object
                        required:
                          - type
                          - name
                          - message
                        properties:
                          type:
                            type: string
                          name:
                            type: string
                          message:
                            type: object
                            required:
                              - template
                              - variables
                            properties:
                              template:
                                type: string
                              variables:
                                type: object
                                required:
                                  - type
                                  - docs_link
                                properties:
                                  type:
                                    type: string
                                  docs_link:
                                    type: string
                                    format: uri
                createdBy:
                  type: string
                  format: utc-millisec
                createdAt:
                  type: string
                  format: style
                updatedAt:
                  type: string
                actions:
                  type: object
                  required:
                    - edit
                  properties:
                    edit:
                      type: object
                      required:
                        - type
                        - data
                      properties:
                        type:
                          type: string
                        data:
                          type: string
            5b32caea-903c-472e-81a2-2cb054ede666:
              type: object
              required:
                - validation
                - actions
              properties:
                validation:
                  type: object
                  required:
                    - type
                    - message
                  properties:
                    type:
                      type: string
                    message:
                      type: string
                actions:
                  type: object
                  required:
                    - popup
                  properties:
                    popup:
                      type: object
                      required:
                        - description
                        - actions
                      properties:
                        description:
                          type: string
                        actions:
                          type: array
                          items:
                            type: object
        testsuite:
          type: object
          required:
            - b26bc935-7422-4f73-8d03-9bf212fb48ba
          properties:
            b26bc935-7422-4f73-8d03-9bf212fb48ba:
              type: object
              required:
                - validation
                - actions
              properties:
                validation:
                  type: object
                  required:
                    - type
                    - message
                  properties:
                    type:
                      type: string
                    message:
                      type: string
                actions:
                  type: object
                  required:
                    - popup
                  properties:
                    popup:
                      type: object
                      required:
                        - description
                        - actions
                      properties:
                        description:
                          type: string
                        actions:
                          type: array
                          items:
                            type: object
        integrationtest:
          type: object
          required:
            - 35c6bdbd-d602-4b37-9c87-1640fc8025c8
            - fe273bc4-09b5-4ee4-af35-c0312e59f87f
          properties:
            fe273bc4-09b5-4ee4-af35-c0312e59f87f:
              type: object
              required:
                - id
                - name
                - versionTag
                - updatedAt
              properties:
                id:
                  type: string
                name:
                  type: string
                versionTag:
                  type: object
                  required:
                    - id
                    - name
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                updatedAt:
                  type: string
                  format: date-time
            35c6bdbd-d602-4b37-9c87-1640fc8025c8:
              type: object
              required:
                - validation
                - actions
              properties:
                validation:
                  type: object
                  required:
                    - type
                    - message
                  properties:
                    type:
                      type: string
                    message:
                      type: string
                actions:
                  type: object
                  required:
                    - popup
                  properties:
                    popup:
                      type: object
                      required:
                        - description
                        - actions
                      properties:
                        description:
                          type: string
                        actions:
                          type: array
                          items:
                            type: object
        contracttest:
          type: object
          required:
            - 392355ae-5f06-47b7-a5b6-854b8be41bd5
            - bb69b435-a90a-44fe-aa49-f580eeb1be88
          properties:
            392355ae-5f06-47b7-a5b6-854b8be41bd5:
              type: object
              required:
                - id
                - name
                - createdAt
                - createdBy
              properties:
                id:
                  type: string
                name:
                  type: string
                versionTag:
                  type: object
                  required:
                    - id
                    - name
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                createdAt:
                  type: string
                  format: style
                createdBy:
                  type: string
                  format: utc-millisec
                updatedBy:
                  type: string
                  format: utc-millisec
                validation:
                  type: object
                  required:
                    - status
                    - message
                  properties:
                    status:
                      type: string
                    message:
                      type: string
                versiontag:
                  type: object
                  required:
                    - id
                    - name
                    - system
                    - indicators
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    system:
                      type: boolean
                    indicators:
                      type: array
                      items:
                        type: object
                        required:
                          - type
                          - name
                          - message
                        properties:
                          type:
                            type: string
                          name:
                            type: string
                          message:
                            type: object
                            required:
                              - template
                              - variables
                            properties:
                              template:
                                type: string
                              variables:
                                type: object
                                required:
                                  - type
                                  - docs_link
                                properties:
                                  type:
                                    type: string
                                  docs_link:
                                    type: string
                                    format: uri
                updatedAt:
                  type: string
            bb69b435-a90a-44fe-aa49-f580eeb1be88:
              type: object
              required:
                - validation
                - actions
              properties:
                validation:
                  type: object
                  required:
                    - type
                    - message
                  properties:
                    type:
                      type: string
                    message:
                      type: string
                actions:
                  type: object
                  required:
                    - popup
                  properties:
                    popup:
                      type: object
                      required:
                        - description
                        - actions
                      properties:
                        description:
                          type: string
                        actions:
                          type: array
                          items:
                            type: object
                            required:
                              - type
                              - label
                            properties:
                              type:
                                type: string
                              label:
                                type: string
    getRelationsInAVersion200ResponseSubSchema:
      type: object
      properties:
        meta:
          type: object
          required:
            - model
            - action
          properties:
            model:
              type: string
            action:
              type: string
            model_id:
              type: string
        data:
          type: object
          required:
            - contracttest
            - documentation
            - environment
            - integrationtest
            - mock
            - monitor
            - schema
            - testsuite
          properties:
            environment:
              type: object
              required:
                - 5670e8c6-6ae8-4913-8051-9663b9d88774
                - 9d1c8696-c4eb-44fe-bb44-afa52c7b0739
              properties:
                5670e8c6-6ae8-4913-8051-9663b9d88774:
                  type: object
                  required:
                    - id
                    - name
                    - versionTag
                    - updatedAt
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    versionTag:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                    updatedAt:
                      type: string
                      format: date-time
                9d1c8696-c4eb-44fe-bb44-afa52c7b0739:
                  type: object
                  required:
                    - id
                    - name
                    - versionTag
                    - updatedAt
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    versionTag:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                    updatedAt:
                      type: string
                      format: date-time
            mock:
              type: object
              required:
                - 63334d1b-a8d9-4d77-a6cd-c4b0877426dc
                - 8958c176-2d09-4ac8-831a-c991525bac4b
              properties:
                63334d1b-a8d9-4d77-a6cd-c4b0877426dc:
                  type: object
                  required:
                    - id
                    - url
                    - versionTag
                    - createdAt
                    - createdBy
                    - updatedBy
                    - validation
                  properties:
                    id:
                      type: string
                    url:
                      type: string
                      format: uri
                    versionTag:
                      type: object
                      required:
                        - id
                        - name
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                    createdAt:
                      type: string
                      format: style
                    createdBy:
                      type: string
                      format: utc-millisec
                    updatedBy:
                      type: string
                      format: utc-millisec
                    validation:
                      type: object
                      required:
                        - status
                        - message
                      properties:
                        status:
                          type: string
                        message:
                          type: string
                8958c176-2d09-4ac8-831a-c991525bac4b:
                  type: object
                  required:
                    - id
                    - name
                    - url
                    - versionTag
                    - updatedAt
                    - actions
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    url:
                      type: string
                      format: uri
                    versionTag:
                      type: object
                      required:
                        - id
                        - name
                        - system
                        - indicators
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        system:
                          type: boolean
                        indicators:
                          type: array
                          items:
                            type: object
                            required:
                              - type
                              - name
                              - message
                            properties:
                              type:
                                type: string
                              name:
                                type: string
                              message:
                                type: object
                                required:
                                  - template
                                  - variables
                                properties:
                                  template:
                                    type: string
                                  variables:
                                    type: object
                                    required:
                                      - type
                                      - docs_link
                                    properties:
                                      type:
                                        type: string
                                      docs_link:
                                        type: string
                                        format: uri
                    updatedAt:
                      type: string
                      format: date-time
                    actions:
                      type: object
                      required:
                        - copyLink
                        - edit
                      properties:
                        copyLink:
                          type: object
                          required:
                            - type
                            - data
                          properties:
                            type:
                              type: string
                            data:
                              type: string
                              format: uri
                        edit:
                          type: object
                          required:
                            - type
                            - data
                          properties:
                            type:
                              type: string
                            data:
                              type: string
                              format: uri
            monitor:
              type: object
              required:
                - ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af
              properties:
                ad7d7418-5b2f-43d6-ae78-dcf6eb5a49af:
                  type: object
                  required:
                    - id
                    - name
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    versionTag:
                      type: object
                      required:
                        - id
                        - name
                        - indicators
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        indicators:
                          type: array
                          items:
                            type: object
                            required:
                              - type
                              - name
                              - message
                            properties:
                              type:
                                type: string
                              name:
                                type: string
                              message:
                                type: object
                                required:
                                  - template
                                  - variables
                                properties:
                                  template:
                                    type: string
                                  variables:
                                    type: object
                                    required:
                                      - url
                                    properties:
                                      url:
                                        type: string
                    createdAt:
                      type: string
                      format: style
                    createdBy:
                      type: string
                      format: utc-millisec
                    updatedBy:
                      type: string
                      format: utc-millisec
                    validation:
                      type: object
                      required:
                        - status
                        - message
                      properties:
                        status:
                          type: string
                        message:
                          type: string
                    versiontag:
                      type: object
                      required:
                        - id
                        - name
                        - system
                        - indicators
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        system:
                          type: boolean
                        indicators:
                          type: array
                          items:
                            type: object
                            required:
                              - type
                              - name
                              - message
                            properties:
                              type:
                                type: string
                              name:
                                type: string
                              message:
                                type: object
                                required:
                                  - template
                                  - variables
                                properties:
                                  template:
                                    type: string
                                  variables:
                                    type: object
                                    required:
                                      - type
                                      - docs_link
                                    properties:
                                      type:
                                        type: string
                                      docs_link:
                                        type: string
                                        format: uri
                    updatedAt:
                      type: string
                      format: style
            schema:
              type: object
              required:
                - 5670e8c6-6ae8-4913-8051-9663b9d88774
              properties:
                5670e8c6-6ae8-4913-8051-9663b9d88774:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
        testsuite:
          type: object
          required:
            - 10c67fab-caa4-416b-b622-a74642be81ea
          properties:
            10c67fab-caa4-416b-b622-a74642be81ea:
              type: object
              required:
                - id
                - modelId
                - links
                - name
                - versionTag
                - updatedAt
                - createdAt
                - latestCollectionRun
                - validation
              properties:
                id:
                  type: string
                modelId:
                  type: string
                links:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: object
                      required:
                        - type
                        - action
                      properties:
                        type:
                          type: string
                        action:
                          type: string
                          format: uri
                name:
                  type: string
                versionTag:
                  type: object
                  required:
                    - id
                    - name
                    - system
                    - indicators
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    system:
                      type: boolean
                    indicators:
                      type: array
                      items:
                        type: object
                        required:
                          - type
                          - name
                          - message
                        properties:
                          type:
                            type: string
                          name:
                            type: string
                          message:
                            type: object
                            required:
                              - template
                              - variables
                            properties:
                              template:
                                type: string
                              variables:
                                type: object
                                required:
                                  - type
                                  - docs_link
                                properties:
                                  type:
                                    type: string
                                  docs_link:
                                    type: string
                                    format: uri
                updatedAt:
                  type: string
                  format: date-time
                createdAt:
                  type: string
                  format: date-time
                latestCollectionRun:
                  type: object
                  required:
                    - id
                    - failedTestCount
                    - passedTestCount
                  properties:
                    id:
                      type: string
                    failedTestCount:
                      type: integer
                    passedTestCount:
                      type: integer
                validation:
                  type: object
                  required:
                    - type
                    - message
                    - actions
                  properties:
                    type:
                      type: string
                    message:
                      type: string
                    actions:
                      type: object
                      required:
                        - popup
                      properties:
                        popup:
                          type: object
                          required:
                            - description
                            - actions
                          properties:
                            description:
                              type: string
                            actions:
                              type: array
                              items:
                                type: object
    getApiLinkedToACollectiondefaultResponseDataSubSchema:
      type: object
      required:
        - api
        - apiId
        - apiVersion
        - apiVersionId
        - createdAt
        - createdBy
        - description
        - id
        - isEditable
        - name
        - schema
        - summary
        - team
        - type
        - updatedAt
        - updatedBy
        - workspace
      properties:
        workspace:
          type: string
        isEditable:
          type: string
        type:
          type: string
        apiId:
          type: string
        apiVersionId:
          type: string
    operationSource:
      type: object
      properties:
        model:
          type: string
          description: Model in the Postman ecosystem
          example: 'schema'
        model_id:
          type: string
          format: uuid
          description: Unique identifier of the model
          example: '5670e8c6-6ae8-4913-8051-9663b9d88774'
        metadata:
          type: object
          description: Any additional metadata about the model
        fields:
          type: array
          items:
            type: string
          description: Fields that are sourced from this model
    operation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The globally unique identifier of the operation
          example: 'd8f9f8f9-f8f9-f8f9-f8f9-f8f9f8f9f8f9'
          readOnly: true
        identifier:
          type: string
          description: |
            Identifier that uniquely identifies the operation in the schema.
            This identifier is specific to the type of the schema and should be unique within the schema.
            For REST type APIs, this is method + path of the operation.
          example: 'POST /users'
        sources:
          type: array
          items:
            $ref: '#/components/schemas/operationSource'
          description: Sources which are used to create the operation
        definition:
          type: object
          description: The operation definition in JSON Schema draft 2020-12 format.
        createdAt:
          type: string
          format: date-time
          example: '2020-01-01T00:00:00.000Z'
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          example: '2020-01-01T00:00:00.000Z'
          readOnly: true
        createdBy:
          type: integer
          example: 788373
          readOnly: true
        updatedBy:
          type: integer
          example: 788373
          readOnly: true
    operations:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/operation'
    meta:
      type: object
      properties:
        model:
          type: string
          example: 'operation'
        action:
          type: string
          example: 'findAll'
    error:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the error
          example: 'paramMissingError'
        message:
          type: string
          description: The error message
          example: 'The operation with id d8f9f8f9-f8f9-f8f9-f8f9-f8f9f8f9f8f9 was not found'
        details:
          type: object
          description: Additional details about the error
  parameters:
    apiId:
      name: apiId
      in: path
      description: The ID of the API
      required: true
      schema:
        type: string
        format: uuid
      example: 'f5f8b9e4-8b4e-4b2e-b9d6-f9f8b9e4b2d6'
    apiVersionId:
      name: apiVersionId
      in: path
      description: The ID of the API version
      required: true
      schema:
        type: string
        format: uuid
      example: 'f5f8b9e4-8b4e-4b2e-b9d6-f9f8b9e4b2d6'
    operationId:
      name: operationId
      in: path
      description: The ID of the operation
      required: true
      schema:
        type: string
        format: uuid
      example: 'd8f9f8f9-f8f9-f8f9-f8f9-f8f9f8f9f8f9'
    fields:
      name: fields
      in: query
      description: The fields to include in the response
      required: false
      schema:
        type: string
      example: 'definition'
  requestBodies:
    createOperation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/operation'
    bulkUpsertOperations:
      content:
        application/json:
          schema:
            type: object
            properties:
              source:
                $ref: '#/components/schemas/operationSource'
              data:
                type: object
                properties:
                  operations:
                    type: array
                    items:
                      $ref: '#/components/schemas/operation'
  responses:
    error:
      description: Error response from API
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/error'
    operation:
      description: An individual operation
      content:
        application/json:
          schema:
            type: object
            properties:
              model_id:
                type: string
                format: uuid
                description: The ID of the operation
                example: 'f5f8b9e4-8b4e-4b2e-b9d6-f9f8b9e4b2d6'
              meta:
                $ref: '#/components/schemas/meta'
              data:
                $ref: '#/components/schemas/operation'
    operations:
      description: The list of operations
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                $ref: '#/components/schemas/meta'
              data:
                $ref: '#/components/schemas/operations'
  securitySchemes:
    x-access-token:
      type: apiKey
      name: x-access-token
      in: header
    basic-auth:
      type: http
      scheme: basic
tags:
  - name: Socket only endpoints
  - name: API
  - name: API Version
  - name: Schema
    description: "The checksum can be calculated using this function\n\n```\nfunction calculateChecksum (fileContent) {\n\trequire('crypto').createHash('md5').update(fileContent).digest('hex');\n}\n```"
  - name: Relations & Entities
  - name: Support endpoints
    description: These endpoints will be used by the support dashboard.
  - name: Validation
  - name: All APIs in a Workspace Subscription Events
    description: >-
      These include the events the client will receive on subscribing to the
      user channel.
  - name: Collection
  - name: Relations
  - name: Internal
  - name: Git Integration
  - name: Release
